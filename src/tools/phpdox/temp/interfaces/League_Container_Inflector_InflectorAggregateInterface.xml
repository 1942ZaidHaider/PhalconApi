<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="League\Container\Inflector\InflectorAggregateInterface" namespace="League\Container\Inflector" name="InflectorAggregateInterface" abstract="false" final="false" start="8" end="27">
  <file path="../vendor/league/container/src/Inflector" file="InflectorAggregateInterface.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/league/container/src/Inflector/InflectorAggregateInterface.php" size="629" time="2021-07-09T08:23:52+00:00" unixtime="1625819032" sha1="7462d1a0484e16804d21713004df30a5c6ba5658" relative="vendor/league/container/src/Inflector/InflectorAggregateInterface.php"/>
  <extends full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
  <extends full="IteratorAggregate" namespace="" name="IteratorAggregate"/>
  <method name="add" start="18" end="18" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Add an inflector to the aggregate."/>
      <param type="string" variable="$type"/>
      <param type="object" variable="$callback">
        <type full="League\Container\Inflector\callable" namespace="League\Container\Inflector" name="callable"/>
      </param>
      <return type="object">
        <type full="League\Container\Inflector\Inflector" namespace="League\Container\Inflector" name="Inflector"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="League\Container\Inflector\Inflector" namespace="League\Container\Inflector" name="Inflector"/>
    </return>
    <parameter name="type" byreference="false" type="string"/>
    <parameter name="callback" byreference="false" type="callable" default="NULL"/>
  </method>
  <method name="inflect" start="26" end="26" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Applies all inflectors to an object."/>
      <param type="object" variable="$object"/>
      <return type="object"/>
    </docblock>
    <parameter name="object" byreference="false" type="{unknown}"/>
  </method>
  <parent full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface">
    <method name="setContainer" start="16" end="16" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set a container"/>
        <param type="object" variable="$container">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </param>
        <return resolution="self" type="object">
          <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
      </return>
      <parameter name="container" byreference="false" type="object">
        <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
      </parameter>
    </method>
    <method name="getContainer" start="23" end="23" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the container"/>
        <return type="object">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
      </return>
    </method>
    <method name="setLeagueContainer" start="32" end="32" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set a container. This will be removed in favour of setContainer receiving Container in next major release."/>
        <param type="object" variable="$container">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </param>
        <return resolution="self" type="object">
          <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
      </return>
      <parameter name="container" byreference="false" type="object">
        <type full="League\Container\Container" namespace="League\Container" name="Container"/>
      </parameter>
    </method>
    <method name="getLeagueContainer" start="39" end="39" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the container. This will be removed in favour of getContainer returning Container in next major release."/>
        <return type="object">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Container" namespace="League\Container" name="Container"/>
      </return>
    </method>
  </parent>
  <parent full="IteratorAggregate" namespace="" name="IteratorAggregate">
    <extends full="Traversable" namespace="" name="Traversable"/>
    <method name="getIterator" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Retrieve an external iterator"/>
      <return type="Traversable"/>
    </docblock>
  </method>
  </parent>
  <parent full="Traversable" namespace="" name="Traversable"/>
  <implementors>
    <class full="League\Container\Inflector\InflectorAggregate" namespace="League\Container\Inflector" name="InflectorAggregate"/>
  </implementors>
</interface>
