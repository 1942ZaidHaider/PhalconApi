<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="PhpCsFixer\Fixer\WhitespacesAwareFixerInterface" namespace="PhpCsFixer\Fixer" name="WhitespacesAwareFixerInterface" abstract="false" final="false" start="20" end="23">
  <file path="../vendor/friendsofphp/php-cs-fixer/src/Fixer" file="WhitespacesAwareFixerInterface.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/friendsofphp/php-cs-fixer/src/Fixer/WhitespacesAwareFixerInterface.php" size="547" time="2021-11-15T17:17:55+00:00" unixtime="1636996675" sha1="954db415e8489e9836e9ebb2822875de389c3868" relative="vendor/friendsofphp/php-cs-fixer/src/Fixer/WhitespacesAwareFixerInterface.php"/>
  <docblock>
    <description/>
    <author value="Dariusz RumiÅ„ski &lt;dariusz.ruminski@gmail.com&gt;"/>
  </docblock>
  <extends full="PhpCsFixer\Fixer\FixerInterface" namespace="PhpCsFixer\Fixer" name="FixerInterface"/>
  <method name="setWhitespacesConfig" start="22" end="22" abstract="false" final="false" static="false" visibility="public">
    <parameter name="config" byreference="false" type="object">
      <type full="PhpCsFixer\WhitespacesFixerConfig" namespace="PhpCsFixer" name="WhitespacesFixerConfig"/>
    </parameter>
  </method>
  <implementors>
    <class full="PhpCsFixer\AbstractLinesBeforeNamespaceFixer" namespace="PhpCsFixer" name="AbstractLinesBeforeNamespaceFixer"/>
    <class full="PhpCsFixer\Fixer\Import\OrderedImportsFixer" namespace="PhpCsFixer\Fixer\Import" name="OrderedImportsFixer"/>
    <class full="PhpCsFixer\Fixer\Import\SingleImportPerStatementFixer" namespace="PhpCsFixer\Fixer\Import" name="SingleImportPerStatementFixer"/>
    <class full="PhpCsFixer\Fixer\Import\SingleLineAfterImportsFixer" namespace="PhpCsFixer\Fixer\Import" name="SingleLineAfterImportsFixer"/>
    <class full="PhpCsFixer\Fixer\Import\GlobalNamespaceImportFixer" namespace="PhpCsFixer\Fixer\Import" name="GlobalNamespaceImportFixer"/>
    <class full="PhpCsFixer\Fixer\ClassNotation\NoBlankLinesAfterClassOpeningFixer" namespace="PhpCsFixer\Fixer\ClassNotation" name="NoBlankLinesAfterClassOpeningFixer"/>
    <class full="PhpCsFixer\Fixer\ClassNotation\ClassAttributesSeparationFixer" namespace="PhpCsFixer\Fixer\ClassNotation" name="ClassAttributesSeparationFixer"/>
    <class full="PhpCsFixer\Fixer\ClassNotation\SingleClassElementPerStatementFixer" namespace="PhpCsFixer\Fixer\ClassNotation" name="SingleClassElementPerStatementFixer"/>
    <class full="PhpCsFixer\Fixer\ClassNotation\ClassDefinitionFixer" namespace="PhpCsFixer\Fixer\ClassNotation" name="ClassDefinitionFixer"/>
    <class full="PhpCsFixer\Fixer\ClassNotation\MethodSeparationFixer" namespace="PhpCsFixer\Fixer\ClassNotation" name="MethodSeparationFixer"/>
    <class full="PhpCsFixer\Fixer\Phpdoc\PhpdocAlignFixer" namespace="PhpCsFixer\Fixer\Phpdoc" name="PhpdocAlignFixer"/>
    <class full="PhpCsFixer\Fixer\Phpdoc\PhpdocAddMissingParamAnnotationFixer" namespace="PhpCsFixer\Fixer\Phpdoc" name="PhpdocAddMissingParamAnnotationFixer"/>
    <class full="PhpCsFixer\Fixer\Phpdoc\PhpdocLineSpanFixer" namespace="PhpCsFixer\Fixer\Phpdoc" name="PhpdocLineSpanFixer"/>
    <class full="PhpCsFixer\Fixer\Phpdoc\PhpdocSummaryFixer" namespace="PhpCsFixer\Fixer\Phpdoc" name="PhpdocSummaryFixer"/>
    <class full="PhpCsFixer\Fixer\Phpdoc\AlignMultilineCommentFixer" namespace="PhpCsFixer\Fixer\Phpdoc" name="AlignMultilineCommentFixer"/>
    <class full="PhpCsFixer\Fixer\ReturnNotation\BlankLineBeforeReturnFixer" namespace="PhpCsFixer\Fixer\ReturnNotation" name="BlankLineBeforeReturnFixer"/>
    <class full="PhpCsFixer\Fixer\Strict\DeclareStrictTypesFixer" namespace="PhpCsFixer\Fixer\Strict" name="DeclareStrictTypesFixer"/>
    <class full="PhpCsFixer\Fixer\Semicolon\NoMultilineWhitespaceBeforeSemicolonsFixer" namespace="PhpCsFixer\Fixer\Semicolon" name="NoMultilineWhitespaceBeforeSemicolonsFixer"/>
    <class full="PhpCsFixer\Fixer\Semicolon\MultilineWhitespaceBeforeSemicolonsFixer" namespace="PhpCsFixer\Fixer\Semicolon" name="MultilineWhitespaceBeforeSemicolonsFixer"/>
    <class full="PhpCsFixer\Fixer\Whitespace\NoExtraBlankLinesFixer" namespace="PhpCsFixer\Fixer\Whitespace" name="NoExtraBlankLinesFixer"/>
    <class full="PhpCsFixer\Fixer\Whitespace\SingleBlankLineAtEofFixer" namespace="PhpCsFixer\Fixer\Whitespace" name="SingleBlankLineAtEofFixer"/>
    <class full="PhpCsFixer\Fixer\Whitespace\LineEndingFixer" namespace="PhpCsFixer\Fixer\Whitespace" name="LineEndingFixer"/>
    <class full="PhpCsFixer\Fixer\Whitespace\IndentationTypeFixer" namespace="PhpCsFixer\Fixer\Whitespace" name="IndentationTypeFixer"/>
    <class full="PhpCsFixer\Fixer\Whitespace\BlankLineBeforeStatementFixer" namespace="PhpCsFixer\Fixer\Whitespace" name="BlankLineBeforeStatementFixer"/>
    <class full="PhpCsFixer\Fixer\Whitespace\HeredocIndentationFixer" namespace="PhpCsFixer\Fixer\Whitespace" name="HeredocIndentationFixer"/>
    <class full="PhpCsFixer\Fixer\Whitespace\NoWhitespaceInBlankLineFixer" namespace="PhpCsFixer\Fixer\Whitespace" name="NoWhitespaceInBlankLineFixer"/>
    <class full="PhpCsFixer\Fixer\Whitespace\NoExtraConsecutiveBlankLinesFixer" namespace="PhpCsFixer\Fixer\Whitespace" name="NoExtraConsecutiveBlankLinesFixer"/>
    <class full="PhpCsFixer\Fixer\Whitespace\ArrayIndentationFixer" namespace="PhpCsFixer\Fixer\Whitespace" name="ArrayIndentationFixer"/>
    <class full="PhpCsFixer\Fixer\Whitespace\MethodChainingIndentationFixer" namespace="PhpCsFixer\Fixer\Whitespace" name="MethodChainingIndentationFixer"/>
    <class full="PhpCsFixer\Fixer\Basic\BracesFixer" namespace="PhpCsFixer\Fixer\Basic" name="BracesFixer"/>
    <class full="PhpCsFixer\Fixer\FunctionNotation\MethodArgumentSpaceFixer" namespace="PhpCsFixer\Fixer\FunctionNotation" name="MethodArgumentSpaceFixer"/>
    <class full="PhpCsFixer\Fixer\PhpUnit\PhpUnitSizeClassFixer" namespace="PhpCsFixer\Fixer\PhpUnit" name="PhpUnitSizeClassFixer"/>
    <class full="PhpCsFixer\Fixer\PhpUnit\PhpUnitTestAnnotationFixer" namespace="PhpCsFixer\Fixer\PhpUnit" name="PhpUnitTestAnnotationFixer"/>
    <class full="PhpCsFixer\Fixer\PhpUnit\PhpUnitNoExpectationAnnotationFixer" namespace="PhpCsFixer\Fixer\PhpUnit" name="PhpUnitNoExpectationAnnotationFixer"/>
    <class full="PhpCsFixer\Fixer\PhpUnit\PhpUnitExpectationFixer" namespace="PhpCsFixer\Fixer\PhpUnit" name="PhpUnitExpectationFixer"/>
    <class full="PhpCsFixer\Fixer\PhpUnit\PhpUnitTestClassRequiresCoversFixer" namespace="PhpCsFixer\Fixer\PhpUnit" name="PhpUnitTestClassRequiresCoversFixer"/>
    <class full="PhpCsFixer\Fixer\PhpUnit\PhpUnitInternalClassFixer" namespace="PhpCsFixer\Fixer\PhpUnit" name="PhpUnitInternalClassFixer"/>
    <class full="PhpCsFixer\Fixer\NamespaceNotation\CleanNamespaceFixer" namespace="PhpCsFixer\Fixer\NamespaceNotation" name="CleanNamespaceFixer"/>
    <class full="PhpCsFixer\Fixer\NamespaceNotation\BlankLineAfterNamespaceFixer" namespace="PhpCsFixer\Fixer\NamespaceNotation" name="BlankLineAfterNamespaceFixer"/>
    <class full="PhpCsFixer\Fixer\NamespaceNotation\NoBlankLinesBeforeNamespaceFixer" namespace="PhpCsFixer\Fixer\NamespaceNotation" name="NoBlankLinesBeforeNamespaceFixer"/>
    <class full="PhpCsFixer\Fixer\NamespaceNotation\NoLeadingNamespaceWhitespaceFixer" namespace="PhpCsFixer\Fixer\NamespaceNotation" name="NoLeadingNamespaceWhitespaceFixer"/>
    <class full="PhpCsFixer\Fixer\NamespaceNotation\SingleBlankLineBeforeNamespaceFixer" namespace="PhpCsFixer\Fixer\NamespaceNotation" name="SingleBlankLineBeforeNamespaceFixer"/>
    <class full="PhpCsFixer\Fixer\PhpTag\LinebreakAfterOpeningTagFixer" namespace="PhpCsFixer\Fixer\PhpTag" name="LinebreakAfterOpeningTagFixer"/>
    <class full="PhpCsFixer\Fixer\PhpTag\BlankLineAfterOpeningTagFixer" namespace="PhpCsFixer\Fixer\PhpTag" name="BlankLineAfterOpeningTagFixer"/>
    <class full="PhpCsFixer\Fixer\StringNotation\StringLineEndingFixer" namespace="PhpCsFixer\Fixer\StringNotation" name="StringLineEndingFixer"/>
    <class full="PhpCsFixer\Fixer\Comment\CommentToPhpdocFixer" namespace="PhpCsFixer\Fixer\Comment" name="CommentToPhpdocFixer"/>
    <class full="PhpCsFixer\Fixer\Comment\HeaderCommentFixer" namespace="PhpCsFixer\Fixer\Comment" name="HeaderCommentFixer"/>
    <class full="PhpCsFixer\Fixer\ControlStructure\NoBreakCommentFixer" namespace="PhpCsFixer\Fixer\ControlStructure" name="NoBreakCommentFixer"/>
  </implementors>
  <parent full="PhpCsFixer\Fixer\FixerInterface" namespace="PhpCsFixer\Fixer" name="FixerInterface">
    <method name="isCandidate" start="34" end="34" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Check if the fixer is a candidate for given Tokens collection.">Fixer is a candidate when the collection contains tokens that may be fixed
during fixer work. This could be considered as some kind of bloom filter.
When this method returns true then to the Tokens collection may or may not
need a fixing, but when this method returns false then the Tokens collection
need no fixing for sure.</description>
        <return type="object">
          <type full="PhpCsFixer\Fixer\bool" namespace="PhpCsFixer\Fixer" name="bool"/>
        </return>
      </docblock>
      <parameter name="tokens" byreference="false" type="object">
        <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
      </parameter>
    </method>
    <method name="isRisky" start="43" end="43" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Check if fixer is risky or not.">Risky fixer could change code behavior!</description>
        <return type="object">
          <type full="PhpCsFixer\Fixer\bool" namespace="PhpCsFixer\Fixer" name="bool"/>
        </return>
      </docblock>
    </method>
    <method name="fix" start="51" end="51" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Fixes a file."/>
        <param description="A \SplFileInfo instance" type="object" variable="$file">
          <type full="\SplFileInfo" namespace="" name="SplFileInfo"/>
        </param>
        <param description="Tokens collection" type="object" variable="$tokens">
          <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
        </param>
      </docblock>
      <parameter name="file" byreference="false" type="object">
        <type full="SplFileInfo" namespace="" name="SplFileInfo"/>
      </parameter>
      <parameter name="tokens" byreference="false" type="object">
        <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
      </parameter>
    </method>
    <method name="getName" start="60" end="60" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the name of the fixer.">The name must be all lowercase and without any spaces.</description>
        <return description="The name of the fixer" type="string"/>
      </docblock>
    </method>
    <method name="getPriority" start="69" end="69" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the priority of the fixer.">The default priority is 0 and higher priorities are executed first.</description>
        <return type="int"/>
      </docblock>
    </method>
    <method name="supports" start="76" end="76" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns true if the file is supported by this fixer."/>
        <return description="true if the file is supported by this fixer, false otherwise" type="object">
          <type full="PhpCsFixer\Fixer\bool" namespace="PhpCsFixer\Fixer" name="bool"/>
        </return>
      </docblock>
      <parameter name="file" byreference="false" type="object">
        <type full="SplFileInfo" namespace="" name="SplFileInfo"/>
      </parameter>
    </method>
  </parent>
</interface>
