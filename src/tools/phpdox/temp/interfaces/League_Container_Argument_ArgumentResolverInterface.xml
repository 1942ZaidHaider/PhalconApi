<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="League\Container\Argument\ArgumentResolverInterface" namespace="League\Container\Argument" name="ArgumentResolverInterface" abstract="false" final="false" start="8" end="28">
  <file path="../vendor/league/container/src/Argument" file="ArgumentResolverInterface.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/league/container/src/Argument/ArgumentResolverInterface.php" size="751" time="2021-07-09T08:23:52+00:00" unixtime="1625819032" sha1="6e13dc9b26b833a258c1fe50449e9eeaa01682fb" relative="vendor/league/container/src/Argument/ArgumentResolverInterface.php"/>
  <extends full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
  <method name="resolveArguments" start="17" end="17" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Resolve an array of arguments to their concrete implementations."/>
      <param type="array" variable="$arguments"/>
      <return type="array"/>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="arguments" byreference="false" type="array"/>
  </method>
  <method name="reflectArguments" start="27" end="27" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Resolves the correct arguments to be passed to a method."/>
      <param type="object" variable="$method">
        <type full="ReflectionFunctionAbstract" namespace="" name="ReflectionFunctionAbstract"/>
      </param>
      <param type="array" variable="$args"/>
      <return type="array"/>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="method" byreference="false" type="object">
      <type full="ReflectionFunctionAbstract" namespace="" name="ReflectionFunctionAbstract"/>
    </parameter>
    <parameter name="args" byreference="false" type="array" default=""/>
  </method>
  <implementors>
    <class full="League\Container\Inflector\Inflector" namespace="League\Container\Inflector" name="Inflector"/>
    <class full="League\Container\ReflectionContainer" namespace="League\Container" name="ReflectionContainer"/>
    <class full="League\Container\Definition\Definition" namespace="League\Container\Definition" name="Definition"/>
  </implementors>
  <parent full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface">
    <method name="setContainer" start="16" end="16" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set a container"/>
        <param type="object" variable="$container">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </param>
        <return resolution="self" type="object">
          <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
      </return>
      <parameter name="container" byreference="false" type="object">
        <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
      </parameter>
    </method>
    <method name="getContainer" start="23" end="23" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the container"/>
        <return type="object">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
      </return>
    </method>
    <method name="setLeagueContainer" start="32" end="32" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set a container. This will be removed in favour of setContainer receiving Container in next major release."/>
        <param type="object" variable="$container">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </param>
        <return resolution="self" type="object">
          <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
      </return>
      <parameter name="container" byreference="false" type="object">
        <type full="League\Container\Container" namespace="League\Container" name="Container"/>
      </parameter>
    </method>
    <method name="getLeagueContainer" start="39" end="39" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the container. This will be removed in favour of getContainer returning Container in next major release."/>
        <return type="object">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Container" namespace="League\Container" name="Container"/>
      </return>
    </method>
  </parent>
</interface>
