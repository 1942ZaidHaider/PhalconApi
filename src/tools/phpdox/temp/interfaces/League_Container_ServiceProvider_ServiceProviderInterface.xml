<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="League\Container\ServiceProvider\ServiceProviderInterface" namespace="League\Container\ServiceProvider" name="ServiceProviderInterface" abstract="false" final="false" start="7" end="46">
  <file path="../vendor/league/container/src/ServiceProvider" file="ServiceProviderInterface.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/league/container/src/ServiceProvider/ServiceProviderInterface.php" size="1306" time="2021-07-09T08:23:52+00:00" unixtime="1625819032" sha1="c393e77bbfc9f9b81c2ffd6bc394e2f2875ca0cf" relative="vendor/league/container/src/ServiceProvider/ServiceProviderInterface.php"/>
  <extends full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
  <method name="provides" start="17" end="17" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns a boolean if checking whether this provider provides a specific service or returns an array of provided services if no argument passed."/>
      <param type="string" variable="$service"/>
      <return type="boolean"/>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="service" byreference="false" type="string"/>
  </method>
  <method name="register" start="26" end="26" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Use the register method to register items with the container via the protected $this-&gt;leagueContainer property or the `getLeagueContainer` method from the ContainerAwareTrait."/>
      <return type="object">
        <type full="League\Container\ServiceProvider\void" namespace="League\Container\ServiceProvider" name="void"/>
      </return>
    </docblock>
  </method>
  <method name="setIdentifier" start="36" end="36" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set a custom id for the service provider. This enables registering the same service provider multiple times."/>
      <param type="string" variable="$id"/>
      <return resolution="self" type="object">
        <type full="League\Container\ServiceProvider\ServiceProviderInterface" namespace="League\Container\ServiceProvider" name="ServiceProviderInterface"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="League\Container\ServiceProvider\ServiceProviderInterface" namespace="League\Container\ServiceProvider" name="ServiceProviderInterface"/>
    </return>
    <parameter name="id" byreference="false" type="string"/>
  </method>
  <method name="getIdentifier" start="45" end="45" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="The id of the service provider uniquely identifies it, so that we can quickly determine if it has already been registered.">Defaults to get_class($provider).</description>
      <return type="string"/>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
  <extenders>
    <extender full="League\Container\ServiceProvider\BootableServiceProviderInterface" namespace="League\Container\ServiceProvider" name="BootableServiceProviderInterface"/>
  </extenders>
  <implementors>
    <class full="League\Container\ServiceProvider\AbstractServiceProvider" namespace="League\Container\ServiceProvider" name="AbstractServiceProvider"/>
  </implementors>
  <parent full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface">
    <method name="setContainer" start="16" end="16" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set a container"/>
        <param type="object" variable="$container">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </param>
        <return resolution="self" type="object">
          <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
      </return>
      <parameter name="container" byreference="false" type="object">
        <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
      </parameter>
    </method>
    <method name="getContainer" start="23" end="23" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the container"/>
        <return type="object">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
      </return>
    </method>
    <method name="setLeagueContainer" start="32" end="32" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set a container. This will be removed in favour of setContainer receiving Container in next major release."/>
        <param type="object" variable="$container">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </param>
        <return resolution="self" type="object">
          <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
      </return>
      <parameter name="container" byreference="false" type="object">
        <type full="League\Container\Container" namespace="League\Container" name="Container"/>
      </parameter>
    </method>
    <method name="getLeagueContainer" start="39" end="39" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the container. This will be removed in favour of getContainer returning Container in next major release."/>
        <return type="object">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Container" namespace="League\Container" name="Container"/>
      </return>
    </method>
  </parent>
</interface>
