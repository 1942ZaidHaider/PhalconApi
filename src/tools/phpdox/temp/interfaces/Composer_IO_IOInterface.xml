<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface" abstract="false" final="false" start="22" end="207">
  <file path="../vendor/composer/composer/src/Composer/IO" file="IOInterface.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/composer/composer/src/Composer/IO/IOInterface.php" size="6708" time="2022-04-13T14:39:56+00:00" unixtime="1649860796" sha1="a2e42c4201063d98b25fd165e253fa743c3c3363" relative="vendor/composer/composer/src/Composer/IO/IOInterface.php"/>
  <docblock>
    <description compact="The Input/Output helper interface."/>
    <author value="FranÃ§ois Pluchino &lt;francois.pluchino@opendisplay.com&gt;"/>
  </docblock>
  <constant type="{unknown}" name="QUIET" value="1"/>
  <constant type="{unknown}" name="NORMAL" value="2"/>
  <constant type="{unknown}" name="VERBOSE" value="4"/>
  <constant type="{unknown}" name="VERY_VERBOSE" value="8"/>
  <constant type="{unknown}" name="DEBUG" value="16"/>
  <method name="isInteractive" start="35" end="35" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Is this input means interactive?"/>
      <return type="object">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="isVerbose" start="42" end="42" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Is this output verbose?"/>
      <return type="object">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="isVeryVerbose" start="49" end="49" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Is the output very verbose?"/>
      <return type="object">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="isDebug" start="56" end="56" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Is the output in debug verbosity?"/>
      <return type="object">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="isDecorated" start="63" end="63" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Is this output decorated?"/>
      <return type="object">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="write" start="72" end="72" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Writes a message to the output."/>
      <param description="The message as an array of lines or a single string" type="object" variable="$messages">
        <type full="Composer\IO\string|array" namespace="Composer\IO" name="string|array"/>
      </param>
      <param description="Whether to add a newline or not" type="object" variable="$newline">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </param>
      <param description="Verbosity level from the VERBOSITY_* constants" type="int" variable="$verbosity"/>
    </docblock>
    <parameter name="messages" byreference="false" type="{unknown}"/>
    <parameter name="newline" byreference="false" type="boolean" default="true"/>
    <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
  </method>
  <method name="writeError" start="81" end="81" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Writes a message to the error output."/>
      <param description="The message as an array of lines or a single string" type="object" variable="$messages">
        <type full="Composer\IO\string|array" namespace="Composer\IO" name="string|array"/>
      </param>
      <param description="Whether to add a newline or not" type="object" variable="$newline">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </param>
      <param description="Verbosity level from the VERBOSITY_* constants" type="int" variable="$verbosity"/>
    </docblock>
    <parameter name="messages" byreference="false" type="{unknown}"/>
    <parameter name="newline" byreference="false" type="boolean" default="true"/>
    <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
  </method>
  <method name="overwrite" start="91" end="91" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Overwrites a previous message to the output."/>
      <param description="The message as an array of lines or a single string" type="object" variable="$messages">
        <type full="Composer\IO\string|array" namespace="Composer\IO" name="string|array"/>
      </param>
      <param description="Whether to add a newline or not" type="object" variable="$newline">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </param>
      <param description="The size of line" type="int" variable="$size"/>
      <param description="Verbosity level from the VERBOSITY_* constants" type="int" variable="$verbosity"/>
    </docblock>
    <parameter name="messages" byreference="false" type="{unknown}"/>
    <parameter name="newline" byreference="false" type="boolean" default="true"/>
    <parameter name="size" byreference="false" type="{unknown}" default="NULL"/>
    <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
  </method>
  <method name="overwriteError" start="101" end="101" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Overwrites a previous message to the error output."/>
      <param description="The message as an array of lines or a single string" type="object" variable="$messages">
        <type full="Composer\IO\string|array" namespace="Composer\IO" name="string|array"/>
      </param>
      <param description="Whether to add a newline or not" type="object" variable="$newline">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </param>
      <param description="The size of line" type="int" variable="$size"/>
      <param description="Verbosity level from the VERBOSITY_* constants" type="int" variable="$verbosity"/>
    </docblock>
    <parameter name="messages" byreference="false" type="{unknown}"/>
    <parameter name="newline" byreference="false" type="boolean" default="true"/>
    <parameter name="size" byreference="false" type="{unknown}" default="NULL"/>
    <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
  </method>
  <method name="ask" start="112" end="112" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Asks a question to the user."/>
      <param description="The question to ask" type="string" variable="$question"/>
      <param description="The default answer if none is given by the user" type="string" variable="$default"/>
      <throws description="If there is no data to read in the input stream" type="object">
        <type full="\RuntimeException" namespace="" name="RuntimeException"/>
      </throws>
      <return description="The user answer" type="string"/>
    </docblock>
    <parameter name="question" byreference="false" type="{unknown}"/>
    <parameter name="default" byreference="false" type="{unknown}" default="NULL"/>
  </method>
  <method name="askConfirmation" start="124" end="124" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Asks a confirmation to the user.">The question will be asked until the user answers by nothing, yes, or no.</description>
      <param description="The question to ask" type="string" variable="$question"/>
      <param description="The default answer if the user enters nothing" type="object" variable="$default">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </param>
      <return description="true if the user has confirmed, false otherwise" type="object">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </return>
    </docblock>
    <parameter name="question" byreference="false" type="{unknown}"/>
    <parameter name="default" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="askAndValidate" start="141" end="141" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Asks for a value and validates the response.">The validator receives the data to validate. It must return the
validated data when the data is valid and throw an exception
otherwise.</description>
      <param description="The question to ask" type="string" variable="$question"/>
      <param description="A PHP callback" type="object" variable="$validator">
        <type full="Composer\IO\callable" namespace="Composer\IO" name="callable"/>
      </param>
      <param description="Max number of times to ask before giving up (default of null means infinite)" type="object" variable="$attempts">
        <type full="Composer\IO\null|int" namespace="Composer\IO" name="null|int"/>
      </param>
      <param description="The default answer if none is given by the user" type="mixed" variable="$default"/>
      <throws description="When any of the validators return an error" type="object">
        <type full="\Exception" namespace="" name="Exception"/>
      </throws>
      <return type="mixed"/>
    </docblock>
    <parameter name="question" byreference="false" type="{unknown}"/>
    <parameter name="validator" byreference="false" type="{unknown}"/>
    <parameter name="attempts" byreference="false" type="{unknown}" default="NULL"/>
    <parameter name="default" byreference="false" type="{unknown}" default="NULL"/>
  </method>
  <method name="askAndHideAnswer" start="150" end="150" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Asks a question to the user and hide the answer."/>
      <param description="The question to ask" type="string" variable="$question"/>
      <return description="The answer" type="string"/>
    </docblock>
    <parameter name="question" byreference="false" type="{unknown}"/>
  </method>
  <method name="select" start="165" end="165" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Asks the user to select a value."/>
      <param description="The question to ask" type="string" variable="$question"/>
      <param description="List of choices to pick from" type="array" variable="$choices"/>
      <param description="The default answer if the user enters nothing" type="object" variable="$default">
        <type full="Composer\IO\bool|string" namespace="Composer\IO" name="bool|string"/>
      </param>
      <param description="Max number of times to ask before giving up (false by default, which means infinite)" type="object" variable="$attempts">
        <type full="Composer\IO\bool|int" namespace="Composer\IO" name="bool|int"/>
      </param>
      <param description="Message which will be shown if invalid value from choice list would be picked" type="string" variable="$errorMessage"/>
      <param description="Select more than one value separated by comma" type="object" variable="$multiselect">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </param>
      <throws type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
      <return description="The selected value or values (the key of the choices array)" type="object">
        <type full="Composer\IO\int|string|array" namespace="Composer\IO" name="int|string|array"/>
      </return>
    </docblock>
    <parameter name="question" byreference="false" type="{unknown}"/>
    <parameter name="choices" byreference="false" type="{unknown}"/>
    <parameter name="default" byreference="false" type="{unknown}"/>
    <parameter name="attempts" byreference="false" type="boolean" default="false"/>
    <parameter name="errorMessage" byreference="false" type="string" default="'Value &quot;%s&quot; is invalid'"/>
    <parameter name="multiselect" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getAuthentications" start="172" end="172" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get all authentication information entered."/>
      <return description="The map of authentication data" type="array"/>
    </docblock>
  </method>
  <method name="hasAuthentication" start="181" end="181" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Verify if the repository has a authentication information."/>
      <param description="The unique name of repository" type="string" variable="$repositoryName"/>
      <return type="object">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </return>
    </docblock>
    <parameter name="repositoryName" byreference="false" type="{unknown}"/>
  </method>
  <method name="getAuthentication" start="190" end="190" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get the username and password of repository."/>
      <param description="The unique name of repository" type="string" variable="$repositoryName"/>
      <return description="The 'username' and 'password'" type="array"/>
    </docblock>
    <parameter name="repositoryName" byreference="false" type="{unknown}"/>
  </method>
  <method name="setAuthentication" start="199" end="199" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Set the authentication information for the repository."/>
      <param description="The unique name of repository" type="string" variable="$repositoryName"/>
      <param description="The username" type="string" variable="$username"/>
      <param description="The password" type="string" variable="$password"/>
    </docblock>
    <parameter name="repositoryName" byreference="false" type="{unknown}"/>
    <parameter name="username" byreference="false" type="{unknown}"/>
    <parameter name="password" byreference="false" type="{unknown}" default="NULL"/>
  </method>
  <method name="loadConfiguration" start="206" end="206" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Loads authentications from a config instance"/>
      <param type="object" variable="$config">
        <type full="Composer\Config" namespace="Composer" name="Config"/>
      </param>
    </docblock>
    <parameter name="config" byreference="false" type="object">
      <type full="Composer\Config" namespace="Composer" name="Config"/>
    </parameter>
  </method>
  <implementors>
    <class full="Composer\IO\BaseIO" namespace="Composer\IO" name="BaseIO"/>
    <class full="Composer\IO\BufferIO" namespace="Composer\IO" name="BufferIO"/>
    <class full="Composer\IO\NullIO" namespace="Composer\IO" name="NullIO"/>
    <class full="Composer\IO\ConsoleIO" namespace="Composer\IO" name="ConsoleIO"/>
  </implementors>
</interface>
