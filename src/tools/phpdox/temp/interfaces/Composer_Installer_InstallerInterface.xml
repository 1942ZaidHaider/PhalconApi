<?xml version="1.0" encoding="UTF-8"?>
<interface xmlns="http://xml.phpdox.net/src" full="Composer\Installer\InstallerInterface" namespace="Composer\Installer" name="InstallerInterface" abstract="false" final="false" start="25" end="79">
  <file path="../vendor/composer/composer/src/Composer/Installer" file="InstallerInterface.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/composer/composer/src/Composer/Installer/InstallerInterface.php" size="2504" time="2022-04-13T14:39:56+00:00" unixtime="1649860796" sha1="a79f929659208c757378f209401a002f5f9f379e" relative="vendor/composer/composer/src/Composer/Installer/InstallerInterface.php"/>
  <docblock>
    <description compact="Interface for the package installation manager."/>
    <author value="Konstantin Kudryashov &lt;ever.zet@gmail.com&gt;"/>
    <author value="Jordi Boggiano &lt;j.boggiano@seld.be&gt;"/>
  </docblock>
  <method name="supports" start="33" end="33" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Decides if the installer supports the given type"/>
      <param type="string" variable="$packageType"/>
      <return type="object">
        <type full="Composer\Installer\bool" namespace="Composer\Installer" name="bool"/>
      </return>
    </docblock>
    <parameter name="packageType" byreference="false" type="{unknown}"/>
  </method>
  <method name="isInstalled" start="43" end="43" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Checks that provided package is installed."/>
      <param description="repository in which to check" type="object" variable="$repo">
        <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
      </param>
      <param description="package instance" type="object" variable="$package">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </param>
      <return type="object">
        <type full="Composer\Installer\bool" namespace="Composer\Installer" name="bool"/>
      </return>
    </docblock>
    <parameter name="repo" byreference="false" type="object">
      <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
    </parameter>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
  </method>
  <method name="install" start="51" end="51" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Installs specific package."/>
      <param description="repository in which to check" type="object" variable="$repo">
        <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
      </param>
      <param description="package instance" type="object" variable="$package">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </param>
    </docblock>
    <parameter name="repo" byreference="false" type="object">
      <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
    </parameter>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
  </method>
  <method name="update" start="62" end="62" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Updates specific package."/>
      <param description="repository in which to check" type="object" variable="$repo">
        <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
      </param>
      <param description="already installed package version" type="object" variable="$initial">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </param>
      <param description="updated version" type="object" variable="$target">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </param>
      <throws description="if $initial package is not installed" type="object">
        <type full="InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
    </docblock>
    <parameter name="repo" byreference="false" type="object">
      <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
    </parameter>
    <parameter name="initial" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
    <parameter name="target" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
  </method>
  <method name="uninstall" start="70" end="70" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Uninstalls specific package."/>
      <param description="repository in which to check" type="object" variable="$repo">
        <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
      </param>
      <param description="package instance" type="object" variable="$package">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </param>
    </docblock>
    <parameter name="repo" byreference="false" type="object">
      <type full="Composer\Repository\InstalledRepositoryInterface" namespace="Composer\Repository" name="InstalledRepositoryInterface"/>
    </parameter>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
  </method>
  <method name="getInstallPath" start="78" end="78" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns the installation path of a package"/>
      <param type="object" variable="$package">
        <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
      </param>
      <return description="path to install to, which MUST not end with a slash" type="string"/>
    </docblock>
    <parameter name="package" byreference="false" type="object">
      <type full="Composer\Package\PackageInterface" namespace="Composer\Package" name="PackageInterface"/>
    </parameter>
  </method>
  <implementors>
    <class full="Composer\Installer\NoopInstaller" namespace="Composer\Installer" name="NoopInstaller"/>
    <class full="Composer\Installer\PearInstaller" namespace="Composer\Installer" name="PearInstaller"/>
    <class full="Composer\Installer\PluginInstaller" namespace="Composer\Installer" name="PluginInstaller"/>
    <class full="Composer\Installer\MetapackageInstaller" namespace="Composer\Installer" name="MetapackageInstaller"/>
    <class full="Composer\Installer\ProjectInstaller" namespace="Composer\Installer" name="ProjectInstaller"/>
    <class full="Composer\Installer\LibraryInstaller" namespace="Composer\Installer" name="LibraryInstaller"/>
  </implementors>
</interface>
