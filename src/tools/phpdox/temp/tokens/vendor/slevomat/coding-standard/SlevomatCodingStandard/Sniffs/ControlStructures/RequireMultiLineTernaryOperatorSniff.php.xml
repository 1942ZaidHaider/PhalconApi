<?xml version="1.0"?>
<source xmlns="http://xml.phpdox.net/token">
  <file xmlns="http://xml.phpdox.net/src" path="../vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/ControlStructures" file="RequireMultiLineTernaryOperatorSniff.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/ControlStructures/RequireMultiLineTernaryOperatorSniff.php" size="5868" time="2020-10-05T12:39:37+00:00" unixtime="1601901577" sha1="71c312cb0957a84875bfb4882f5860793d3a5d5b" relative="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/ControlStructures/RequireMultiLineTernaryOperatorSniff.php"/>
  <line no="1">
    <token name="T_OPEN_TAG">&lt;?php </token>
    <token name="T_DECLARE">declare</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">strict_types</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="2"/>
  <line no="3">
    <token name="T_NAMESPACE">namespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">SlevomatCodingStandard</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Sniffs</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">ControlStructures</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="4"/>
  <line no="5">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHP_CodeSniffer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Files</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">File</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="6">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">PHP_CodeSniffer</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Sniffs</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Sniff</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="7">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">SlevomatCodingStandard</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Helpers</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">SniffSettingsHelper</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="8">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">SlevomatCodingStandard</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">Helpers</token>
    <token name="T_NS_SEPARATOR">\</token>
    <token name="T_STRING">TokenHelper</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="9">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">array_merge</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="10">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">in_array</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="11">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="12">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="13">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_CLOSE_PARENTHESIS</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="14">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_CLOSE_SHORT_ARRAY</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="15">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_CLOSE_SQUARE_BRACKET</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="16">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_CLOSE_TAG</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="17">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_COALESCE</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="18">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_COMMA</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="19">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_DOUBLE_ARROW</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="20">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_INLINE_ELSE</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="21">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_INLINE_THEN</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="22">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_OPEN_TAG</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="23">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_OPEN_TAG_WITH_ECHO</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="24">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_SEMICOLON</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="25">
    <token name="T_USE">use</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_WHITESPACE</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="26"/>
  <line no="27">
    <token name="T_CLASS">class</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">RequireMultiLineTernaryOperatorSniff</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IMPLEMENTS">implements</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">Sniff</token>
  </line>
  <line no="28">
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="29"/>
  <line no="30">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">CODE_MULTI_LINE_TERNARY_OPERATOR_NOT_USED</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'MultiLineTernaryOperatorNotUsed'</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="31"/>
  <line no="32">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">TAB_INDENT</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">"\t"</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="33">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONST">const</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">SPACES_INDENT</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'    '</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="34"/>
  <line no="35">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/** @var int */</token>
  </line>
  <line no="36">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$lineLengthLimit</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="37"/>
  <line no="38">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="39">
    <token name="T_DOC_COMMENT">	 * @return array&lt;int, (int|string)&gt;</token>
  </line>
  <line no="40">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="41">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">register</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_ARRAY">array</token>
  </line>
  <line no="42">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="43">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
  </line>
  <line no="44">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">T_INLINE_THEN</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="45">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="46">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="47"/>
  <line no="48">
    <token name="T_WHITESPACE">	</token>
    <token name="T_DOC_COMMENT">/**</token>
  </line>
  <line no="49">
    <token name="T_DOC_COMMENT">	 * @phpcsSuppress SlevomatCodingStandard.TypeHints.ParameterTypeHint.MissingNativeTypeHint</token>
  </line>
  <line no="50">
    <token name="T_DOC_COMMENT">	 * @param File $phpcsFile</token>
  </line>
  <line no="51">
    <token name="T_DOC_COMMENT">	 * @param int $inlineThenPointer</token>
  </line>
  <line no="52">
    <token name="T_DOC_COMMENT">	 */</token>
  </line>
  <line no="53">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PUBLIC">public</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">process</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">File</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$inlineThenPointer</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">void</token>
  </line>
  <line no="54">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="55">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getTokens</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="56"/>
  <line no="57">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$nextPointer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">TokenHelper</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">findNextEffective</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$inlineThenPointer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="58">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$nextPointer</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_INLINE_ELSE</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="59">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="60">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="61"/>
  <line no="62">
    <token name="T_WHITESPACE">		</token>
    <token name="T_DOC_COMMENT">/** @var int $inlineElsePointer */</token>
  </line>
  <line no="63">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$inlineElsePointer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">TokenHelper</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">findNext</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_INLINE_ELSE</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$inlineThenPointer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="64"/>
  <line no="65">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$inlineThenPointer</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'line'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$inlineElsePointer</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'line'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="66">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="67">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="68"/>
  <line no="69">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$pointerAfterInlineElseEnd</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$inlineElsePointer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="70">
    <token name="T_WHITESPACE">		</token>
    <token name="T_WHILE">while</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="71">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">in_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="72">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$pointerAfterInlineElseEnd</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="73">
    <token name="T_WHITESPACE">				</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">T_CLOSE_TAG</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_SEMICOLON</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_COMMA</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_DOUBLE_ARROW</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_CLOSE_SHORT_ARRAY</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_COALESCE</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="74">
    <token name="T_WHITESPACE">				</token>
    <token name="T_STRING">true</token>
  </line>
  <line no="75">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="76">
    <token name="T_WHITESPACE">				</token>
    <token name="T_BREAK">break</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="77">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="78"/>
  <line no="79">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="80">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$pointerAfterInlineElseEnd</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_CLOSE_PARENTHESIS</token>
  </line>
  <line no="81">
    <token name="T_WHITESPACE">				</token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$pointerAfterInlineElseEnd</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'parenthesis_opener'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$inlineElsePointer</token>
  </line>
  <line no="82">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="83">
    <token name="T_WHITESPACE">				</token>
    <token name="T_BREAK">break</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="84">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="85"/>
  <line no="86">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="87">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$pointerAfterInlineElseEnd</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_CLOSE_SQUARE_BRACKET</token>
  </line>
  <line no="88">
    <token name="T_WHITESPACE">				</token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$pointerAfterInlineElseEnd</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'bracket_opener'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$inlineElsePointer</token>
  </line>
  <line no="89">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="90">
    <token name="T_WHITESPACE">				</token>
    <token name="T_BREAK">break</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="91">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="92"/>
  <line no="93">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$pointerAfterInlineElseEnd</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="94">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="95"/>
  <line no="96">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$pointerAfterInlineElseEnd</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_SEMICOLON</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="97">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="98">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="99"/>
  <line no="100">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$endOfLineBeforeInlineThenPointer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getEndOfLineBefore</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$inlineThenPointer</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="101"/>
  <line no="102">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$lineLengthLimit</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">SniffSettingsHelper</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">normalizeInteger</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">lineLengthLimit</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="103">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$actualLineLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">TokenHelper</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getContent</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$endOfLineBeforeInlineThenPointer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pointerAfterInlineElseEnd</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="104"/>
  <line no="105">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$actualLineLength</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_SMALLER_OR_EQUAL">&lt;=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$lineLengthLimit</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="106">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="107">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="108"/>
  <line no="109">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$fix</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addFixableError</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="110">
    <token name="T_WHITESPACE">			</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'Ternary operator should be reformatted to more lines.'</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="111">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$inlineThenPointer</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="112">
    <token name="T_WHITESPACE">			</token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">CODE_MULTI_LINE_TERNARY_OPERATOR_NOT_USED</token>
  </line>
  <line no="113">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="114"/>
  <line no="115">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_EXCLAMATION_MARK">!</token>
    <token name="T_VARIABLE">$fix</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="116">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="117">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="118"/>
  <line no="119">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$indentation</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$this</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getIndentation</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$endOfLineBeforeInlineThenPointer</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="120">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$pointerBeforeInlineThen</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">TokenHelper</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">findPreviousEffective</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$inlineThenPointer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="121">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$pointerBeforeInlineElse</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">TokenHelper</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">findPreviousEffective</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$inlineElsePointer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="122"/>
  <line no="123">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">fixer</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">beginChangeset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="124"/>
  <line no="125">
    <token name="T_WHITESPACE">		</token>
    <token name="T_FOR">for</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pointerBeforeInlineThen</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$inlineThenPointer</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="126">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">fixer</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">replaceToken</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="127">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="128">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">fixer</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addContentBefore</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$inlineThenPointer</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">eolChar</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$indentation</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="129"/>
  <line no="130">
    <token name="T_WHITESPACE">		</token>
    <token name="T_FOR">for</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pointerBeforeInlineElse</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_LT">&lt;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$inlineElsePointer</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_INC">++</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="131">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">fixer</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">replaceToken</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$i</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="132">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="133">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">fixer</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">addContentBefore</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$inlineElsePointer</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">eolChar</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$indentation</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="134"/>
  <line no="135">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">fixer</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">endChangeset</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="136">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="137"/>
  <line no="138">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getEndOfLineBefore</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">File</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">int</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pointer</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">int</token>
  </line>
  <line no="139">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="140">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">getTokens</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="141"/>
  <line no="142">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$endOfLineBefore</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="143"/>
  <line no="144">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$startPointer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pointer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="145">
    <token name="T_WHITESPACE">		</token>
    <token name="T_WHILE">while</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="146">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$possibleEndOfLinePointer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">TokenHelper</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">findPrevious</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="147">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="148">
    <token name="T_WHITESPACE">				</token>
    <token name="T_STRING">array_merge</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_STRING">T_WHITESPACE</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_OPEN_TAG</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_OPEN_TAG_WITH_ECHO</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">TokenHelper</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$inlineCommentTokenCodes</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COMMA">,</token>
  </line>
  <line no="149">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$startPointer</token>
  </line>
  <line no="150">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="151">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="152">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$possibleEndOfLinePointer</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_WHITESPACE</token>
  </line>
  <line no="153">
    <token name="T_WHITESPACE">				</token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$possibleEndOfLinePointer</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'content'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">eolChar</token>
  </line>
  <line no="154">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="155">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$endOfLineBefore</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$possibleEndOfLinePointer</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="156">
    <token name="T_WHITESPACE">				</token>
    <token name="T_BREAK">break</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="157">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="158"/>
  <line no="159">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="160">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$possibleEndOfLinePointer</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_OPEN_TAG</token>
  </line>
  <line no="161">
    <token name="T_WHITESPACE">				</token>
    <token name="T_BOOLEAN_OR">||</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$possibleEndOfLinePointer</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_OPEN_TAG_WITH_ECHO</token>
  </line>
  <line no="162">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="163">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$endOfLineBefore</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$possibleEndOfLinePointer</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="164">
    <token name="T_WHITESPACE">				</token>
    <token name="T_BREAK">break</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="165">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="166"/>
  <line no="167">
    <token name="T_WHITESPACE">			</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
  </line>
  <line no="168">
    <token name="T_WHITESPACE">				</token>
    <token name="T_STRING">in_array</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$possibleEndOfLinePointer</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'code'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">TokenHelper</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_VARIABLE">$inlineCommentTokenCodes</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">true</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
  </line>
  <line no="169">
    <token name="T_WHITESPACE">				</token>
    <token name="T_BOOLEAN_AND">&amp;&amp;</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$tokens</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_VARIABLE">$possibleEndOfLinePointer</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_OPEN_SQUARE">[</token>
    <token name="T_CONSTANT_ENCAPSED_STRING">'content'</token>
    <token name="T_PHPDOX_CLOSE_SQUARE">]</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_OBJECT_OPERATOR">-&gt;</token>
    <token name="T_STRING">eolChar</token>
  </line>
  <line no="170">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="171">
    <token name="T_WHITESPACE">				</token>
    <token name="T_VARIABLE">$endOfLineBefore</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$possibleEndOfLinePointer</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="172">
    <token name="T_WHITESPACE">				</token>
    <token name="T_BREAK">break</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="173">
    <token name="T_WHITESPACE">			</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="174"/>
  <line no="175">
    <token name="T_WHITESPACE">			</token>
    <token name="T_VARIABLE">$startPointer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$possibleEndOfLinePointer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="176">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="177"/>
  <line no="178">
    <token name="T_WHITESPACE">		</token>
    <token name="T_DOC_COMMENT">/** @var int $endOfLineBefore */</token>
  </line>
  <line no="179">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$endOfLineBefore</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$endOfLineBefore</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="180">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$endOfLineBefore</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="181">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="182"/>
  <line no="183">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PRIVATE">private</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_FUNCTION">function</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">getIndentation</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">File</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">int</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$endOfLinePointer</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">string</token>
  </line>
  <line no="184">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="185">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$pointerAfterWhitespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">TokenHelper</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">findNextExcluding</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_WHITESPACE</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$endOfLinePointer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="186">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$actualIndentation</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">TokenHelper</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">getContent</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$endOfLinePointer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_PLUS">+</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$pointerAfterWhitespace</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="187"/>
  <line no="188">
    <token name="T_WHITESPACE">		</token>
    <token name="T_IF">if</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">strlen</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$actualIndentation</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">0</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_CURLY">{</token>
  </line>
  <line no="189">
    <token name="T_WHITESPACE">			</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$actualIndentation</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_DOT">.</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_STRING">substr</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$actualIndentation</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_IDENTICAL">===</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TAB_INDENT</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TAB_INDENT</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">SPACES_INDENT</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="190">
    <token name="T_WHITESPACE">		</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="191"/>
  <line no="192">
    <token name="T_WHITESPACE">		</token>
    <token name="T_VARIABLE">$tabPointer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_EQUAL">=</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">TokenHelper</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">findPreviousContent</token>
    <token name="T_PHPDOX_OPEN_BRACKET">(</token>
    <token name="T_VARIABLE">$phpcsFile</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">T_WHITESPACE</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TAB_INDENT</token>
    <token name="T_PHPDOX_COMMA">,</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$endOfLinePointer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_MINUS">-</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_LNUMBER">1</token>
    <token name="T_PHPDOX_CLOSE_BRACKET">)</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="193">
    <token name="T_WHITESPACE">		</token>
    <token name="T_RETURN">return</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_VARIABLE">$tabPointer</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_IS_NOT_IDENTICAL">!==</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">null</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_QUESTION_MARK">?</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">TAB_INDENT</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_PHPDOX_COLON">:</token>
    <token name="T_WHITESPACE"> </token>
    <token name="T_STRING">self</token>
    <token name="T_DOUBLE_COLON">::</token>
    <token name="T_STRING">SPACES_INDENT</token>
    <token name="T_PHPDOX_SEMICOLON">;</token>
  </line>
  <line no="194">
    <token name="T_WHITESPACE">	</token>
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="195"/>
  <line no="196">
    <token name="T_PHPDOX_CLOSE_CURLY">}</token>
  </line>
  <line no="197"/>
</source>
