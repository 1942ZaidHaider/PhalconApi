<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Nette\Utils\Floats" namespace="Nette\Utils" name="Floats" abstract="false" final="false" start="18" end="107">
  <file path="../vendor/nette/utils/src/Utils" file="Floats.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/nette/utils/src/Utils/Floats.php" size="2120" time="2022-01-24T11:29:14+00:00" unixtime="1643023754" sha1="7e863497f896532fb92909cab447f1d38e6f62fd" relative="vendor/nette/utils/src/Utils/Floats.php"/>
  <docblock>
    <description compact="Floating-point numbers comparison."/>
  </docblock>
  <uses full="Nette\StaticClass" namespace="Nette" name="StaticClass" start="20" end="20"/>
  <constant type="float" name="EPSILON" value="1e-10"/>
  <method name="isZero" start="25" end="28" abstract="false" final="false" static="true" visibility="public">
    <return type="bool" nullable="false"/>
    <parameter name="value" byreference="false" type="float"/>
  </method>
  <method name="isInteger" start="31" end="34" abstract="false" final="false" static="true" visibility="public">
    <return type="bool" nullable="false"/>
    <parameter name="value" byreference="false" type="float"/>
  </method>
  <method name="compare" start="41" end="56" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Compare two floats. If $a &lt; $b it returns -1, if they are equal it returns 0 and if $a &gt; $b it returns 1"/>
      <throws description="if one of parameters is NAN" type="object">
        <type full="\LogicException" namespace="" name="LogicException"/>
      </throws>
    </docblock>
    <return type="int" nullable="false"/>
    <parameter name="a" byreference="false" type="float"/>
    <parameter name="b" byreference="false" type="float"/>
  </method>
  <method name="areEqual" start="63" end="66" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns true if $a = $b"/>
      <throws description="if one of parameters is NAN" type="object">
        <type full="\LogicException" namespace="" name="LogicException"/>
      </throws>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="a" byreference="false" type="float"/>
    <parameter name="b" byreference="false" type="float"/>
  </method>
  <method name="isLessThan" start="73" end="76" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns true if $a &lt; $b"/>
      <throws description="if one of parameters is NAN" type="object">
        <type full="\LogicException" namespace="" name="LogicException"/>
      </throws>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="a" byreference="false" type="float"/>
    <parameter name="b" byreference="false" type="float"/>
  </method>
  <method name="isLessThanOrEqualTo" start="83" end="86" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns true if $a &lt;= $b"/>
      <throws description="if one of parameters is NAN" type="object">
        <type full="\LogicException" namespace="" name="LogicException"/>
      </throws>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="a" byreference="false" type="float"/>
    <parameter name="b" byreference="false" type="float"/>
  </method>
  <method name="isGreaterThan" start="93" end="96" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns true if $a &gt; $b"/>
      <throws description="if one of parameters is NAN" type="object">
        <type full="\LogicException" namespace="" name="LogicException"/>
      </throws>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="a" byreference="false" type="float"/>
    <parameter name="b" byreference="false" type="float"/>
  </method>
  <method name="isGreaterThanOrEqualTo" start="103" end="106" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns true if $a &gt;= $b"/>
      <throws description="if one of parameters is NAN" type="object">
        <type full="\LogicException" namespace="" name="LogicException"/>
      </throws>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="a" byreference="false" type="float"/>
    <parameter name="b" byreference="false" type="float"/>
  </method>
  <trait full="Nette\StaticClass" namespace="Nette" name="StaticClass">
    <constructor name="__construct" start="22" end="25" abstract="false" final="true" static="false" visibility="public">
      <docblock>
        <description/>
        <return type="object">
          <type full="Nette\never" namespace="Nette" name="never"/>
        </return>
        <throws type="object">
          <type full="\Error" namespace="" name="Error"/>
        </throws>
      </docblock>
    </constructor>
    <method name="__callStatic" start="33" end="36" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description compact="Call to undefined static method."/>
        <return type="object">
          <type full="Nette\void" namespace="Nette" name="void"/>
        </return>
        <throws type="object">
          <type full="Nette\MemberAccessException" namespace="Nette" name="MemberAccessException"/>
        </throws>
      </docblock>
      <parameter name="name" byreference="false" type="string"/>
      <parameter name="args" byreference="false" type="array"/>
    </method>
  </trait>
</class>
