<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Composer\Semver\Semver" namespace="Composer\Semver" name="Semver" abstract="false" final="false" start="16" end="127">
  <file path="../vendor/composer/semver/src" file="Semver.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/composer/semver/src/Semver.php" size="3217" time="2020-12-03T15:47:16+00:00" unixtime="1607010436" sha1="dcad35044c4b396ee4fbeeaa5ae966790e1f259a" relative="vendor/composer/semver/src/Semver.php"/>
  <constant type="integer" name="SORT_ASC" value="1"/>
  <constant type="integer" name="SORT_DESC" value="1"/>
  <member name="versionParser" visibility="private" static="true" line="22">
    <docblock>
      <var type="object">
        <type full="Composer\Semver\VersionParser" namespace="Composer\Semver" name="VersionParser"/>
      </var>
    </docblock>
  </member>
  <method name="satisfies" start="32" end="43" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Determine if given version satisfies given constraints."/>
      <param type="string" variable="$version"/>
      <param type="string" variable="$constraints"/>
      <return type="object">
        <type full="Composer\Semver\bool" namespace="Composer\Semver" name="bool"/>
      </return>
    </docblock>
    <parameter name="version" byreference="false" type="{unknown}"/>
    <parameter name="constraints" byreference="false" type="{unknown}"/>
  </method>
  <method name="satisfiedBy" start="53" end="60" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Return all versions that satisfy given constraints."/>
      <param type="array" variable="$versions"/>
      <param type="string" variable="$constraints"/>
      <return type="array"/>
    </docblock>
    <parameter name="versions" byreference="false" type="array"/>
    <parameter name="constraints" byreference="false" type="{unknown}"/>
  </method>
  <method name="sort" start="69" end="72" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Sort given array of versions."/>
      <param type="array" variable="$versions"/>
      <return type="array"/>
    </docblock>
    <parameter name="versions" byreference="false" type="array"/>
  </method>
  <method name="rsort" start="81" end="84" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Sort given array of versions in reverse."/>
      <param type="array" variable="$versions"/>
      <return type="array"/>
    </docblock>
    <parameter name="versions" byreference="false" type="array"/>
  </method>
  <method name="usort" start="92" end="126" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description/>
      <param type="array" variable="$versions"/>
      <param type="int" variable="$direction"/>
      <return type="array"/>
    </docblock>
    <parameter name="versions" byreference="false" type="array"/>
    <parameter name="direction" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Normalize outside of usort() scope for minor performance increase." line="101"/>
      <comment value="Creates an array of arrays: [[normalized, key], ...]" line="102"/>
      <comment value="Recreate input array, using the original indexes which are now in sorted order." line="119"/>
    </inline>
  </method>
</class>
