<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="SlevomatCodingStandard\Helpers\AnnotationTypeHelper" namespace="SlevomatCodingStandard\Helpers" name="AnnotationTypeHelper" abstract="false" final="false" start="32" end="721">
  <file path="../vendor/slevomat/coding-standard/SlevomatCodingStandard/Helpers" file="AnnotationTypeHelper.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/slevomat/coding-standard/SlevomatCodingStandard/Helpers/AnnotationTypeHelper.php" size="19418" time="2020-10-05T12:39:37+00:00" unixtime="1601901577" sha1="58b6d1ebe10fc1ffd03c85de63bb06c40abff567" relative="vendor/slevomat/coding-standard/SlevomatCodingStandard/Helpers/AnnotationTypeHelper.php"/>
  <docblock>
    <description/>
    <internal/>
  </docblock>
  <method name="getIdentifierTypeNodes" start="39" end="91" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$typeNode">
        <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
      </param>
      <return type="array" of="object">
        <type full="SlevomatCodingStandard\Helpers\IdentifierTypeNode[]|ThisTypeNode" namespace="SlevomatCodingStandard\Helpers" name="IdentifierTypeNode[]|ThisTypeNode"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="getConstantTypeNodes" start="97" end="147" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$typeNode">
        <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
      </param>
      <return type="array" of="object">
        <type full="SlevomatCodingStandard\Helpers\ConstTypeNode" namespace="SlevomatCodingStandard\Helpers" name="ConstTypeNode"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="getUnionTypeNodes" start="153" end="200" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$typeNode">
        <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
      </param>
      <return type="array" of="object">
        <type full="SlevomatCodingStandard\Helpers\UnionTypeNode" namespace="SlevomatCodingStandard\Helpers" name="UnionTypeNode"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="getArrayTypeNodes" start="206" end="252" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$typeNode">
        <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
      </param>
      <return type="array" of="object">
        <type full="SlevomatCodingStandard\Helpers\ArrayTypeNode" namespace="SlevomatCodingStandard\Helpers" name="ArrayTypeNode"/>
      </return>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="getTypeHintFromNode" start="258" end="263" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$typeNode">
        <type full="SlevomatCodingStandard\Helpers\IdentifierTypeNode|ThisTypeNode" namespace="SlevomatCodingStandard\Helpers" name="IdentifierTypeNode|ThisTypeNode"/>
      </param>
      <return type="string"/>
    </docblock>
    <return type="string" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="export" start="265" end="277" abstract="false" final="false" static="true" visibility="public">
    <return type="string" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="change" start="279" end="361" abstract="false" final="false" static="true" visibility="public">
    <return type="object" nullable="false">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </return>
    <parameter name="masterTypeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
    <parameter name="typeNodeToChange" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
    <parameter name="changedTypeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="containsNullType" start="367" end="380" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$typeNode">
        <type full="SlevomatCodingStandard\Helpers\UnionTypeNode|IntersectionTypeNode" namespace="SlevomatCodingStandard\Helpers" name="UnionTypeNode|IntersectionTypeNode"/>
      </param>
      <return type="object">
        <type full="SlevomatCodingStandard\Helpers\bool" namespace="SlevomatCodingStandard\Helpers" name="bool"/>
      </return>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="containsStaticOrThisType" start="382" end="404" abstract="false" final="false" static="true" visibility="public">
    <return type="bool" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="containsOneType" start="406" end="447" abstract="false" final="false" static="true" visibility="public">
    <return type="bool" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="containsJustTwoTypes" start="449" end="459" abstract="false" final="false" static="true" visibility="public">
    <return type="bool" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="isCompoundOfNull" start="461" end="470" abstract="false" final="false" static="true" visibility="public">
    <return type="bool" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="containsTraversableType" start="479" end="510" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$typeNode">
        <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
      </param>
      <param type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
      </param>
      <param type="int" variable="$pointer"/>
      <param description="string&gt; $traversableTypeHints" type="object">
        <type full="SlevomatCodingStandard\Helpers\array&lt;int" namespace="SlevomatCodingStandard\Helpers" name="array&lt;int"/>
      </param>
      <return type="object">
        <type full="SlevomatCodingStandard\Helpers\bool" namespace="SlevomatCodingStandard\Helpers" name="bool"/>
      </return>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
    </parameter>
    <parameter name="pointer" byreference="false" type="int"/>
    <parameter name="traversableTypeHints" byreference="false" type="array"/>
  </method>
  <method name="containsItemsSpecificationForTraversable" start="520" end="603" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$typeNode">
        <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
      </param>
      <param type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
      </param>
      <param type="int" variable="$pointer"/>
      <param description="string&gt; $traversableTypeHints" type="object">
        <type full="SlevomatCodingStandard\Helpers\array&lt;int" namespace="SlevomatCodingStandard\Helpers" name="array&lt;int"/>
      </param>
      <param type="object" variable="$inTraversable">
        <type full="SlevomatCodingStandard\Helpers\bool" namespace="SlevomatCodingStandard\Helpers" name="bool"/>
      </param>
      <return type="object">
        <type full="SlevomatCodingStandard\Helpers\bool" namespace="SlevomatCodingStandard\Helpers" name="bool"/>
      </return>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
    </parameter>
    <parameter name="pointer" byreference="false" type="int"/>
    <parameter name="traversableTypeHints" byreference="false" type="array"/>
    <parameter name="inTraversable" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getTypeFromNullableType" start="609" end="614" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$typeNode">
        <type full="SlevomatCodingStandard\Helpers\UnionTypeNode|IntersectionTypeNode" namespace="SlevomatCodingStandard\Helpers" name="UnionTypeNode|IntersectionTypeNode"/>
      </param>
      <return type="object">
        <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </return>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="getTypeHintFromOneType" start="620" end="669" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$typeNode">
        <type full="SlevomatCodingStandard\Helpers\CallableTypeNode|GenericTypeNode|IdentifierTypeNode|ThisTypeNode|ArrayTypeNode|ArrayShapeNode|ConstTypeNode" namespace="SlevomatCodingStandard\Helpers" name="CallableTypeNode|GenericTypeNode|IdentifierTypeNode|ThisTypeNode|ArrayTypeNode|ArrayShapeNode|ConstTypeNode"/>
      </param>
      <return type="string"/>
    </docblock>
    <return type="string" nullable="false"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
  <method name="getTraversableTypeHintFromType" start="678" end="704" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$typeNode">
        <type full="SlevomatCodingStandard\Helpers\UnionTypeNode|IntersectionTypeNode" namespace="SlevomatCodingStandard\Helpers" name="UnionTypeNode|IntersectionTypeNode"/>
      </param>
      <param type="object" variable="$phpcsFile">
        <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
      </param>
      <param type="int" variable="$pointer"/>
      <param description="string&gt; $traversableTypeHints" type="object">
        <type full="SlevomatCodingStandard\Helpers\array&lt;int" namespace="SlevomatCodingStandard\Helpers" name="array&lt;int"/>
      </param>
      <return type="object">
        <type full="SlevomatCodingStandard\Helpers\string|null" namespace="SlevomatCodingStandard\Helpers" name="string|null"/>
      </return>
    </docblock>
    <return type="string" nullable="true"/>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
    <parameter name="phpcsFile" byreference="false" type="object">
      <type full="PHP_CodeSniffer\Files\File" namespace="PHP_CodeSniffer\Files" name="File"/>
    </parameter>
    <parameter name="pointer" byreference="false" type="int"/>
    <parameter name="traversableTypeHints" byreference="false" type="array"/>
  </method>
  <method name="getItemsSpecificationTypeFromType" start="710" end="719" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <param type="object" variable="$typeNode">
        <type full="SlevomatCodingStandard\Helpers\UnionTypeNode|IntersectionTypeNode" namespace="SlevomatCodingStandard\Helpers" name="UnionTypeNode|IntersectionTypeNode"/>
      </param>
      <return type="object">
        <type full="SlevomatCodingStandard\Helpers\?TypeNode" namespace="SlevomatCodingStandard\Helpers" name="?TypeNode"/>
      </return>
    </docblock>
    <return type="object" nullable="true">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </return>
    <parameter name="typeNode" byreference="false" type="object">
      <type full="PHPStan\PhpDocParser\Ast\Type\TypeNode" namespace="PHPStan\PhpDocParser\Ast\Type" name="TypeNode"/>
    </parameter>
  </method>
</class>
