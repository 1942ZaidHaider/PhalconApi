<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Composer\Package\Archiver\ArchivableFilesFilter" namespace="Composer\Package\Archiver" name="ArchivableFilesFilter" abstract="false" final="false" start="18" end="44">
  <file path="../vendor/composer/composer/src/Composer/Package/Archiver" file="ArchivableFilesFilter.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/composer/composer/src/Composer/Package/Archiver/ArchivableFilesFilter.php" size="990" time="2022-04-13T14:39:56+00:00" unixtime="1649860796" sha1="b314134d8ee4a3b3e156bc6bd8aea2b8399442dc" relative="vendor/composer/composer/src/Composer/Package/Archiver/ArchivableFilesFilter.php"/>
  <extends full="FilterIterator" namespace="" name="FilterIterator"/>
  <member name="dirs" default="" type="array" visibility="private" static="false" line="20"/>
  <method name="accept" start="25" end="35" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return description="true if the current element is acceptable, otherwise false." type="object">
        <type full="Composer\Package\Archiver\bool" namespace="Composer\Package\Archiver" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="addEmptyDir" start="37" end="43" abstract="false" final="false" static="false" visibility="public">
    <parameter name="phar" byreference="false" type="object">
      <type full="PharData" namespace="" name="PharData"/>
    </parameter>
    <parameter name="sources" byreference="false" type="{unknown}"/>
  </method>
  <parent full="FilterIterator" namespace="" name="FilterIterator">
    <implements full="OuterIterator" namespace="" name="OuterIterator"/>
    <method name="accept" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Check whether the current element of the iterator is acceptable"/>
      <return type="bool"/>
    </docblock>
  </method>
    <constructor name="__construct" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Construct a filterIterator"/>
      <return type="void"/>
    </docblock>
    <parameter name="iterator" optional="false" byreference="false" type="object" class="Iterator"/>
  </constructor>
    <method name="current" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get the current element value"/>
      <return type="mixed"/>
    </docblock>
  </method>
    <method name="getInnerIterator" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get the inner iterator"/>
      <return type="Iterator"/>
    </docblock>
  </method>
    <method name="key" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get the current key"/>
      <return type="mixed"/>
    </docblock>
  </method>
    <method name="next" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Move the iterator forward"/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="rewind" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Rewind the iterator"/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="valid" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Check whether the current element is valid"/>
      <return type="bool"/>
    </docblock>
  </method>
  </parent>
  <interface full="OuterIterator" namespace="" name="OuterIterator">
    <extends full="Iterator" namespace="" name="Iterator"/>
    <method name="getInnerIterator" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Returns the inner iterator for the current entry"/>
      <return type="Iterator"/>
    </docblock>
  </method>
    <method name="current" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="mixed"/>
    </docblock>
  </method>
    <method name="key" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="scalar"/>
    </docblock>
  </method>
    <method name="next" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="rewind" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="valid" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="bool"/>
    </docblock>
  </method>
  </interface>
</class>
