<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="TheSeer\fDOM\fDOMElement" namespace="TheSeer\fDOM" name="fDOMElement" abstract="false" final="false" start="54" end="394">
  <file path="../vendor/theseer/fdomdocument/src" file="fDOMElement.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/theseer/fdomdocument/src/fDOMElement.php" size="14675" time="2022-01-25T23:10:35+00:00" unixtime="1643152235" sha1="08bb84a51a08c7238e6bb755d7cceea786cf264f" relative="vendor/theseer/fdomdocument/src/fDOMElement.php"/>
  <docblock>
    <description compact="fDomElement"/>
    <category value="PHP"/>
    <package value="TheSeer\fDOM"/>
    <author value="Arne Blankerts &lt;arne@blankerts.de&gt;"/>
    <access value="public"/>
    <property value="fDOMDocument $ownerDocument"/>
  </docblock>
  <extends full="DOMElement" namespace="" name="DOMElement"/>
  <method name="__toString" start="59" end="61" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="query" start="72" end="74" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Forward to fDomDocument-&gt;query()"/>
      <param description="XPath to use" type="string" variable="$q"/>
      <param description="\DOMNode to overwrite context" type="object" variable="$ctx">
        <type full="\DOMNode" namespace="" name="DOMNode"/>
      </param>
      <param description="Register flag pass thru" type="boolean" variable="$registerNodeNS"/>
      <return type="object">
        <type full="\DomNodeList" namespace="" name="DomNodeList"/>
      </return>
    </docblock>
    <parameter name="q" byreference="false" type="{unknown}"/>
    <parameter name="ctx" byreference="false" type="object" default="NULL">
      <type full="DOMNode" namespace="" name="DOMNode"/>
    </parameter>
    <parameter name="registerNodeNS" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="queryOne" start="85" end="87" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Forward to fDomDocument-&gt;queryOne()"/>
      <param description="XPath to use" type="string" variable="$q"/>
      <param description="(optional) \DOMNode to overwrite context" type="object" variable="$ctx">
        <type full="\DOMNode" namespace="" name="DOMNode"/>
      </param>
      <param description="Register flag pass thru" type="boolean" variable="$registerNodeNS"/>
      <return type="mixed"/>
    </docblock>
    <parameter name="q" byreference="false" type="{unknown}"/>
    <parameter name="ctx" byreference="false" type="object" default="NULL">
      <type full="DOMNode" namespace="" name="DOMNode"/>
    </parameter>
    <parameter name="registerNodeNS" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="select" start="99" end="101" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Forward to fDomDocument-&gt;select()"/>
      <param description="A CSS Level 3 Selector string" type="string" variable="$selector"/>
      <param type="object" variable="$ctx">
        <type full="\DOMNode" namespace="" name="DOMNode"/>
      </param>
      <param type="object" variable="$registerNodeNS">
        <type full="TheSeer\fDOM\bool" namespace="TheSeer\fDOM" name="bool"/>
      </param>
      <return type="object">
        <type full="\DOMNodeList" namespace="" name="DOMNodeList"/>
      </return>
    </docblock>
    <parameter name="selector" byreference="false" type="{unknown}"/>
    <parameter name="ctx" byreference="false" type="object" default="NULL">
      <type full="DOMNode" namespace="" name="DOMNode"/>
    </parameter>
    <parameter name="registerNodeNS" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="appendXML" start="110" end="115" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Parse and append XML String to node"/>
      <param description="string to process" type="object" variable="$str">
        <type full="TheSeer\fDOM\String" namespace="TheSeer\fDOM" name="String"/>
      </param>
      <return description="Reference to the created Fragment" type="object">
        <type full="TheSeer\fDOM\fDomDocumentFragment" namespace="TheSeer\fDOM" name="fDomDocumentFragment"/>
      </return>
    </docblock>
    <parameter name="str" byreference="false" type="{unknown}"/>
  </method>
  <method name="appendElement" start="126" end="130" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new element and append it"/>
      <param description="Name of not element to create" type="string" variable="$name"/>
      <param description="Optional content to be set" type="string" variable="$content"/>
      <param description="Create content as textNode rather then setting nodeValue" type="object" variable="$asTextnode">
        <type full="TheSeer\fDOM\bool" namespace="TheSeer\fDOM" name="bool"/>
      </param>
      <return description="Reference to created fDOMElement" type="object">
        <type full="TheSeer\fDOM\fDOMElement" namespace="TheSeer\fDOM" name="fDOMElement"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="content" byreference="false" type="{unknown}" default="NULL"/>
    <parameter name="asTextnode" byreference="false" type="boolean" default="FALSE"/>
  </method>
  <method name="appendElementNS" start="142" end="146" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new element in given namespace and append it"/>
      <param description="Namespace of node to create" type="string" variable="$ns"/>
      <param description="Name of not element to create" type="string" variable="$name"/>
      <param description="Optional content to be set" type="string" variable="$content"/>
      <param description="Create content as textNode rather then setting nodeValue" type="object" variable="$asTextnode">
        <type full="TheSeer\fDOM\bool" namespace="TheSeer\fDOM" name="bool"/>
      </param>
      <return description="Reference to created fDOMElement" type="object">
        <type full="TheSeer\fDOM\fDOMElement" namespace="TheSeer\fDOM" name="fDOMElement"/>
      </return>
    </docblock>
    <parameter name="ns" byreference="false" type="{unknown}"/>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="content" byreference="false" type="{unknown}" default="NULL"/>
    <parameter name="asTextnode" byreference="false" type="boolean" default="FALSE"/>
  </method>
  <method name="appendElementPrefix" start="158" end="162" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new element in given namespace and append it"/>
      <param description="Namespace prefix for node to create" type="string" variable="$prefix"/>
      <param description="Name of not element to create" type="string" variable="$name"/>
      <param description="Optional content to be set" type="string" variable="$content"/>
      <param description="Create content as textNode rather then setting nodeValue" type="object" variable="$asTextnode">
        <type full="TheSeer\fDOM\bool" namespace="TheSeer\fDOM" name="bool"/>
      </param>
      <return description="Reference to created fDOMElement" type="object">
        <type full="TheSeer\fDOM\fDOMElement" namespace="TheSeer\fDOM" name="fDOMElement"/>
      </return>
    </docblock>
    <parameter name="prefix" byreference="false" type="{unknown}"/>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="content" byreference="false" type="{unknown}" default="NULL"/>
    <parameter name="asTextnode" byreference="false" type="boolean" default="FALSE"/>
  </method>
  <method name="appendTextNode" start="171" end="175" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new text node and append it"/>
      <param description="Text content to be added" type="string" variable="$content"/>
      <return type="object">
        <type full="\DOMText" namespace="" name="DOMText"/>
      </return>
    </docblock>
    <parameter name="content" byreference="false" type="{unknown}"/>
  </method>
  <method name="createElement" start="188" end="190" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new fDOMElement"/>
      <see value="fDOMDocument::createElement"/>
      <param type="string" variable="$name"/>
      <param type="string" variable="$content"/>
      <param type="object" variable="$asTextnode">
        <type full="TheSeer\fDOM\bool" namespace="TheSeer\fDOM" name="bool"/>
      </param>
      <return type="object">
        <type full="TheSeer\fDOM\fDOMElement" namespace="TheSeer\fDOM" name="fDOMElement"/>
      </return>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="content" byreference="false" type="{unknown}" default="NULL"/>
    <parameter name="asTextnode" byreference="false" type="boolean" default="FALSE"/>
  </method>
  <method name="createElementPrefix" start="204" end="206" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new fDOMElement in namespace defined by prefix"/>
      <see value="fDOMDocument::createElementPrefix"/>
      <param type="string" variable="$prefix"/>
      <param type="string" variable="$name"/>
      <param type="string" variable="$content"/>
      <param type="object" variable="$asTextNode">
        <type full="TheSeer\fDOM\bool" namespace="TheSeer\fDOM" name="bool"/>
      </param>
      <return type="object">
        <type full="TheSeer\fDOM\fDOMElement" namespace="TheSeer\fDOM" name="fDOMElement"/>
      </return>
    </docblock>
    <parameter name="prefix" byreference="false" type="{unknown}"/>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="content" byreference="false" type="{unknown}" default="NULL"/>
    <parameter name="asTextNode" byreference="false" type="boolean" default="FALSE"/>
  </method>
  <method name="createElementNS" start="220" end="222" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Create a new fDOMElement within given namespace and return it"/>
      <param description="Namespace URI for node to create" type="string" variable="$namespace"/>
      <param description="Name of node to create" type="string" variable="$name"/>
      <param description="Content to set (optional)" type="null" variable="$content"/>
      <param description="Create content as textNode rather then setting nodeValue" type="object" variable="$asTextNode">
        <type full="TheSeer\fDOM\bool" namespace="TheSeer\fDOM" name="bool"/>
      </param>
      <throws type="object">
        <type full="TheSeer\fDOM\fDOMException" namespace="TheSeer\fDOM" name="fDOMException"/>
      </throws>
      <return type="object">
        <type full="TheSeer\fDOM\fDOMElement" namespace="TheSeer\fDOM" name="fDOMElement"/>
      </return>
    </docblock>
    <parameter name="namespace" byreference="false" type="{unknown}"/>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="content" byreference="false" type="{unknown}" default="NULL"/>
    <parameter name="asTextNode" byreference="false" type="boolean" default="FALSE"/>
  </method>
  <method name="getAttribute" start="235" end="237" abstract="false" final="false" static="false" visibility="public">
    <parameter name="attr" byreference="false" type="{unknown}"/>
    <parameter name="default" byreference="false" type="string" default="''"/>
  </method>
  <method name="getAttributeNS" start="251" end="253" abstract="false" final="false" static="false" visibility="public">
    <parameter name="ns" byreference="false" type="{unknown}"/>
    <parameter name="attr" byreference="false" type="{unknown}"/>
    <parameter name="default" byreference="false" type="string" default="''"/>
  </method>
  <method name="setAttribute" start="269" end="280" abstract="false" final="false" static="false" visibility="public">
    <parameter name="attr" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="keepEntities" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="setAttributeNS" start="296" end="307" abstract="false" final="false" static="false" visibility="public">
    <parameter name="ns" byreference="false" type="{unknown}"/>
    <parameter name="attr" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
    <parameter name="keepEntities" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="setAttributes" start="317" end="323" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Helper to add multiple attributes to an element"/>
      <param description="Attributes to add as key-value pair" type="array" variable="$attr"/>
      <param description="Flag wether to keep entities" type="object" variable="$keepEntities">
        <type full="TheSeer\fDOM\bool" namespace="TheSeer\fDOM" name="bool"/>
      </param>
      <return description="List with references to created DOMAttr" type="array"/>
    </docblock>
    <parameter name="attr" byreference="false" type="array"/>
    <parameter name="keepEntities" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="setAttributesNS" start="335" end="339" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Helper to add multiple attributes with the given namespace and prefix"/>
      <param description="Namespace of attribute" type="string" variable="$ns"/>
      <param description="Namespace prefix for attribute to create" type="string" variable="$prefix"/>
      <param description="Attributes to add" type="array" variable="$attr"/>
      <param description="Flag wether to keep entities" type="object" variable="$keepEntities">
        <type full="TheSeer\fDOM\bool" namespace="TheSeer\fDOM" name="bool"/>
      </param>
      <return type="object">
        <type full="TheSeer\fDOM\void" namespace="TheSeer\fDOM" name="void"/>
      </return>
    </docblock>
    <parameter name="ns" byreference="false" type="{unknown}"/>
    <parameter name="prefix" byreference="false" type="{unknown}"/>
    <parameter name="attr" byreference="false" type="array"/>
    <parameter name="keepEntities" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getChildrenByTagName" start="348" end="350" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Helper method to get children by name"/>
      <param description="tagname to search for" type="string" variable="$tagName"/>
      <return type="object">
        <type full="\DOMNodeList" namespace="" name="DOMNodeList"/>
      </return>
    </docblock>
    <parameter name="tagName" byreference="false" type="{unknown}"/>
  </method>
  <method name="getChildrenByTagNameNS" start="360" end="362" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Helper method to get children by name and namespace"/>
      <param description="namespace nodes have to be in" type="string" variable="$ns"/>
      <param description="tagname to search for" type="string" variable="$tagName"/>
      <return type="object">
        <type full="\DOMNodeList" namespace="" name="DOMNodeList"/>
      </return>
    </docblock>
    <parameter name="ns" byreference="false" type="{unknown}"/>
    <parameter name="tagName" byreference="false" type="{unknown}"/>
  </method>
  <method name="inSameDocument" start="372" end="374" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Check if the given node is in the same document"/>
      <param description="Node to compare with" type="object" variable="$node">
        <type full="\DomNode" namespace="" name="DomNode"/>
      </param>
      <return description="true on match, false if they differ" type="boolean"/>
    </docblock>
    <parameter name="node" byreference="false" type="object">
      <type full="DomNode" namespace="" name="DomNode"/>
    </parameter>
  </method>
  <method name="saveXML" start="381" end="383" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Wrapper to DomDocument::saveXML() with current node as context"/>
      <return type="string"/>
    </docblock>
  </method>
  <method name="saveHTML" start="390" end="392" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Wrapper to DomDocument::saveHTML() with current node as context"/>
      <return type="string"/>
    </docblock>
  </method>
  <parent full="DOMElement" namespace="" name="DOMElement">
    <extends full="DOMNode" namespace="" name="DOMNode"/>
    <member name="schemaTypeInfo" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="Not implemented yet, always return NULL"/>
      <var type="bool"/>
    </docblock>
  </member>
    <member name="tagName" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The element name"/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="nodeName" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="Returns the most accurate name for the current node type"/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="nodeValue" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The value of this node, depending on its type. Contrary to the W3C specification, the node value of DOMElement nodes is equal to DOMNode::textContent instead of NULL."/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="nodeType" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="Gets the type of the node. One of the predefined XML_xxx_NODE constants"/>
      <var type="int"/>
    </docblock>
  </member>
    <member name="parentNode" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The parent of this node. If there is no such node, this returns NULL."/>
      <var type="DOMNode"/>
    </docblock>
  </member>
    <member name="childNodes" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="A DOMNodeList that contains all children of this node. If there are no children, this is an empty DOMNodeList."/>
      <var type="DOMNodeList"/>
    </docblock>
  </member>
    <member name="firstChild" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The first child of this node. If there is no such node, this returns NULL."/>
      <var type="DOMNode"/>
    </docblock>
  </member>
    <member name="lastChild" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The last child of this node. If there is no such node, this returns NULL."/>
      <var type="DOMNode"/>
    </docblock>
  </member>
    <member name="previousSibling" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The node immediately preceding this node. If there is no such node, this returns NULL."/>
      <var type="DOMNode"/>
    </docblock>
  </member>
    <member name="nextSibling" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The node immediately following this node. If there is no such node, this returns NULL."/>
      <var type="DOMNode"/>
    </docblock>
  </member>
    <member name="attributes" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="A DOMNamedNodeMap containing the attributes of this node (if it is a DOMElement) or NULL otherwise."/>
      <var type="DOMNamedNodeMap"/>
    </docblock>
  </member>
    <member name="ownerDocument" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The DOMDocument object associated with this node."/>
      <var type="DOMDocument"/>
    </docblock>
  </member>
    <member name="namespaceURI" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The namespace URI of this node, or NULL if it is unspecified."/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="prefix" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The namespace prefix of this node, or NULL if it is unspecified."/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="localName" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="Returns the local part of the qualified name of this node."/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="baseURI" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The absolute base URI of this node or NULL if the implementation wasn't able to obtain an absolute URI."/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="textContent" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The text content of this node and its descendants."/>
      <var type="string"/>
    </docblock>
  </member>
    <constructor name="__construct" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Creates a new DOMElement object&#10;  "/>
      <return type="void"/>
    </docblock>
    <parameter name="name" optional="false" byreference="false" type="string"/>
    <parameter name="value" optional="true" byreference="false" type="string"/>
    <parameter name="namespaceURI" optional="true" byreference="false" type="string"/>
  </constructor>
    <method name="getAttribute" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Returns value of attribute"/>
      <return type="string"/>
    </docblock>
    <parameter name="name" optional="false" byreference="false" type="string"/>
  </method>
    <method name="getAttributeNode" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Returns attribute node"/>
      <return type="DOMAttr"/>
    </docblock>
    <parameter name="name" optional="false" byreference="false" type="string"/>
  </method>
    <method name="getAttributeNodeNS" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Returns attribute node&#10;  "/>
      <return type="DOMAttr"/>
    </docblock>
    <parameter name="namespaceURI" optional="false" byreference="false" type="string"/>
    <parameter name="localName" optional="false" byreference="false" type="string"/>
  </method>
    <method name="getAttributeNS" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Returns value of attribute"/>
      <return type="string"/>
    </docblock>
    <parameter name="namespaceURI" optional="false" byreference="false" type="string"/>
    <parameter name="localName" optional="false" byreference="false" type="string"/>
  </method>
    <method name="getElementsByTagName" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Gets elements by tagname"/>
      <return type="DOMNodeList"/>
    </docblock>
    <parameter name="name" optional="false" byreference="false" type="string"/>
  </method>
    <method name="getElementsByTagNameNS" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get elements by namespaceURI and localName"/>
      <return type="DOMNodeList"/>
    </docblock>
    <parameter name="namespaceURI" optional="false" byreference="false" type="string"/>
    <parameter name="localName" optional="false" byreference="false" type="string"/>
  </method>
    <method name="hasAttribute" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Checks to see if attribute exists"/>
      <return type="bool"/>
    </docblock>
    <parameter name="name" optional="false" byreference="false" type="string"/>
  </method>
    <method name="hasAttributeNS" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Checks to see if attribute exists&#10;  "/>
      <return type="bool"/>
    </docblock>
    <parameter name="namespaceURI" optional="false" byreference="false" type="string"/>
    <parameter name="localName" optional="false" byreference="false" type="string"/>
  </method>
    <method name="removeAttribute" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Removes attribute"/>
      <return type="bool"/>
    </docblock>
    <parameter name="name" optional="false" byreference="false" type="string"/>
  </method>
    <method name="removeAttributeNode" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Removes attribute"/>
      <return type="bool"/>
    </docblock>
    <parameter name="oldnode" optional="false" byreference="false" type="object" class="DOMAttr"/>
  </method>
    <method name="removeAttributeNS" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Removes attribute"/>
      <return type="bool"/>
    </docblock>
    <parameter name="namespaceURI" optional="false" byreference="false" type="string"/>
    <parameter name="localName" optional="false" byreference="false" type="string"/>
  </method>
    <method name="setAttribute" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Adds new attribute"/>
      <return type="DOMAttr"/>
    </docblock>
    <parameter name="name" optional="false" byreference="false" type="string"/>
    <parameter name="value" optional="false" byreference="false" type="string"/>
  </method>
    <method name="setAttributeNode" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Adds new attribute node to element"/>
      <return type="DOMAttr"/>
    </docblock>
    <parameter name="attr" optional="false" byreference="false" type="object" class="DOMAttr"/>
  </method>
    <method name="setAttributeNodeNS" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Adds new attribute node to element"/>
      <return type="DOMAttr"/>
    </docblock>
    <parameter name="attr" optional="false" byreference="false" type="object" class="DOMAttr"/>
  </method>
    <method name="setAttributeNS" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Adds new attribute"/>
      <return type="void"/>
    </docblock>
    <parameter name="namespaceURI" optional="false" byreference="false" type="string"/>
    <parameter name="qualifiedName" optional="false" byreference="false" type="string"/>
    <parameter name="value" optional="false" byreference="false" type="string"/>
  </method>
    <method name="setIdAttribute" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Declares the attribute specified by name to be of type ID"/>
      <return type="void"/>
    </docblock>
    <parameter name="name" optional="false" byreference="false" type="string"/>
    <parameter name="isId" optional="false" byreference="false" type="object" class="bool"/>
  </method>
    <method name="setIdAttributeNode" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Declares the attribute specified by node to be of type ID"/>
      <return type="void"/>
    </docblock>
    <parameter name="attr" optional="false" byreference="false" type="object" class="DOMAttr"/>
    <parameter name="isId" optional="false" byreference="false" type="object" class="bool"/>
  </method>
    <method name="setIdAttributeNS" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Declares the attribute specified by local name and namespace URI to be of type ID"/>
      <return type="void"/>
    </docblock>
    <parameter name="namespaceURI" optional="false" byreference="false" type="string"/>
    <parameter name="localName" optional="false" byreference="false" type="string"/>
    <parameter name="isId" optional="false" byreference="false" type="object" class="bool"/>
  </method>
    <method name="appendChild" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="DOMNode"/>
    </docblock>
    <parameter name="newnode" optional="false" byreference="false" type="object" class="DOMNode"/>
  </method>
    <method name="C14N" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="string"/>
    </docblock>
    <parameter name="exclusive" optional="true" byreference="false" type="object" class="bool"/>
    <parameter name="with_comments" optional="true" byreference="false" type="object" class="bool"/>
    <parameter name="xpath" optional="true" byreference="false" type="object" class="array"/>
    <parameter name="ns_prefixes" optional="true" byreference="false" type="object" class="array"/>
  </method>
    <method name="C14NFile" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="int"/>
    </docblock>
    <parameter name="uri" optional="false" byreference="false" type="string"/>
    <parameter name="exclusive" optional="true" byreference="false" type="object" class="bool"/>
    <parameter name="with_comments" optional="true" byreference="false" type="object" class="bool"/>
    <parameter name="xpath" optional="true" byreference="false" type="object" class="array"/>
    <parameter name="ns_prefixes" optional="true" byreference="false" type="object" class="array"/>
  </method>
    <method name="cloneNode" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="DOMNode"/>
    </docblock>
    <parameter name="deep" optional="true" byreference="false" type="object" class="bool"/>
  </method>
    <method name="getLineNo" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="int"/>
    </docblock>
  </method>
    <method name="getNodePath" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="string"/>
    </docblock>
  </method>
    <method name="hasAttributes" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="bool"/>
    </docblock>
  </method>
    <method name="hasChildNodes" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="bool"/>
    </docblock>
  </method>
    <method name="insertBefore" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="DOMNode"/>
    </docblock>
    <parameter name="newnode" optional="false" byreference="false" type="object" class="DOMNode"/>
    <parameter name="refnode" optional="true" byreference="false" type="object" class="DOMNode"/>
  </method>
    <method name="isDefaultNamespace" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="bool"/>
    </docblock>
    <parameter name="namespaceURI" optional="false" byreference="false" type="string"/>
  </method>
    <method name="isSameNode" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="bool"/>
    </docblock>
    <parameter name="node" optional="false" byreference="false" type="object" class="DOMNode"/>
  </method>
    <method name="isSupported" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="bool"/>
    </docblock>
    <parameter name="feature" optional="false" byreference="false" type="string"/>
    <parameter name="version" optional="false" byreference="false" type="string"/>
  </method>
    <method name="lookupNamespaceUri" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="string"/>
    </docblock>
    <parameter name="prefix" optional="false" byreference="false" type="string"/>
  </method>
    <method name="lookupPrefix" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="string"/>
    </docblock>
    <parameter name="namespaceURI" optional="false" byreference="false" type="string"/>
  </method>
    <method name="normalize" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="removeChild" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="DOMNode"/>
    </docblock>
    <parameter name="oldnode" optional="false" byreference="false" type="object" class="DOMNode"/>
  </method>
    <method name="replaceChild" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="DOMNode"/>
    </docblock>
    <parameter name="newnode" optional="false" byreference="false" type="object" class="DOMNode"/>
    <parameter name="oldnode" optional="false" byreference="false" type="object" class="DOMNode"/>
  </method>
  </parent>
  <parent full="DOMNode" namespace="" name="DOMNode">
    <member name="nodeName" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="Returns the most accurate name for the current node type"/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="nodeValue" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The value of this node, depending on its type. Contrary to the W3C specification, the node value of DOMElement nodes is equal to DOMNode::textContent instead of NULL."/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="nodeType" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="Gets the type of the node. One of the predefined XML_xxx_NODE constants"/>
      <var type="int"/>
    </docblock>
  </member>
    <member name="parentNode" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The parent of this node. If there is no such node, this returns NULL."/>
      <var type="DOMNode"/>
    </docblock>
  </member>
    <member name="childNodes" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="A DOMNodeList that contains all children of this node. If there are no children, this is an empty DOMNodeList."/>
      <var type="DOMNodeList"/>
    </docblock>
  </member>
    <member name="firstChild" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The first child of this node. If there is no such node, this returns NULL."/>
      <var type="DOMNode"/>
    </docblock>
  </member>
    <member name="lastChild" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The last child of this node. If there is no such node, this returns NULL."/>
      <var type="DOMNode"/>
    </docblock>
  </member>
    <member name="previousSibling" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The node immediately preceding this node. If there is no such node, this returns NULL."/>
      <var type="DOMNode"/>
    </docblock>
  </member>
    <member name="nextSibling" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The node immediately following this node. If there is no such node, this returns NULL."/>
      <var type="DOMNode"/>
    </docblock>
  </member>
    <member name="attributes" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="A DOMNamedNodeMap containing the attributes of this node (if it is a DOMElement) or NULL otherwise."/>
      <var type="DOMNamedNodeMap"/>
    </docblock>
  </member>
    <member name="ownerDocument" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The DOMDocument object associated with this node."/>
      <var type="DOMDocument"/>
    </docblock>
  </member>
    <member name="namespaceURI" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The namespace URI of this node, or NULL if it is unspecified."/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="prefix" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The namespace prefix of this node, or NULL if it is unspecified."/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="localName" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="Returns the local part of the qualified name of this node."/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="baseURI" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The absolute base URI of this node or NULL if the implementation wasn't able to obtain an absolute URI."/>
      <var type="string"/>
    </docblock>
  </member>
    <member name="textContent" static="false" visibility="public">
    <default>null</default>
    <docblock>
      <description compact="The text content of this node and its descendants."/>
      <var type="string"/>
    </docblock>
  </member>
    <method name="appendChild" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Adds new child at the end of the children&#10;  "/>
      <return type="DOMNode"/>
    </docblock>
    <parameter name="newnode" optional="false" byreference="false" type="object" class="DOMNode"/>
  </method>
    <method name="C14N" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Canonicalize nodes to a string"/>
      <return type="string"/>
    </docblock>
    <parameter name="exclusive" optional="true" byreference="false" type="object" class="bool"/>
    <parameter name="with_comments" optional="true" byreference="false" type="object" class="bool"/>
    <parameter name="xpath" optional="true" byreference="false" type="object" class="array"/>
    <parameter name="ns_prefixes" optional="true" byreference="false" type="object" class="array"/>
  </method>
    <method name="C14NFile" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Canonicalize nodes to a file"/>
      <return type="int"/>
    </docblock>
    <parameter name="uri" optional="false" byreference="false" type="string"/>
    <parameter name="exclusive" optional="true" byreference="false" type="object" class="bool"/>
    <parameter name="with_comments" optional="true" byreference="false" type="object" class="bool"/>
    <parameter name="xpath" optional="true" byreference="false" type="object" class="array"/>
    <parameter name="ns_prefixes" optional="true" byreference="false" type="object" class="array"/>
  </method>
    <method name="cloneNode" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Clones a node&#10;  "/>
      <return type="DOMNode"/>
    </docblock>
    <parameter name="deep" optional="true" byreference="false" type="object" class="bool"/>
  </method>
    <method name="getLineNo" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get line number for a node"/>
      <return type="int"/>
    </docblock>
  </method>
    <method name="getNodePath" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get an XPath for a node"/>
      <return type="string"/>
    </docblock>
  </method>
    <method name="hasAttributes" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Checks if node has attributes&#10;  "/>
      <return type="bool"/>
    </docblock>
  </method>
    <method name="hasChildNodes" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Checks if node has children&#10;  "/>
      <return type="bool"/>
    </docblock>
  </method>
    <method name="insertBefore" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Adds a new child before a reference node&#10;  "/>
      <return type="DOMNode"/>
    </docblock>
    <parameter name="newnode" optional="false" byreference="false" type="object" class="DOMNode"/>
    <parameter name="refnode" optional="true" byreference="false" type="object" class="DOMNode"/>
  </method>
    <method name="isDefaultNamespace" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Checks if the specified namespaceURI is the default namespace or not"/>
      <return type="bool"/>
    </docblock>
    <parameter name="namespaceURI" optional="false" byreference="false" type="string"/>
  </method>
    <method name="isSameNode" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Indicates if two nodes are the same node&#10;  "/>
      <return type="bool"/>
    </docblock>
    <parameter name="node" optional="false" byreference="false" type="object" class="DOMNode"/>
  </method>
    <method name="isSupported" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Checks if feature is supported for specified version&#10;  "/>
      <return type="bool"/>
    </docblock>
    <parameter name="feature" optional="false" byreference="false" type="string"/>
    <parameter name="version" optional="false" byreference="false" type="string"/>
  </method>
    <method name="lookupNamespaceUri" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Gets the namespace URI of the node based on the prefix&#10;  "/>
      <return type="string"/>
    </docblock>
    <parameter name="prefix" optional="false" byreference="false" type="string"/>
  </method>
    <method name="lookupPrefix" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Gets the namespace prefix of the node based on the namespace URI&#10;  "/>
      <return type="string"/>
    </docblock>
    <parameter name="namespaceURI" optional="false" byreference="false" type="string"/>
  </method>
    <method name="normalize" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Normalizes the node&#10;  "/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="removeChild" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Removes child from list of children&#10;  "/>
      <return type="DOMNode"/>
    </docblock>
    <parameter name="oldnode" optional="false" byreference="false" type="object" class="DOMNode"/>
  </method>
    <method name="replaceChild" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="&#10;   Replaces a child&#10;  "/>
      <return type="DOMNode"/>
    </docblock>
    <parameter name="newnode" optional="false" byreference="false" type="object" class="DOMNode"/>
    <parameter name="oldnode" optional="false" byreference="false" type="object" class="DOMNode"/>
  </method>
  </parent>
</class>
