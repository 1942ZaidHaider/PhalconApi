<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="League\Container\Definition\Definition" namespace="League\Container\Definition" name="Definition" abstract="false" final="false" start="12" end="278">
  <file path="../vendor/league/container/src/Definition" file="Definition.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/league/container/src/Definition/Definition.php" size="5568" time="2021-07-09T08:23:52+00:00" unixtime="1625819032" sha1="47e654513392d31c48fbee68880b713fd18b11ab" relative="vendor/league/container/src/Definition/Definition.php"/>
  <implements full="League\Container\Argument\ArgumentResolverInterface" namespace="League\Container\Argument" name="ArgumentResolverInterface"/>
  <implements full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
  <uses full="League\Container\Argument\ArgumentResolverTrait" namespace="League\Container\Argument" name="ArgumentResolverTrait" start="14" end="14"/>
  <uses full="League\Container\ContainerAwareTrait" namespace="League\Container" name="ContainerAwareTrait" start="15" end="15"/>
  <member name="alias" visibility="protected" static="false" line="20">
    <docblock>
      <description/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="concrete" visibility="protected" static="false" line="25">
    <docblock>
      <description/>
      <var type="mixed"/>
    </docblock>
  </member>
  <member name="shared" default="false" type="boolean" visibility="protected" static="false" line="30">
    <docblock>
      <description/>
      <var type="boolean"/>
    </docblock>
  </member>
  <member name="tags" default="" type="array" visibility="protected" static="false" line="35">
    <docblock>
      <description/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="arguments" default="" type="array" visibility="protected" static="false" line="40">
    <docblock>
      <description/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="methods" default="" type="array" visibility="protected" static="false" line="45">
    <docblock>
      <description/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="resolved" visibility="protected" static="false" line="50">
    <docblock>
      <description/>
      <var type="mixed"/>
    </docblock>
  </member>
  <constructor name="__construct" start="58" end="64" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructor."/>
      <param type="string" variable="$id"/>
      <param type="mixed" variable="$concrete"/>
    </docblock>
    <parameter name="id" byreference="false" type="string"/>
    <parameter name="concrete" byreference="false" type="{unknown}" default="NULL"/>
  </constructor>
  <method name="addTag" start="69" end="74" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
    </return>
    <parameter name="tag" byreference="false" type="string"/>
  </method>
  <method name="hasTag" start="79" end="82" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="tag" byreference="false" type="string"/>
  </method>
  <method name="setAlias" start="87" end="92" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
    </return>
    <parameter name="id" byreference="false" type="string"/>
  </method>
  <method name="getAlias" start="97" end="100" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
  <method name="setShared" start="105" end="110" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
    </return>
    <parameter name="shared" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="isShared" start="115" end="118" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="bool" nullable="false"/>
  </method>
  <method name="getConcrete" start="123" end="126" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
  </method>
  <method name="setConcrete" start="131" end="137" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
    </return>
    <parameter name="concrete" byreference="false" type="{unknown}"/>
  </method>
  <method name="addArgument" start="142" end="147" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
    </return>
    <parameter name="arg" byreference="false" type="{unknown}"/>
  </method>
  <method name="addArguments" start="152" end="159" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
    </return>
    <parameter name="args" byreference="false" type="array"/>
  </method>
  <method name="addMethodCall" start="164" end="172" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
    </return>
    <parameter name="method" byreference="false" type="string"/>
    <parameter name="args" byreference="false" type="array" default=""/>
  </method>
  <method name="addMethodCalls" start="177" end="184" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
    </return>
    <parameter name="methods" byreference="false" type="array" default=""/>
  </method>
  <method name="resolve" start="189" end="226" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="new" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="resolveCallable" start="235" end="240" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Resolve a callable."/>
      <param type="object" variable="$concrete">
        <type full="League\Container\Definition\callable" namespace="League\Container\Definition" name="callable"/>
      </param>
      <return type="mixed"/>
    </docblock>
    <parameter name="concrete" byreference="false" type="callable"/>
  </method>
  <method name="resolveClass" start="251" end="257" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Resolve a class."/>
      <param type="string" variable="$concrete"/>
      <return type="object"/>
      <throws type="object">
        <type full="ReflectionException" namespace="" name="ReflectionException"/>
      </throws>
    </docblock>
    <parameter name="concrete" byreference="false" type="string"/>
  </method>
  <method name="invokeMethods" start="266" end="277" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Invoke methods on resolved instance."/>
      <param type="object" variable="$instance"/>
      <return type="object"/>
    </docblock>
    <parameter name="instance" byreference="false" type="{unknown}"/>
  </method>
  <interface full="League\Container\Argument\ArgumentResolverInterface" namespace="League\Container\Argument" name="ArgumentResolverInterface">
    <extends full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
    <method name="resolveArguments" start="17" end="17" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Resolve an array of arguments to their concrete implementations."/>
        <param type="array" variable="$arguments"/>
        <return type="array"/>
      </docblock>
      <return type="array" nullable="false"/>
      <parameter name="arguments" byreference="false" type="array"/>
    </method>
    <method name="reflectArguments" start="27" end="27" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Resolves the correct arguments to be passed to a method."/>
        <param type="object" variable="$method">
          <type full="ReflectionFunctionAbstract" namespace="" name="ReflectionFunctionAbstract"/>
        </param>
        <param type="array" variable="$args"/>
        <return type="array"/>
      </docblock>
      <return type="array" nullable="false"/>
      <parameter name="method" byreference="false" type="object">
        <type full="ReflectionFunctionAbstract" namespace="" name="ReflectionFunctionAbstract"/>
      </parameter>
      <parameter name="args" byreference="false" type="array" default=""/>
    </method>
  </interface>
  <interface full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface">
    <extends full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
    <method name="addTag" start="16" end="16" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Add a tag to the definition."/>
        <param type="string" variable="$tag"/>
        <return resolution="self" type="object">
          <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
      </return>
      <parameter name="tag" byreference="false" type="string"/>
    </method>
    <method name="hasTag" start="25" end="25" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Does the definition have a tag?"/>
        <param type="string" variable="$tag"/>
        <return type="boolean"/>
      </docblock>
      <return type="bool" nullable="false"/>
      <parameter name="tag" byreference="false" type="string"/>
    </method>
    <method name="setAlias" start="34" end="34" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set the alias of the definition."/>
        <param type="string" variable="$id"/>
        <return type="object">
          <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
      </return>
      <parameter name="id" byreference="false" type="string"/>
    </method>
    <method name="getAlias" start="41" end="41" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the alias of the definition."/>
        <return type="string"/>
      </docblock>
      <return type="string" nullable="false"/>
    </method>
    <method name="setShared" start="50" end="50" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set whether this is a shared definition."/>
        <param type="boolean" variable="$shared"/>
        <return resolution="self" type="object">
          <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
      </return>
      <parameter name="shared" byreference="false" type="bool"/>
    </method>
    <method name="isShared" start="57" end="57" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Is this a shared definition?"/>
        <return type="boolean"/>
      </docblock>
      <return type="bool" nullable="false"/>
    </method>
    <method name="getConcrete" start="64" end="64" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the concrete of the definition."/>
        <return type="mixed"/>
      </docblock>
    </method>
    <method name="setConcrete" start="73" end="73" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set the concrete of the definition."/>
        <param type="mixed" variable="$concrete"/>
        <return type="object">
          <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
      </return>
      <parameter name="concrete" byreference="false" type="{unknown}"/>
    </method>
    <method name="addArgument" start="82" end="82" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Add an argument to be injected."/>
        <param type="mixed" variable="$arg"/>
        <return resolution="self" type="object">
          <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
      </return>
      <parameter name="arg" byreference="false" type="{unknown}"/>
    </method>
    <method name="addArguments" start="91" end="91" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Add multiple arguments to be injected."/>
        <param type="array" variable="$args"/>
        <return resolution="self" type="object">
          <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
      </return>
      <parameter name="args" byreference="false" type="array"/>
    </method>
    <method name="addMethodCall" start="101" end="101" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Add a method to be invoked"/>
        <param type="string" variable="$method"/>
        <param type="array" variable="$args"/>
        <return resolution="self" type="object">
          <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
      </return>
      <parameter name="method" byreference="false" type="string"/>
      <parameter name="args" byreference="false" type="array" default=""/>
    </method>
    <method name="addMethodCalls" start="110" end="110" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Add multiple methods to be invoked"/>
        <param type="array" variable="$methods"/>
        <return resolution="self" type="object">
          <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
      </return>
      <parameter name="methods" byreference="false" type="array" default=""/>
    </method>
    <method name="resolve" start="119" end="119" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Handle instantiation and manipulation of value and return."/>
        <param type="boolean" variable="$new"/>
        <return type="mixed"/>
      </docblock>
      <parameter name="new" byreference="false" type="boolean" default="false"/>
    </method>
  </interface>
  <trait full="League\Container\Argument\ArgumentResolverTrait" namespace="League\Container\Argument" name="ArgumentResolverTrait">
    <method name="resolveArguments" start="17" end="66" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
      <return type="array" nullable="false"/>
      <parameter name="arguments" byreference="false" type="array"/>
    </method>
    <method name="reflectArguments" start="71" end="109" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
      <return type="array" nullable="false"/>
      <parameter name="method" byreference="false" type="object">
        <type full="ReflectionFunctionAbstract" namespace="" name="ReflectionFunctionAbstract"/>
      </parameter>
      <parameter name="args" byreference="false" type="array" default=""/>
    </method>
    <method name="getContainer" start="114" end="114" abstract="true" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <return type="object">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
      </return>
    </method>
    <method name="getLeagueContainer" start="119" end="119" abstract="true" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <return type="object">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Container" namespace="League\Container" name="Container"/>
      </return>
    </method>
  </trait>
  <trait full="League\Container\ContainerAwareTrait" namespace="League\Container" name="ContainerAwareTrait">
    <member name="container" visibility="protected" static="false" line="13">
      <docblock>
        <description/>
        <var type="object">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </var>
      </docblock>
    </member>
    <member name="leagueContainer" visibility="protected" static="false" line="18">
      <docblock>
        <description/>
        <var type="object">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </var>
      </docblock>
    </member>
    <method name="setContainer" start="27" end="32" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set a container."/>
        <param type="object" variable="$container">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </param>
        <return type="object">
          <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
      </return>
      <parameter name="container" byreference="false" type="object">
        <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
      </parameter>
    </method>
    <method name="getContainer" start="39" end="46" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the container."/>
        <return type="object">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
      </return>
    </method>
    <method name="setLeagueContainer" start="55" end="61" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set a container."/>
        <param type="object" variable="$container">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </param>
        <return resolution="self" type="object">
          <type full="League\Container\ContainerAwareTrait" namespace="League\Container" name="ContainerAwareTrait"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
      </return>
      <parameter name="container" byreference="false" type="object">
        <type full="League\Container\Container" namespace="League\Container" name="Container"/>
      </parameter>
    </method>
    <method name="getLeagueContainer" start="68" end="75" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the container."/>
        <return type="object">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Container" namespace="League\Container" name="Container"/>
      </return>
    </method>
  </trait>
</class>
