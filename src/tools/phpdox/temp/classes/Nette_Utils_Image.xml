<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Nette\Utils\Image" namespace="Nette\Utils" name="Image" abstract="false" final="false" start="97" end="761">
  <file path="../vendor/nette/utils/src/Utils" file="Image.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/nette/utils/src/Utils/Image.php" size="21898" time="2022-01-24T11:29:14+00:00" unixtime="1643023754" sha1="2e1edba47cbe9db9cf14b9724cac7dbd1dc0f5c8" relative="vendor/nette/utils/src/Utils/Image.php"/>
  <docblock>
    <description compact="Basic manipulation with images. Supported types are JPEG, PNG, GIF, WEBP, AVIF and BMP.">&lt;code&gt;
$image = Image::fromFile('nette.jpg');
$image-&gt;resize(150, 100);
$image-&gt;sharpen();
$image-&gt;send();
&lt;/code&gt;</description>
    <method value="Image affine(array $affine, array $clip = null)"/>
    <method value="array affineMatrixConcat(array $m1, array $m2)"/>
    <method value="array affineMatrixGet(int $type, mixed $options = null)"/>
    <method value="void alphaBlending(bool $on)"/>
    <method value="void antialias(bool $on)"/>
    <method value="void arc($x, $y, $w, $h, $start, $end, $color)"/>
    <method value="void char(int $font, $x, $y, string $char, $color)"/>
    <method value="void charUp(int $font, $x, $y, string $char, $color)"/>
    <method value="int colorAllocate($red, $green, $blue)"/>
    <method value="int colorAllocateAlpha($red, $green, $blue, $alpha)"/>
    <method value="int colorAt($x, $y)"/>
    <method value="int colorClosest($red, $green, $blue)"/>
    <method value="int colorClosestAlpha($red, $green, $blue, $alpha)"/>
    <method value="int colorClosestHWB($red, $green, $blue)"/>
    <method value="void colorDeallocate($color)"/>
    <method value="int colorExact($red, $green, $blue)"/>
    <method value="int colorExactAlpha($red, $green, $blue, $alpha)"/>
    <method value="void colorMatch(Image $image2)"/>
    <method value="int colorResolve($red, $green, $blue)"/>
    <method value="int colorResolveAlpha($red, $green, $blue, $alpha)"/>
    <method value="void colorSet($index, $red, $green, $blue)"/>
    <method value="array colorsForIndex($index)"/>
    <method value="int colorsTotal()"/>
    <method value="int colorTransparent($color = null)"/>
    <method value="void convolution(array $matrix, float $div, float $offset)"/>
    <method value="void copy(Image $src, $dstX, $dstY, $srcX, $srcY, $srcW, $srcH)"/>
    <method value="void copyMerge(Image $src, $dstX, $dstY, $srcX, $srcY, $srcW, $srcH, $opacity)"/>
    <method value="void copyMergeGray(Image $src, $dstX, $dstY, $srcX, $srcY, $srcW, $srcH, $opacity)"/>
    <method value="void copyResampled(Image $src, $dstX, $dstY, $srcX, $srcY, $dstW, $dstH, $srcW, $srcH)"/>
    <method value="void copyResized(Image $src, $dstX, $dstY, $srcX, $srcY, $dstW, $dstH, $srcW, $srcH)"/>
    <method value="Image cropAuto(int $mode = -1, float $threshold = .5, int $color = -1)"/>
    <method value="void ellipse($cx, $cy, $w, $h, $color)"/>
    <method value="void fill($x, $y, $color)"/>
    <method value="void filledArc($cx, $cy, $w, $h, $s, $e, $color, $style)"/>
    <method value="void filledEllipse($cx, $cy, $w, $h, $color)"/>
    <method value="void filledPolygon(array $points, $numPoints, $color)"/>
    <method value="void filledRectangle($x1, $y1, $x2, $y2, $color)"/>
    <method value="void fillToBorder($x, $y, $border, $color)"/>
    <method value="void filter($filtertype)"/>
    <method value="void flip(int $mode)"/>
    <method value="array ftText($size, $angle, $x, $y, $col, string $fontFile, string $text, array $extrainfo = null)"/>
    <method value="void gammaCorrect(float $inputgamma, float $outputgamma)"/>
    <method value="array getClip()"/>
    <method value="int interlace($interlace = null)"/>
    <method value="bool isTrueColor()"/>
    <method value="void layerEffect($effect)"/>
    <method value="void line($x1, $y1, $x2, $y2, $color)"/>
    <method value="void openPolygon(array $points, int $num_points, int $color)"/>
    <method value="void paletteCopy(Image $source)"/>
    <method value="void paletteToTrueColor()"/>
    <method value="void polygon(array $points, $numPoints, $color)"/>
    <method value="array psText(string $text, $font, $size, $color, $backgroundColor, $x, $y, $space = null, $tightness = null, float $angle = null, $antialiasSteps = null)"/>
    <method value="void rectangle($x1, $y1, $x2, $y2, $col)"/>
    <method value="mixed resolution(int $res_x = null, int $res_y = null)"/>
    <method value="Image rotate(float $angle, $backgroundColor)"/>
    <method value="void saveAlpha(bool $saveflag)"/>
    <method value="Image scale(int $newWidth, int $newHeight = -1, int $mode = IMG_BILINEAR_FIXED)"/>
    <method value="void setBrush(Image $brush)"/>
    <method value="void setClip(int $x1, int $y1, int $x2, int $y2)"/>
    <method value="void setInterpolation(int $method = IMG_BILINEAR_FIXED)"/>
    <method value="void setPixel($x, $y, $color)"/>
    <method value="void setStyle(array $style)"/>
    <method value="void setThickness($thickness)"/>
    <method value="void setTile(Image $tile)"/>
    <method value="void string($font, $x, $y, string $s, $col)"/>
    <method value="void stringUp($font, $x, $y, string $s, $col)"/>
    <method value="void trueColorToPalette(bool $dither, $ncolors)"/>
    <method value="array ttfText($size, $angle, $x, $y, $color, string $fontfile, string $text)"/>
    <property value="-read int $width"/>
    <property value="-read int $height"/>
    <property value="-read resource|\GdImage $imageResource"/>
  </docblock>
  <uses full="Nette\SmartObject" namespace="Nette" name="SmartObject" start="99" end="99"/>
  <constant type="integer" name="SHRINK_ONLY" value="0b0001">
    <docblock>
      <description compact="{@link resize()} only shrinks images"/>
    </docblock>
  </constant>
  <constant type="integer" name="STRETCH" value="0b0010">
    <docblock>
      <description compact="{@link resize()} will ignore aspect ratio"/>
    </docblock>
  </constant>
  <constant type="integer" name="FIT" value="0b0000">
    <docblock>
      <description compact="{@link resize()} fits in given area so its dimensions are less than or equal to the required dimensions"/>
    </docblock>
  </constant>
  <constant type="integer" name="FILL" value="0b0100">
    <docblock>
      <description compact="{@link resize()} fills given area so its dimensions are greater than or equal to the required dimensions"/>
    </docblock>
  </constant>
  <constant type="integer" name="EXACT" value="0b1000">
    <docblock>
      <description compact="{@link resize()} fills given area exactly"/>
    </docblock>
  </constant>
  <constant type="{unknown}" name="JPEG" value="" constant="IMAGETYPE_JPEG">
    <docblock>
      <description compact="image types"/>
    </docblock>
  </constant>
  <constant type="string" name="EMPTY_GIF" value="&quot;GIF89a\x01\x00\x01\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00!\xf9\x04\x01\x00\x00\x00\x00,\x00\x00\x00\x00\x01\x00\x01\x00\x00\x02\x02D\x01\x00;&quot;"/>
  <constant type="array" name="FORMATS" value=""/>
  <member name="image" visibility="private" static="false" line="130">
    <docblock>
      <var type="object">
        <type full="Nette\Utils\resource|\GdImage" namespace="Nette\Utils\resource|" name="GdImage"/>
      </var>
    </docblock>
  </member>
  <method name="rgb" start="136" end="144" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns RGB color (0..255) and transparency (0..127)."/>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="red" byreference="false" type="int"/>
    <parameter name="green" byreference="false" type="int"/>
    <parameter name="blue" byreference="false" type="int"/>
    <parameter name="transparency" byreference="false" type="integer" default="0"/>
  </method>
  <method name="fromFile" start="153" end="165" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Reads an image from a file and returns its type in $type."/>
      <throws description="if gd extension is not loaded" type="object">
        <type full="Nette\Utils\Nette\NotSupportedException" namespace="Nette\Utils\Nette" name="NotSupportedException"/>
      </throws>
      <throws description="if file not found or file type is not known" type="object">
        <type full="Nette\Utils\UnknownImageFileException" namespace="Nette\Utils" name="UnknownImageFileException"/>
      </throws>
      <return resolution="static" type="object">
        <type full="Nette\Utils\Image" namespace="Nette\Utils" name="Image"/>
      </return>
    </docblock>
    <parameter name="file" byreference="false" type="string"/>
    <parameter name="type" byreference="true" nullable="true" type="int" default="NULL"/>
  </method>
  <method name="fromString" start="174" end="186" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Reads an image from a string and returns its type in $type."/>
      <return resolution="static" type="object">
        <type full="Nette\Utils\Image" namespace="Nette\Utils" name="Image"/>
      </return>
      <throws description="if gd extension is not loaded" type="object">
        <type full="Nette\Utils\Nette\NotSupportedException" namespace="Nette\Utils\Nette" name="NotSupportedException"/>
      </throws>
      <throws type="object">
        <type full="Nette\Utils\ImageException" namespace="Nette\Utils" name="ImageException"/>
      </throws>
    </docblock>
    <parameter name="s" byreference="false" type="string"/>
    <parameter name="type" byreference="true" nullable="true" type="int" default="NULL"/>
  </method>
  <method name="invokeSafe" start="189" end="203" abstract="false" final="false" static="true" visibility="private">
    <return type="object" nullable="false">
      <type full="Nette\Utils\Image" namespace="Nette\Utils" name="Image"/>
    </return>
    <parameter name="func" byreference="false" type="string"/>
    <parameter name="arg" byreference="false" type="string"/>
    <parameter name="message" byreference="false" type="string"/>
    <parameter name="callee" byreference="false" type="string"/>
  </method>
  <method name="fromBlank" start="211" end="231" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Creates a new true color image of the given dimensions. The default color is black."/>
      <return resolution="static" type="object">
        <type full="Nette\Utils\Image" namespace="Nette\Utils" name="Image"/>
      </return>
      <throws description="if gd extension is not loaded" type="object">
        <type full="Nette\Utils\Nette\NotSupportedException" namespace="Nette\Utils\Nette" name="NotSupportedException"/>
      </throws>
    </docblock>
    <parameter name="width" byreference="false" type="int"/>
    <parameter name="height" byreference="false" type="int"/>
    <parameter name="color" byreference="false" nullable="true" type="array" default="NULL"/>
  </method>
  <method name="detectTypeFromFile" start="237" end="241" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the type of image from file."/>
    </docblock>
    <return type="int" nullable="true"/>
    <parameter name="file" byreference="false" type="string"/>
    <inline>
      <comment value="@ - files smaller than 12 bytes causes read error" line="239"/>
    </inline>
  </method>
  <method name="detectTypeFromString" start="247" end="251" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the type of image from string."/>
    </docblock>
    <return type="int" nullable="true"/>
    <parameter name="s" byreference="false" type="string"/>
    <inline>
      <comment value="@ - strings smaller than 12 bytes causes read error" line="249"/>
    </inline>
  </method>
  <method name="typeToExtension" start="257" end="264" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the file extension for the given `Image::XXX` constant."/>
    </docblock>
    <return type="string" nullable="false"/>
    <parameter name="type" byreference="false" type="int"/>
  </method>
  <method name="typeToMimeType" start="270" end="273" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Returns the mime type for the given `Image::XXX` constant."/>
    </docblock>
    <return type="string" nullable="false"/>
    <parameter name="type" byreference="false" type="int"/>
  </method>
  <constructor name="__construct" start="280" end="284" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Wraps GD image."/>
      <param type="object" variable="$image">
        <type full="Nette\Utils\resource|\GdImage" namespace="Nette\Utils\resource|" name="GdImage"/>
      </param>
    </docblock>
    <parameter name="image" byreference="false" type="{unknown}"/>
  </constructor>
  <method name="getWidth" start="290" end="293" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns image width."/>
    </docblock>
    <return type="int" nullable="false"/>
  </method>
  <method name="getHeight" start="299" end="302" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns image height."/>
    </docblock>
    <return type="int" nullable="false"/>
  </method>
  <method name="setImageResource" start="310" end="318" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="Sets image resource."/>
      <param type="object" variable="$image">
        <type full="Nette\Utils\resource|\GdImage" namespace="Nette\Utils\resource|" name="GdImage"/>
      </param>
      <return resolution="static" type="object">
        <type full="Nette\Utils\Image" namespace="Nette\Utils" name="Image"/>
      </return>
    </docblock>
    <parameter name="image" byreference="false" type="{unknown}"/>
  </method>
  <method name="getImageResource" start="325" end="328" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns image GD resource."/>
      <return type="object">
        <type full="Nette\Utils\resource|\GdImage" namespace="Nette\Utils\resource|" name="GdImage"/>
      </return>
    </docblock>
  </method>
  <method name="resize" start="337" end="367" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Scales an image."/>
      <param description="in pixels or percent" type="object" variable="$width">
        <type full="Nette\Utils\int|string|null" namespace="Nette\Utils" name="int|string|null"/>
      </param>
      <param description="in pixels or percent" type="object" variable="$height">
        <type full="Nette\Utils\int|string|null" namespace="Nette\Utils" name="int|string|null"/>
      </param>
      <return resolution="static" type="object">
        <type full="Nette\Utils\Image" namespace="Nette\Utils" name="Image"/>
      </return>
    </docblock>
    <parameter name="width" byreference="false" type="{unknown}"/>
    <parameter name="height" byreference="false" type="{unknown}"/>
    <parameter name="flags" byreference="false" type="{unknown}" default="" constant="self::FIT"/>
  </method>
  <method name="calculateSize" start="375" end="435" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Calculates dimensions of resized image."/>
      <param description="in pixels or percent" type="object" variable="$newWidth">
        <type full="Nette\Utils\int|string|null" namespace="Nette\Utils" name="int|string|null"/>
      </param>
      <param description="in pixels or percent" type="object" variable="$newHeight">
        <type full="Nette\Utils\int|string|null" namespace="Nette\Utils" name="int|string|null"/>
      </param>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="srcWidth" byreference="false" type="int"/>
    <parameter name="srcHeight" byreference="false" type="int"/>
    <parameter name="newWidth" byreference="false" type="{unknown}"/>
    <parameter name="newHeight" byreference="false" type="{unknown}"/>
    <parameter name="flags" byreference="false" type="{unknown}" default="" constant="self::FIT"/>
  </method>
  <method name="crop" start="446" end="460" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Crops image."/>
      <param description="in pixels or percent" type="object" variable="$left">
        <type full="Nette\Utils\int|string" namespace="Nette\Utils" name="int|string"/>
      </param>
      <param description="in pixels or percent" type="object" variable="$top">
        <type full="Nette\Utils\int|string" namespace="Nette\Utils" name="int|string"/>
      </param>
      <param description="in pixels or percent" type="object" variable="$width">
        <type full="Nette\Utils\int|string" namespace="Nette\Utils" name="int|string"/>
      </param>
      <param description="in pixels or percent" type="object" variable="$height">
        <type full="Nette\Utils\int|string" namespace="Nette\Utils" name="int|string"/>
      </param>
      <return resolution="static" type="object">
        <type full="Nette\Utils\Image" namespace="Nette\Utils" name="Image"/>
      </return>
    </docblock>
    <parameter name="left" byreference="false" type="{unknown}"/>
    <parameter name="top" byreference="false" type="{unknown}"/>
    <parameter name="width" byreference="false" type="{unknown}"/>
    <parameter name="height" byreference="false" type="{unknown}"/>
  </method>
  <method name="calculateCutout" start="470" end="501" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Calculates dimensions of cutout in image."/>
      <param description="in pixels or percent" type="object" variable="$left">
        <type full="Nette\Utils\int|string" namespace="Nette\Utils" name="int|string"/>
      </param>
      <param description="in pixels or percent" type="object" variable="$top">
        <type full="Nette\Utils\int|string" namespace="Nette\Utils" name="int|string"/>
      </param>
      <param description="in pixels or percent" type="object" variable="$newWidth">
        <type full="Nette\Utils\int|string" namespace="Nette\Utils" name="int|string"/>
      </param>
      <param description="in pixels or percent" type="object" variable="$newHeight">
        <type full="Nette\Utils\int|string" namespace="Nette\Utils" name="int|string"/>
      </param>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="srcWidth" byreference="false" type="int"/>
    <parameter name="srcHeight" byreference="false" type="int"/>
    <parameter name="left" byreference="false" type="{unknown}"/>
    <parameter name="top" byreference="false" type="{unknown}"/>
    <parameter name="newWidth" byreference="false" type="{unknown}"/>
    <parameter name="newHeight" byreference="false" type="{unknown}"/>
  </method>
  <method name="sharpen" start="508" end="516" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Sharpens image a little bit."/>
      <return resolution="static" type="object">
        <type full="Nette\Utils\Image" namespace="Nette\Utils" name="Image"/>
      </return>
    </docblock>
  </method>
  <method name="place" start="526" end="581" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Puts another image into this image."/>
      <param description="in pixels or percent" type="object" variable="$left">
        <type full="Nette\Utils\int|string" namespace="Nette\Utils" name="int|string"/>
      </param>
      <param description="in pixels or percent" type="object" variable="$top">
        <type full="Nette\Utils\int|string" namespace="Nette\Utils" name="int|string"/>
      </param>
      <param description="0..100" type="int" variable="$opacity"/>
      <return resolution="static" type="object">
        <type full="Nette\Utils\Image" namespace="Nette\Utils" name="Image"/>
      </return>
    </docblock>
    <parameter name="image" byreference="false" type="object">
      <type full="Nette\Utils\self" namespace="Nette\Utils" name="self"/>
    </parameter>
    <parameter name="left" byreference="false" type="integer" default="0"/>
    <parameter name="top" byreference="false" type="integer" default="0"/>
    <parameter name="opacity" byreference="false" type="integer" default="100"/>
  </method>
  <method name="save" start="588" end="601" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Saves image to the file. Quality is in the range 0..100 for JPEG (default 85), WEBP (default 80) and AVIF (default 30) and 0..9 for PNG (default 9)."/>
      <throws type="object">
        <type full="Nette\Utils\ImageException" namespace="Nette\Utils" name="ImageException"/>
      </throws>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="file" byreference="false" type="string"/>
    <parameter name="quality" byreference="false" nullable="true" type="int" default="NULL"/>
    <parameter name="type" byreference="false" nullable="true" type="int" default="NULL"/>
  </method>
  <method name="toString" start="607" end="612" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Outputs image to string. Quality is in the range 0..100 for JPEG (default 85), WEBP (default 80) and AVIF (default 30) and 0..9 for PNG (default 9)."/>
    </docblock>
    <return type="string" nullable="false"/>
    <parameter name="type" byreference="false" type="{unknown}" default="" constant="self::JPEG"/>
    <parameter name="quality" byreference="false" nullable="true" type="int" default="NULL"/>
  </method>
  <method name="__toString" start="618" end="630" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Outputs image to string."/>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
  <method name="send" start="637" end="641" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Outputs image to browser. Quality is in the range 0..100 for JPEG (default 85), WEBP (default 80) and AVIF (default 30) and 0..9 for PNG (default 9)."/>
      <throws type="object">
        <type full="Nette\Utils\ImageException" namespace="Nette\Utils" name="ImageException"/>
      </throws>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="type" byreference="false" type="{unknown}" default="" constant="self::JPEG"/>
    <parameter name="quality" byreference="false" nullable="true" type="int" default="NULL"/>
  </method>
  <method name="output" start="648" end="686" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Outputs image to browser or file."/>
      <throws type="object">
        <type full="Nette\Utils\ImageException" namespace="Nette\Utils" name="ImageException"/>
      </throws>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="type" byreference="false" type="int"/>
    <parameter name="quality" byreference="false" nullable="true" type="int"/>
    <parameter name="file" byreference="false" nullable="true" type="string" default="NULL"/>
  </method>
  <method name="__call" start="694" end="726" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Call to undefined method."/>
      <return type="mixed"/>
      <throws type="object">
        <type full="Nette\Utils\Nette\MemberAccessException" namespace="Nette\Utils\Nette" name="MemberAccessException"/>
      </throws>
    </docblock>
    <parameter name="name" byreference="false" type="string"/>
    <parameter name="args" byreference="false" type="array"/>
  </method>
  <method name="__clone" start="729" end="734" abstract="false" final="false" static="false" visibility="public"/>
  <method name="isPercent" start="740" end="751" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description/>
      <param description="in pixels or percent" type="object" variable="$num">
        <type full="Nette\Utils\int|string" namespace="Nette\Utils" name="int|string"/>
      </param>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="num" byreference="true" type="{unknown}"/>
  </method>
  <method name="__sleep" start="757" end="760" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Prevents serialization."/>
    </docblock>
    <return type="array" nullable="false"/>
  </method>
  <trait full="Nette\SmartObject" namespace="Nette" name="SmartObject">
    <method name="__call" start="27" end="43" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <throws type="object">
          <type full="Nette\MemberAccessException" namespace="Nette" name="MemberAccessException"/>
        </throws>
      </docblock>
      <parameter name="name" byreference="false" type="string"/>
      <parameter name="args" byreference="false" type="array"/>
    </method>
    <method name="__callStatic" start="49" end="52" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description/>
        <throws type="object">
          <type full="Nette\MemberAccessException" namespace="Nette" name="MemberAccessException"/>
        </throws>
      </docblock>
      <parameter name="name" byreference="false" type="string"/>
      <parameter name="args" byreference="false" type="array"/>
    </method>
    <method name="__get" start="59" end="86" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <return type="mixed"/>
        <throws description="if the property is not defined." type="object">
          <type full="Nette\MemberAccessException" namespace="Nette" name="MemberAccessException"/>
        </throws>
      </docblock>
      <parameter name="name" byreference="false" type="string"/>
    </method>
    <method name="__set" start="94" end="120" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <param type="mixed" variable="$value"/>
        <return type="object">
          <type full="Nette\void" namespace="Nette" name="void"/>
        </return>
        <throws description="if the property is not defined or is read-only" type="object">
          <type full="Nette\MemberAccessException" namespace="Nette" name="MemberAccessException"/>
        </throws>
      </docblock>
      <parameter name="name" byreference="false" type="string"/>
      <parameter name="value" byreference="false" type="{unknown}"/>
    </method>
    <method name="__unset" start="127" end="133" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <return type="object">
          <type full="Nette\void" namespace="Nette" name="void"/>
        </return>
        <throws type="object">
          <type full="Nette\MemberAccessException" namespace="Nette" name="MemberAccessException"/>
        </throws>
      </docblock>
      <parameter name="name" byreference="false" type="string"/>
    </method>
    <method name="__isset" start="136" end="139" abstract="false" final="false" static="false" visibility="public">
      <return type="bool" nullable="false"/>
      <parameter name="name" byreference="false" type="string"/>
    </method>
  </trait>
</class>
