<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PhpCsFixer\Tokenizer\Transformer\CurlyBraceTransformer" namespace="PhpCsFixer\Tokenizer\Transformer" name="CurlyBraceTransformer" abstract="false" final="true" start="35" end="221">
  <file path="../vendor/friendsofphp/php-cs-fixer/src/Tokenizer/Transformer" file="CurlyBraceTransformer.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/friendsofphp/php-cs-fixer/src/Tokenizer/Transformer/CurlyBraceTransformer.php" size="6657" time="2021-11-15T17:17:55+00:00" unixtime="1636996675" sha1="fd3aa0fd06e27791f9a817e071d1df65ac28f827" relative="vendor/friendsofphp/php-cs-fixer/src/Tokenizer/Transformer/CurlyBraceTransformer.php"/>
  <docblock>
    <description compact="Transform discriminate overloaded curly braces tokens.">Performed transformations:
- closing `}` for T_CURLY_OPEN into CT::T_CURLY_CLOSE,
- closing `}` for T_DOLLAR_OPEN_CURLY_BRACES into CT::T_DOLLAR_CLOSE_CURLY_BRACES,
- in `$foo-&gt;{$bar}` into CT::T_DYNAMIC_PROP_BRACE_OPEN and CT::T_DYNAMIC_PROP_BRACE_CLOSE,
- in `${$foo}` into CT::T_DYNAMIC_VAR_BRACE_OPEN and CT::T_DYNAMIC_VAR_BRACE_CLOSE,
- in `$array{$index}` into CT::T_ARRAY_INDEX_CURLY_BRACE_OPEN and CT::T_ARRAY_INDEX_CURLY_BRACE_CLOSE,
- in `use some\a\{ClassA, ClassB, ClassC as C}` into CT::T_GROUP_IMPORT_BRACE_OPEN, CT::T_GROUP_IMPORT_BRACE_CLOSE.</description>
    <author value="Dariusz RumiÅ„ski &lt;dariusz.ruminski@gmail.com&gt;"/>
    <internal/>
  </docblock>
  <extends full="PhpCsFixer\Tokenizer\AbstractTransformer" namespace="PhpCsFixer\Tokenizer" name="AbstractTransformer"/>
  <method name="getRequiredPhpVersionId" start="40" end="43" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
  </method>
  <method name="process" start="48" end="59" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
    <parameter name="token" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Token" namespace="PhpCsFixer\Tokenizer" name="Token"/>
    </parameter>
    <parameter name="index" byreference="false" type="{unknown}"/>
  </method>
  <method name="getCustomTokens" start="64" end="78" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
  </method>
  <method name="transformIntoCurlyCloseBrace" start="87" end="113" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Transform closing `}` for T_CURLY_OPEN into CT::T_CURLY_CLOSE.">This should be done at very beginning of curly braces transformations.</description>
      <param type="int" variable="$index"/>
    </docblock>
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
    <parameter name="token" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Token" namespace="PhpCsFixer\Tokenizer" name="Token"/>
    </parameter>
    <parameter name="index" byreference="false" type="{unknown}"/>
  </method>
  <method name="transformIntoDollarCloseBrace" start="115" end="121" abstract="false" final="false" static="false" visibility="private">
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
    <parameter name="token" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Token" namespace="PhpCsFixer\Tokenizer" name="Token"/>
    </parameter>
    <parameter name="index" byreference="false" type="{unknown}"/>
  </method>
  <method name="transformIntoDynamicPropBraces" start="123" end="138" abstract="false" final="false" static="false" visibility="private">
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
    <parameter name="token" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Token" namespace="PhpCsFixer\Tokenizer" name="Token"/>
    </parameter>
    <parameter name="index" byreference="false" type="{unknown}"/>
  </method>
  <method name="transformIntoDynamicVarBraces" start="140" end="162" abstract="false" final="false" static="false" visibility="private">
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
    <parameter name="token" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Token" namespace="PhpCsFixer\Tokenizer" name="Token"/>
    </parameter>
    <parameter name="index" byreference="false" type="{unknown}"/>
  </method>
  <method name="transformIntoCurlyIndexBraces" start="164" end="202" abstract="false" final="false" static="false" visibility="private">
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
    <parameter name="token" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Token" namespace="PhpCsFixer\Tokenizer" name="Token"/>
    </parameter>
    <parameter name="index" byreference="false" type="{unknown}"/>
  </method>
  <method name="transformIntoGroupUseBraces" start="204" end="220" abstract="false" final="false" static="false" visibility="private">
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
    <parameter name="token" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Token" namespace="PhpCsFixer\Tokenizer" name="Token"/>
    </parameter>
    <parameter name="index" byreference="false" type="{unknown}"/>
  </method>
  <parent full="PhpCsFixer\Tokenizer\AbstractTransformer" namespace="PhpCsFixer\Tokenizer" name="AbstractTransformer">
    <implements full="PhpCsFixer\Tokenizer\TransformerInterface" namespace="PhpCsFixer\Tokenizer" name="TransformerInterface"/>
    <method name="getName" start="27" end="33" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
    </method>
    <method name="getPriority" start="38" end="41" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
    </method>
    <method name="getCustomTokens" start="46" end="46" abstract="true" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
    </method>
  </parent>
  <interface full="PhpCsFixer\Tokenizer\TransformerInterface" namespace="PhpCsFixer\Tokenizer" name="TransformerInterface">
    <method name="getCustomTokens" start="34" end="34" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get tokens created by Transformer."/>
        <return type="array" of="object">
          <type full="PhpCsFixer\Tokenizer\int" namespace="PhpCsFixer\Tokenizer" name="int"/>
        </return>
      </docblock>
    </method>
    <method name="getName" start="43" end="43" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return the name of the transformer.">The name must be all lowercase and without any spaces.</description>
        <return description="The name of the fixer" type="string"/>
      </docblock>
    </method>
    <method name="getPriority" start="52" end="52" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the priority of the transformer.">The default priority is 0 and higher priorities are executed first.</description>
        <return type="int"/>
      </docblock>
    </method>
    <method name="getRequiredPhpVersionId" start="64" end="64" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Return minimal required PHP version id to transform the code.">Custom Token kinds from Transformers are always registered, but sometimes
there is no need to analyse the Tokens if for sure we cannot find examined
token kind, eg transforming `T_FUNCTION` in `&lt;?php use function Foo\\bar;`
code.</description>
        <return type="int"/>
      </docblock>
    </method>
    <method name="process" start="71" end="71" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Process Token to transform it into custom token when needed."/>
        <param type="int" variable="$index"/>
      </docblock>
      <parameter name="tokens" byreference="false" type="object">
        <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
      </parameter>
      <parameter name="token" byreference="false" type="object">
        <type full="PhpCsFixer\Tokenizer\Token" namespace="PhpCsFixer\Tokenizer" name="Token"/>
      </parameter>
      <parameter name="index" byreference="false" type="{unknown}"/>
    </method>
  </interface>
</class>
