<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="League\Container\Definition\DefinitionAggregate" namespace="League\Container\Definition" name="DefinitionAggregate" abstract="false" final="false" start="9" end="124">
  <file path="../vendor/league/container/src/Definition" file="DefinitionAggregate.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/league/container/src/Definition/DefinitionAggregate.php" size="2891" time="2021-07-09T08:23:52+00:00" unixtime="1625819032" sha1="c19b7e935d8b60e2d9591fea8142611f20d3c7b6" relative="vendor/league/container/src/Definition/DefinitionAggregate.php"/>
  <implements full="League\Container\Definition\DefinitionAggregateInterface" namespace="League\Container\Definition" name="DefinitionAggregateInterface"/>
  <uses full="League\Container\ContainerAwareTrait" namespace="League\Container" name="ContainerAwareTrait" start="11" end="11"/>
  <member name="definitions" default="" type="array" visibility="protected" static="false" line="16">
    <docblock>
      <description/>
      <var type="array" of="object">
        <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="23" end="28" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Construct."/>
      <param type="array" variable="$definitions" of="object">
        <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
      </param>
    </docblock>
    <parameter name="definitions" byreference="false" type="array" default=""/>
  </constructor>
  <method name="add" start="33" end="45" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
    </return>
    <parameter name="id" byreference="false" type="string"/>
    <parameter name="definition" byreference="false" type="{unknown}"/>
    <parameter name="shared" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="has" start="50" end="59" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="id" byreference="false" type="string"/>
  </method>
  <method name="hasTag" start="64" end="73" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="tag" byreference="false" type="string"/>
  </method>
  <method name="getDefinition" start="78" end="87" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
    </return>
    <parameter name="id" byreference="false" type="string"/>
  </method>
  <method name="resolve" start="92" end="95" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="id" byreference="false" type="string"/>
    <parameter name="new" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="resolveTagged" start="100" end="111" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="array" nullable="false"/>
    <parameter name="tag" byreference="false" type="string"/>
    <parameter name="new" byreference="false" type="boolean" default="false"/>
  </method>
  <method name="getIterator" start="116" end="123" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="Generator" namespace="" name="Generator"/>
    </return>
  </method>
  <interface full="League\Container\Definition\DefinitionAggregateInterface" namespace="League\Container\Definition" name="DefinitionAggregateInterface">
    <extends full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
    <extends full="IteratorAggregate" namespace="" name="IteratorAggregate"/>
    <method name="add" start="19" end="19" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Add a definition to the aggregate."/>
        <param type="string" variable="$id"/>
        <param type="mixed" variable="$definition"/>
        <param type="boolean" variable="$shared"/>
        <return type="object">
          <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
      </return>
      <parameter name="id" byreference="false" type="string"/>
      <parameter name="definition" byreference="false" type="{unknown}"/>
      <parameter name="shared" byreference="false" type="boolean" default="false"/>
    </method>
    <method name="has" start="28" end="28" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Checks whether alias exists as definition."/>
        <param type="string" variable="$id"/>
        <return type="boolean"/>
      </docblock>
      <return type="bool" nullable="false"/>
      <parameter name="id" byreference="false" type="string"/>
    </method>
    <method name="hasTag" start="37" end="37" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Checks whether tag exists as definition."/>
        <param type="string" variable="$tag"/>
        <return type="boolean"/>
      </docblock>
      <return type="bool" nullable="false"/>
      <parameter name="tag" byreference="false" type="string"/>
    </method>
    <method name="getDefinition" start="46" end="46" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the definition to be extended."/>
        <param type="string" variable="$id"/>
        <return type="object">
          <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Definition\DefinitionInterface" namespace="League\Container\Definition" name="DefinitionInterface"/>
      </return>
      <parameter name="id" byreference="false" type="string"/>
    </method>
    <method name="resolve" start="56" end="56" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Resolve and build a concrete value from an id/alias."/>
        <param type="string" variable="$id"/>
        <param type="boolean" variable="$new"/>
        <return type="mixed"/>
      </docblock>
      <parameter name="id" byreference="false" type="string"/>
      <parameter name="new" byreference="false" type="boolean" default="false"/>
    </method>
    <method name="resolveTagged" start="66" end="66" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Resolve and build an array of concrete values from a tag."/>
        <param type="string" variable="$tag"/>
        <param type="boolean" variable="$new"/>
        <return type="mixed"/>
      </docblock>
      <parameter name="tag" byreference="false" type="string"/>
      <parameter name="new" byreference="false" type="boolean" default="false"/>
    </method>
  </interface>
  <trait full="League\Container\ContainerAwareTrait" namespace="League\Container" name="ContainerAwareTrait">
    <member name="container" visibility="protected" static="false" line="13">
      <docblock>
        <description/>
        <var type="object">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </var>
      </docblock>
    </member>
    <member name="leagueContainer" visibility="protected" static="false" line="18">
      <docblock>
        <description/>
        <var type="object">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </var>
      </docblock>
    </member>
    <method name="setContainer" start="27" end="32" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set a container."/>
        <param type="object" variable="$container">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </param>
        <return type="object">
          <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
      </return>
      <parameter name="container" byreference="false" type="object">
        <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
      </parameter>
    </method>
    <method name="getContainer" start="39" end="46" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the container."/>
        <return type="object">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
      </return>
    </method>
    <method name="setLeagueContainer" start="55" end="61" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set a container."/>
        <param type="object" variable="$container">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </param>
        <return resolution="self" type="object">
          <type full="League\Container\ContainerAwareTrait" namespace="League\Container" name="ContainerAwareTrait"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
      </return>
      <parameter name="container" byreference="false" type="object">
        <type full="League\Container\Container" namespace="League\Container" name="Container"/>
      </parameter>
    </method>
    <method name="getLeagueContainer" start="68" end="75" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the container."/>
        <return type="object">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Container" namespace="League\Container" name="Container"/>
      </return>
    </method>
  </trait>
</class>
