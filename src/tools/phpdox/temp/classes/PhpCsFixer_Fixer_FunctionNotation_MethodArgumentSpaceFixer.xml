<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PhpCsFixer\Fixer\FunctionNotation\MethodArgumentSpaceFixer" namespace="PhpCsFixer\Fixer\FunctionNotation" name="MethodArgumentSpaceFixer" abstract="false" final="true" start="37" end="512">
  <file path="../vendor/friendsofphp/php-cs-fixer/src/Fixer/FunctionNotation" file="MethodArgumentSpaceFixer.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/friendsofphp/php-cs-fixer/src/Fixer/FunctionNotation/MethodArgumentSpaceFixer.php" size="17969" time="2021-11-15T17:17:55+00:00" unixtime="1636996675" sha1="6da594e5c9ffde3d37ea17216f8658989ce4ec89" relative="vendor/friendsofphp/php-cs-fixer/src/Fixer/FunctionNotation/MethodArgumentSpaceFixer.php"/>
  <docblock>
    <description compact="Fixer for rules defined in PSR2 ¶4.4, ¶4.6."/>
    <author value="Kuanhung Chen &lt;ericj.tw@gmail.com&gt;"/>
  </docblock>
  <extends full="PhpCsFixer\AbstractFixer" namespace="PhpCsFixer" name="AbstractFixer"/>
  <implements full="PhpCsFixer\Fixer\ConfigurationDefinitionFixerInterface" namespace="PhpCsFixer\Fixer" name="ConfigurationDefinitionFixerInterface"/>
  <implements full="PhpCsFixer\Fixer\WhitespacesAwareFixerInterface" namespace="PhpCsFixer\Fixer" name="WhitespacesAwareFixerInterface"/>
  <method name="fixSpace" start="44" end="48" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Method to insert space after comma and remove space before comma."/>
      <param type="int" variable="$index"/>
    </docblock>
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
    <parameter name="index" byreference="false" type="{unknown}"/>
  </method>
  <method name="getDefinition" start="53" end="110" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
  </method>
  <method name="isCandidate" start="115" end="118" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
  </method>
  <method name="configure" start="120" end="127" abstract="false" final="false" static="false" visibility="public">
    <parameter name="configuration" byreference="false" type="array" default="NULL"/>
  </method>
  <method name="getPriority" start="135" end="138" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}">Must run before ArrayIndentationFixer.
Must run after BracesFixer, CombineNestedDirnameFixer, FunctionDeclarationFixer, ImplodeCallFixer, MethodChainingIndentationFixer, NoUselessSprintfFixer, PowToExponentiationFixer.</description>
    </docblock>
  </method>
  <method name="applyFix" start="143" end="175" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="file" byreference="false" type="object">
      <type full="SplFileInfo" namespace="" name="SplFileInfo"/>
    </parameter>
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
  </method>
  <method name="createConfigurationDefinition" start="180" end="214" abstract="false" final="false" static="false" visibility="protected">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
  </method>
  <method name="fixFunction" start="224" end="282" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Fix arguments spacing for given function."/>
      <param description="Tokens to handle" type="object" variable="$tokens">
        <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
      </param>
      <param description="Start parenthesis position" type="int" variable="$startFunctionIndex"/>
      <return description="whether the function is multiline" type="object">
        <type full="PhpCsFixer\Fixer\FunctionNotation\bool" namespace="PhpCsFixer\Fixer\FunctionNotation" name="bool"/>
      </return>
    </docblock>
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
    <parameter name="startFunctionIndex" byreference="false" type="{unknown}"/>
  </method>
  <method name="findWhitespaceIndexAfterParenthesis" start="290" end="309" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param type="int" variable="$startParenthesisIndex"/>
      <param type="int" variable="$endParenthesisIndex"/>
      <return type="object">
        <type full="PhpCsFixer\Fixer\FunctionNotation\null|int" namespace="PhpCsFixer\Fixer\FunctionNotation" name="null|int"/>
      </return>
    </docblock>
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
    <parameter name="startParenthesisIndex" byreference="false" type="{unknown}"/>
    <parameter name="endParenthesisIndex" byreference="false" type="{unknown}"/>
  </method>
  <method name="ensureSingleLine" start="316" end="331" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param type="int" variable="$index"/>
      <return description="Whether newlines were removed from the whitespace token" type="object">
        <type full="PhpCsFixer\Fixer\FunctionNotation\bool" namespace="PhpCsFixer\Fixer\FunctionNotation" name="bool"/>
      </return>
    </docblock>
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
    <parameter name="index" byreference="false" type="{unknown}"/>
  </method>
  <method name="ensureFunctionFullyMultiline" start="336" end="403" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param type="int" variable="$startFunctionIndex"/>
    </docblock>
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
    <parameter name="startFunctionIndex" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="find out what the indentation is" line="338"/>
    </inline>
  </method>
  <method name="fixNewline" start="412" end="433" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Method to insert newline after comma or opening parenthesis."/>
      <param description="index of a comma" type="int" variable="$index"/>
      <param description="the indentation that should be used" type="string" variable="$indentation"/>
      <param description="whether to override the existing character or not" type="object" variable="$override">
        <type full="PhpCsFixer\Fixer\FunctionNotation\bool" namespace="PhpCsFixer\Fixer\FunctionNotation" name="bool"/>
      </param>
    </docblock>
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
    <parameter name="index" byreference="false" type="{unknown}"/>
    <parameter name="indentation" byreference="false" type="{unknown}"/>
    <parameter name="override" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="fixSpace2" start="440" end="482" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Method to insert space after comma and remove space before comma."/>
      <param type="int" variable="$index"/>
    </docblock>
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
    <parameter name="index" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="remove space before comma if exist" line="442"/>
      <comment value="Two cases for fix space after comma (exclude multiline comments)" line="457"/>
      <comment value="1) multiple spaces after comma" line="458"/>
      <comment value="2) no space after comma" line="459"/>
    </inline>
  </method>
  <method name="isCommentLastLineToken" start="492" end="501" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Check if last item of current line is a comment."/>
      <param description="tokens to handle" type="object" variable="$tokens">
        <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
      </param>
      <param description="index of token" type="int" variable="$index"/>
      <return type="object">
        <type full="PhpCsFixer\Fixer\FunctionNotation\bool" namespace="PhpCsFixer\Fixer\FunctionNotation" name="bool"/>
      </return>
    </docblock>
    <parameter name="tokens" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
    </parameter>
    <parameter name="index" byreference="false" type="{unknown}"/>
  </method>
  <method name="isNewline" start="508" end="511" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Checks if token is new line."/>
      <return type="object">
        <type full="PhpCsFixer\Fixer\FunctionNotation\bool" namespace="PhpCsFixer\Fixer\FunctionNotation" name="bool"/>
      </return>
    </docblock>
    <parameter name="token" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Token" namespace="PhpCsFixer\Tokenizer" name="Token"/>
    </parameter>
  </method>
  <parent full="PhpCsFixer\AbstractFixer" namespace="PhpCsFixer" name="AbstractFixer">
    <implements full="PhpCsFixer\Fixer\FixerInterface" namespace="PhpCsFixer\Fixer" name="FixerInterface"/>
    <implements full="PhpCsFixer\Fixer\DefinedFixerInterface" namespace="PhpCsFixer\Fixer" name="DefinedFixerInterface"/>
    <member name="configuration" visibility="protected" static="false" line="41">
      <docblock>
        <description/>
        <var description="mixed&gt;" type="object">
          <type full="PhpCsFixer\null|array&lt;string" namespace="PhpCsFixer" name="null|array&lt;string"/>
        </var>
      </docblock>
    </member>
    <member name="whitespacesConfig" visibility="protected" static="false" line="46">
      <docblock>
        <description/>
        <var type="object">
          <type full="PhpCsFixer\WhitespacesFixerConfig" namespace="PhpCsFixer" name="WhitespacesFixerConfig"/>
        </var>
      </docblock>
    </member>
    <constructor name="__construct" start="53" end="66" abstract="false" final="false" static="false" visibility="public"/>
    <method name="fix" start="68" end="77" abstract="false" final="true" static="false" visibility="public">
      <parameter name="file" byreference="false" type="object">
        <type full="SplFileInfo" namespace="" name="SplFileInfo"/>
      </parameter>
      <parameter name="tokens" byreference="false" type="object">
        <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
      </parameter>
    </method>
    <method name="isRisky" start="82" end="85" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
    </method>
    <method name="getName" start="90" end="96" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
    </method>
    <method name="getPriority" start="101" end="104" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
    </method>
    <method name="supports" start="109" end="112" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
      <parameter name="file" byreference="false" type="object">
        <type full="SplFileInfo" namespace="" name="SplFileInfo"/>
      </parameter>
    </method>
    <method name="configure" start="114" end="166" abstract="false" final="false" static="false" visibility="public">
      <parameter name="configuration" byreference="false" type="array" default="NULL"/>
    </method>
    <method name="getConfigurationDefinition" start="171" end="182" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <return type="object">
          <type full="PhpCsFixer\FixerConfiguration\FixerConfigurationResolverInterface" namespace="PhpCsFixer\FixerConfiguration" name="FixerConfigurationResolverInterface"/>
        </return>
      </docblock>
    </method>
    <method name="setWhitespacesConfig" start="184" end="191" abstract="false" final="false" static="false" visibility="public">
      <parameter name="config" byreference="false" type="object">
        <type full="PhpCsFixer\WhitespacesFixerConfig" namespace="PhpCsFixer" name="WhitespacesFixerConfig"/>
      </parameter>
    </method>
    <method name="applyFix" start="193" end="193" abstract="true" final="false" static="false" visibility="protected">
      <parameter name="file" byreference="false" type="object">
        <type full="SplFileInfo" namespace="" name="SplFileInfo"/>
      </parameter>
      <parameter name="tokens" byreference="false" type="object">
        <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
      </parameter>
    </method>
    <method name="createConfigurationDefinition" start="198" end="205" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description/>
        <return type="object">
          <type full="PhpCsFixer\FixerConfiguration\FixerConfigurationResolverInterface" namespace="PhpCsFixer\FixerConfiguration" name="FixerConfigurationResolverInterface"/>
        </return>
      </docblock>
    </method>
  </parent>
  <interface full="PhpCsFixer\Fixer\FixerInterface" namespace="PhpCsFixer\Fixer" name="FixerInterface">
    <method name="isCandidate" start="34" end="34" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Check if the fixer is a candidate for given Tokens collection.">Fixer is a candidate when the collection contains tokens that may be fixed
during fixer work. This could be considered as some kind of bloom filter.
When this method returns true then to the Tokens collection may or may not
need a fixing, but when this method returns false then the Tokens collection
need no fixing for sure.</description>
        <return type="object">
          <type full="PhpCsFixer\Fixer\bool" namespace="PhpCsFixer\Fixer" name="bool"/>
        </return>
      </docblock>
      <parameter name="tokens" byreference="false" type="object">
        <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
      </parameter>
    </method>
    <method name="isRisky" start="43" end="43" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Check if fixer is risky or not.">Risky fixer could change code behavior!</description>
        <return type="object">
          <type full="PhpCsFixer\Fixer\bool" namespace="PhpCsFixer\Fixer" name="bool"/>
        </return>
      </docblock>
    </method>
    <method name="fix" start="51" end="51" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Fixes a file."/>
        <param description="A \SplFileInfo instance" type="object" variable="$file">
          <type full="\SplFileInfo" namespace="" name="SplFileInfo"/>
        </param>
        <param description="Tokens collection" type="object" variable="$tokens">
          <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
        </param>
      </docblock>
      <parameter name="file" byreference="false" type="object">
        <type full="SplFileInfo" namespace="" name="SplFileInfo"/>
      </parameter>
      <parameter name="tokens" byreference="false" type="object">
        <type full="PhpCsFixer\Tokenizer\Tokens" namespace="PhpCsFixer\Tokenizer" name="Tokens"/>
      </parameter>
    </method>
    <method name="getName" start="60" end="60" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the name of the fixer.">The name must be all lowercase and without any spaces.</description>
        <return description="The name of the fixer" type="string"/>
      </docblock>
    </method>
    <method name="getPriority" start="69" end="69" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the priority of the fixer.">The default priority is 0 and higher priorities are executed first.</description>
        <return type="int"/>
      </docblock>
    </method>
    <method name="supports" start="76" end="76" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns true if the file is supported by this fixer."/>
        <return description="true if the file is supported by this fixer, false otherwise" type="object">
          <type full="PhpCsFixer\Fixer\bool" namespace="PhpCsFixer\Fixer" name="bool"/>
        </return>
      </docblock>
      <parameter name="file" byreference="false" type="object">
        <type full="SplFileInfo" namespace="" name="SplFileInfo"/>
      </parameter>
    </method>
  </interface>
  <interface full="PhpCsFixer\Fixer\DefinedFixerInterface" namespace="PhpCsFixer\Fixer" name="DefinedFixerInterface">
    <extends full="PhpCsFixer\Fixer\FixerInterface" namespace="PhpCsFixer\Fixer" name="FixerInterface"/>
    <method name="getDefinition" start="28" end="28" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns the definition of the fixer."/>
        <return type="object">
          <type full="PhpCsFixer\FixerDefinition\FixerDefinitionInterface" namespace="PhpCsFixer\FixerDefinition" name="FixerDefinitionInterface"/>
        </return>
      </docblock>
    </method>
  </interface>
  <interface full="PhpCsFixer\Fixer\ConfigurationDefinitionFixerInterface" namespace="PhpCsFixer\Fixer" name="ConfigurationDefinitionFixerInterface">
    <extends full="PhpCsFixer\Fixer\ConfigurableFixerInterface" namespace="PhpCsFixer\Fixer" name="ConfigurableFixerInterface"/>
    <method name="getConfigurationDefinition" start="27" end="27" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Defines the available configuration options of the fixer."/>
        <return type="object">
          <type full="PhpCsFixer\FixerConfiguration\FixerConfigurationResolverInterface" namespace="PhpCsFixer\FixerConfiguration" name="FixerConfigurationResolverInterface"/>
        </return>
      </docblock>
    </method>
  </interface>
  <interface full="PhpCsFixer\Fixer\WhitespacesAwareFixerInterface" namespace="PhpCsFixer\Fixer" name="WhitespacesAwareFixerInterface">
    <extends full="PhpCsFixer\Fixer\FixerInterface" namespace="PhpCsFixer\Fixer" name="FixerInterface"/>
    <method name="setWhitespacesConfig" start="22" end="22" abstract="false" final="false" static="false" visibility="public">
      <parameter name="config" byreference="false" type="object">
        <type full="PhpCsFixer\WhitespacesFixerConfig" namespace="PhpCsFixer" name="WhitespacesFixerConfig"/>
      </parameter>
    </method>
  </interface>
</class>
