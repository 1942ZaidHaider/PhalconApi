<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Composer\IO\ConsoleIO" namespace="Composer\IO" name="ConsoleIO" abstract="false" final="false" start="29" end="346">
  <file path="../vendor/composer/composer/src/Composer/IO" file="ConsoleIO.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/composer/composer/src/Composer/IO/ConsoleIO.php" size="10727" time="2022-04-13T14:39:56+00:00" unixtime="1649860796" sha1="dc192c6463ea9017f978e7f6fc57c3f842cff2ec" relative="vendor/composer/composer/src/Composer/IO/ConsoleIO.php"/>
  <docblock>
    <description compact="The Input/Output helper."/>
    <author value="FranÃ§ois Pluchino &lt;francois.pluchino@opendisplay.com&gt;"/>
    <author value="Jordi Boggiano &lt;j.boggiano@seld.be&gt;"/>
  </docblock>
  <extends full="Composer\IO\BaseIO" namespace="Composer\IO" name="BaseIO"/>
  <member name="input" visibility="protected" static="false" line="32">
    <docblock>
      <var type="object">
        <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
      </var>
    </docblock>
  </member>
  <member name="output" visibility="protected" static="false" line="34">
    <docblock>
      <var type="object">
        <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
      </var>
    </docblock>
  </member>
  <member name="helperSet" visibility="protected" static="false" line="36">
    <docblock>
      <var type="object">
        <type full="Symfony\Component\Console\Helper\HelperSet" namespace="Symfony\Component\Console\Helper" name="HelperSet"/>
      </var>
    </docblock>
  </member>
  <member name="lastMessage" visibility="protected" static="false" line="38">
    <docblock>
      <var type="string"/>
    </docblock>
  </member>
  <member name="lastMessageErr" visibility="protected" static="false" line="40">
    <docblock>
      <var type="string"/>
    </docblock>
  </member>
  <member name="startTime" visibility="private" static="false" line="43">
    <docblock>
      <var type="float"/>
    </docblock>
  </member>
  <member name="verbosityMap" visibility="private" static="false" line="45">
    <docblock>
      <var description="int&gt;" type="object">
        <type full="Composer\IO\array&lt;int" namespace="Composer\IO" name="array&lt;int"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="54" end="66" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Constructor."/>
      <param description="The input instance" type="object" variable="$input">
        <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
      </param>
      <param description="The output instance" type="object" variable="$output">
        <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
      </param>
      <param description="The helperSet instance" type="object" variable="$helperSet">
        <type full="Symfony\Component\Console\Helper\HelperSet" namespace="Symfony\Component\Console\Helper" name="HelperSet"/>
      </param>
    </docblock>
    <parameter name="input" byreference="false" type="object">
      <type full="Symfony\Component\Console\Input\InputInterface" namespace="Symfony\Component\Console\Input" name="InputInterface"/>
    </parameter>
    <parameter name="output" byreference="false" type="object">
      <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
    </parameter>
    <parameter name="helperSet" byreference="false" type="object">
      <type full="Symfony\Component\Console\Helper\HelperSet" namespace="Symfony\Component\Console\Helper" name="HelperSet"/>
    </parameter>
  </constructor>
  <method name="enableDebugging" start="71" end="74" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="float" variable="$startTime"/>
    </docblock>
    <parameter name="startTime" byreference="false" type="{unknown}"/>
  </method>
  <method name="isInteractive" start="79" end="82" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritDoc}"/>
    </docblock>
  </method>
  <method name="isDecorated" start="87" end="90" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritDoc}"/>
    </docblock>
  </method>
  <method name="isVerbose" start="95" end="98" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritDoc}"/>
    </docblock>
  </method>
  <method name="isVeryVerbose" start="103" end="106" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritDoc}"/>
    </docblock>
  </method>
  <method name="isDebug" start="111" end="114" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritDoc}"/>
    </docblock>
  </method>
  <method name="write" start="119" end="122" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritDoc}"/>
    </docblock>
    <parameter name="messages" byreference="false" type="{unknown}"/>
    <parameter name="newline" byreference="false" type="boolean" default="true"/>
    <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
  </method>
  <method name="writeError" start="127" end="130" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritDoc}"/>
    </docblock>
    <parameter name="messages" byreference="false" type="{unknown}"/>
    <parameter name="newline" byreference="false" type="boolean" default="true"/>
    <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
  </method>
  <method name="writeRaw" start="135" end="138" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritDoc}"/>
    </docblock>
    <parameter name="messages" byreference="false" type="{unknown}"/>
    <parameter name="newline" byreference="false" type="boolean" default="true"/>
    <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
  </method>
  <method name="writeErrorRaw" start="143" end="146" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritDoc}"/>
    </docblock>
    <parameter name="messages" byreference="false" type="{unknown}"/>
    <parameter name="newline" byreference="false" type="boolean" default="true"/>
    <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
  </method>
  <method name="doWrite" start="154" end="193" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param type="object" variable="$messages">
        <type full="Composer\IO\array|string" namespace="Composer\IO" name="array|string"/>
      </param>
      <param type="object" variable="$newline">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </param>
      <param type="object" variable="$stderr">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </param>
      <param type="int" variable="$verbosity"/>
    </docblock>
    <parameter name="messages" byreference="false" type="{unknown}"/>
    <parameter name="newline" byreference="false" type="{unknown}"/>
    <parameter name="stderr" byreference="false" type="{unknown}"/>
    <parameter name="verbosity" byreference="false" type="{unknown}"/>
    <parameter name="raw" byreference="false" type="boolean" default="false"/>
    <inline>
      <comment value="hack to keep our usage BC with symfony&lt;2.8 versions" line="161"/>
      <comment value="this removes the quiet output but there is no way around it" line="162"/>
      <comment value="see https://github.com/composer/composer/pull/4913" line="163"/>
    </inline>
  </method>
  <method name="overwrite" start="198" end="201" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritDoc}"/>
    </docblock>
    <parameter name="messages" byreference="false" type="{unknown}"/>
    <parameter name="newline" byreference="false" type="boolean" default="true"/>
    <parameter name="size" byreference="false" type="{unknown}" default="NULL"/>
    <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
  </method>
  <method name="overwriteError" start="206" end="209" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritDoc}"/>
    </docblock>
    <parameter name="messages" byreference="false" type="{unknown}"/>
    <parameter name="newline" byreference="false" type="boolean" default="true"/>
    <parameter name="size" byreference="false" type="{unknown}" default="NULL"/>
    <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
  </method>
  <method name="doOverwrite" start="218" end="254" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param type="object" variable="$messages">
        <type full="Composer\IO\array|string" namespace="Composer\IO" name="array|string"/>
      </param>
      <param type="object" variable="$newline">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </param>
      <param type="object" variable="$size">
        <type full="Composer\IO\int|null" namespace="Composer\IO" name="int|null"/>
      </param>
      <param type="object" variable="$stderr">
        <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
      </param>
      <param type="int" variable="$verbosity"/>
    </docblock>
    <parameter name="messages" byreference="false" type="{unknown}"/>
    <parameter name="newline" byreference="false" type="{unknown}"/>
    <parameter name="size" byreference="false" type="{unknown}"/>
    <parameter name="stderr" byreference="false" type="{unknown}"/>
    <parameter name="verbosity" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="messages can be an array, let's convert it to string anyway" line="220"/>
      <comment value="since overwrite is supposed to overwrite last message..." line="223"/>
      <comment value="...let's fill its length with backspaces" line="228"/>
      <comment value="write the new message" line="231"/>
      <comment value="In cmd.exe on Win8.1 (possibly 10?), the line can not be cleared, so we need to" line="234"/>
      <comment value="track the length of previous output and fill it with spaces to make sure the line is cleared." line="235"/>
      <comment value="See https://github.com/composer/composer/pull/5836 for more details" line="236"/>
    </inline>
  </method>
  <method name="ask" start="259" end="266" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritDoc}"/>
    </docblock>
    <parameter name="question" byreference="false" type="{unknown}"/>
    <parameter name="default" byreference="false" type="{unknown}" default="NULL"/>
  </method>
  <method name="askConfirmation" start="271" end="278" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritDoc}"/>
    </docblock>
    <parameter name="question" byreference="false" type="{unknown}"/>
    <parameter name="default" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="askAndValidate" start="283" end="292" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritDoc}"/>
    </docblock>
    <parameter name="question" byreference="false" type="{unknown}"/>
    <parameter name="validator" byreference="false" type="{unknown}"/>
    <parameter name="attempts" byreference="false" type="{unknown}" default="NULL"/>
    <parameter name="default" byreference="false" type="{unknown}" default="NULL"/>
  </method>
  <method name="askAndHideAnswer" start="297" end="305" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritDoc}"/>
    </docblock>
    <parameter name="question" byreference="false" type="{unknown}"/>
  </method>
  <method name="select" start="310" end="333" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritDoc}"/>
    </docblock>
    <parameter name="question" byreference="false" type="{unknown}"/>
    <parameter name="choices" byreference="false" type="{unknown}"/>
    <parameter name="default" byreference="false" type="{unknown}"/>
    <parameter name="attempts" byreference="false" type="boolean" default="false"/>
    <parameter name="errorMessage" byreference="false" type="string" default="'Value &quot;%s&quot; is invalid'"/>
    <parameter name="multiselect" byreference="false" type="boolean" default="false"/>
    <inline>
      <comment value="IOInterface requires false, and Question requires null or int" line="315"/>
    </inline>
  </method>
  <method name="getErrorOutput" start="338" end="345" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <return type="object">
        <type full="Symfony\Component\Console\Output\OutputInterface" namespace="Symfony\Component\Console\Output" name="OutputInterface"/>
      </return>
    </docblock>
  </method>
  <extenders>
    <extender full="Composer\IO\BufferIO" namespace="Composer\IO" name="BufferIO"/>
  </extenders>
  <parent full="Composer\IO\BaseIO" namespace="Composer\IO" name="BaseIO">
    <implements full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface"/>
    <implements full="Psr\Log\LoggerInterface" namespace="Psr\Log" name="LoggerInterface"/>
    <member name="authentications" default="" type="array" visibility="protected" static="false" line="22"/>
    <method name="getAuthentications" start="27" end="30" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritDoc}"/>
      </docblock>
    </method>
    <method name="resetAuthentications" start="35" end="38" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritDoc}"/>
      </docblock>
    </method>
    <method name="hasAuthentication" start="43" end="46" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritDoc}"/>
      </docblock>
      <parameter name="repositoryName" byreference="false" type="{unknown}"/>
    </method>
    <method name="getAuthentication" start="51" end="58" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritDoc}"/>
      </docblock>
      <parameter name="repositoryName" byreference="false" type="{unknown}"/>
    </method>
    <method name="setAuthentication" start="63" end="66" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritDoc}"/>
      </docblock>
      <parameter name="repositoryName" byreference="false" type="{unknown}"/>
      <parameter name="username" byreference="false" type="{unknown}"/>
      <parameter name="password" byreference="false" type="{unknown}" default="NULL"/>
    </method>
    <method name="writeRaw" start="71" end="74" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritDoc}"/>
      </docblock>
      <parameter name="messages" byreference="false" type="{unknown}"/>
      <parameter name="newline" byreference="false" type="boolean" default="true"/>
      <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
    </method>
    <method name="writeErrorRaw" start="79" end="82" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritDoc}"/>
      </docblock>
      <parameter name="messages" byreference="false" type="{unknown}"/>
      <parameter name="newline" byreference="false" type="boolean" default="true"/>
      <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
    </method>
    <method name="checkAndSetAuthentication" start="91" end="107" abstract="false" final="false" static="false" visibility="protected">
      <docblock>
        <description compact="Check for overwrite and set the authentication information for the repository."/>
        <param description="The unique name of repository" type="string" variable="$repositoryName"/>
        <param description="The username" type="string" variable="$username"/>
        <param description="The password" type="string" variable="$password"/>
      </docblock>
      <parameter name="repositoryName" byreference="false" type="{unknown}"/>
      <parameter name="username" byreference="false" type="{unknown}"/>
      <parameter name="password" byreference="false" type="{unknown}" default="NULL"/>
    </method>
    <method name="loadConfiguration" start="112" end="155" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritDoc}"/>
      </docblock>
      <parameter name="config" byreference="false" type="object">
        <type full="Composer\Config" namespace="Composer" name="Config"/>
      </parameter>
      <inline>
        <comment value="reload oauth tokens from config if available" line="121"/>
        <comment value="reload http basic credentials from config if available" line="144"/>
        <comment value="setup process timeout" line="153"/>
      </inline>
    </method>
    <method name="emergency" start="164" end="167" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="System is unusable."/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context"/>
        <return type="null"/>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="alert" start="179" end="182" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Action must be taken immediately.">Example: Entire website down, database unavailable, etc. This should
trigger the SMS alerts and wake you up.</description>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context"/>
        <return type="null"/>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="critical" start="193" end="196" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Critical conditions.">Example: Application component unavailable, unexpected exception.</description>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context"/>
        <return type="null"/>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="error" start="206" end="209" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Runtime errors that do not require immediate action but should typically be logged and monitored."/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context"/>
        <return type="null"/>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="warning" start="221" end="224" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Exceptional occurrences that are not errors.">Example: Use of deprecated APIs, poor use of an API, undesirable things
that are not necessarily wrong.</description>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context"/>
        <return type="null"/>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="notice" start="233" end="236" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Normal but significant events."/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context"/>
        <return type="null"/>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="info" start="247" end="250" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Interesting events.">Example: User logs in, SQL logs.</description>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context"/>
        <return type="null"/>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="debug" start="259" end="262" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Detailed debug information."/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context"/>
        <return type="null"/>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="log" start="272" end="285" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Logs with an arbitrary level."/>
        <param type="mixed" variable="$level"/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context"/>
        <return type="null"/>
      </docblock>
      <parameter name="level" byreference="false" type="{unknown}"/>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
  </parent>
  <interface full="Composer\IO\IOInterface" namespace="Composer\IO" name="IOInterface">
    <constant type="{unknown}" name="QUIET" value="1"/>
    <constant type="{unknown}" name="NORMAL" value="2"/>
    <constant type="{unknown}" name="VERBOSE" value="4"/>
    <constant type="{unknown}" name="VERY_VERBOSE" value="8"/>
    <constant type="{unknown}" name="DEBUG" value="16"/>
    <method name="isInteractive" start="35" end="35" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Is this input means interactive?"/>
        <return type="object">
          <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
        </return>
      </docblock>
    </method>
    <method name="isVerbose" start="42" end="42" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Is this output verbose?"/>
        <return type="object">
          <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
        </return>
      </docblock>
    </method>
    <method name="isVeryVerbose" start="49" end="49" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Is the output very verbose?"/>
        <return type="object">
          <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
        </return>
      </docblock>
    </method>
    <method name="isDebug" start="56" end="56" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Is the output in debug verbosity?"/>
        <return type="object">
          <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
        </return>
      </docblock>
    </method>
    <method name="isDecorated" start="63" end="63" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Is this output decorated?"/>
        <return type="object">
          <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
        </return>
      </docblock>
    </method>
    <method name="write" start="72" end="72" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Writes a message to the output."/>
        <param description="The message as an array of lines or a single string" type="object" variable="$messages">
          <type full="Composer\IO\string|array" namespace="Composer\IO" name="string|array"/>
        </param>
        <param description="Whether to add a newline or not" type="object" variable="$newline">
          <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
        </param>
        <param description="Verbosity level from the VERBOSITY_* constants" type="int" variable="$verbosity"/>
      </docblock>
      <parameter name="messages" byreference="false" type="{unknown}"/>
      <parameter name="newline" byreference="false" type="boolean" default="true"/>
      <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
    </method>
    <method name="writeError" start="81" end="81" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Writes a message to the error output."/>
        <param description="The message as an array of lines or a single string" type="object" variable="$messages">
          <type full="Composer\IO\string|array" namespace="Composer\IO" name="string|array"/>
        </param>
        <param description="Whether to add a newline or not" type="object" variable="$newline">
          <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
        </param>
        <param description="Verbosity level from the VERBOSITY_* constants" type="int" variable="$verbosity"/>
      </docblock>
      <parameter name="messages" byreference="false" type="{unknown}"/>
      <parameter name="newline" byreference="false" type="boolean" default="true"/>
      <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
    </method>
    <method name="overwrite" start="91" end="91" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Overwrites a previous message to the output."/>
        <param description="The message as an array of lines or a single string" type="object" variable="$messages">
          <type full="Composer\IO\string|array" namespace="Composer\IO" name="string|array"/>
        </param>
        <param description="Whether to add a newline or not" type="object" variable="$newline">
          <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
        </param>
        <param description="The size of line" type="int" variable="$size"/>
        <param description="Verbosity level from the VERBOSITY_* constants" type="int" variable="$verbosity"/>
      </docblock>
      <parameter name="messages" byreference="false" type="{unknown}"/>
      <parameter name="newline" byreference="false" type="boolean" default="true"/>
      <parameter name="size" byreference="false" type="{unknown}" default="NULL"/>
      <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
    </method>
    <method name="overwriteError" start="101" end="101" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Overwrites a previous message to the error output."/>
        <param description="The message as an array of lines or a single string" type="object" variable="$messages">
          <type full="Composer\IO\string|array" namespace="Composer\IO" name="string|array"/>
        </param>
        <param description="Whether to add a newline or not" type="object" variable="$newline">
          <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
        </param>
        <param description="The size of line" type="int" variable="$size"/>
        <param description="Verbosity level from the VERBOSITY_* constants" type="int" variable="$verbosity"/>
      </docblock>
      <parameter name="messages" byreference="false" type="{unknown}"/>
      <parameter name="newline" byreference="false" type="boolean" default="true"/>
      <parameter name="size" byreference="false" type="{unknown}" default="NULL"/>
      <parameter name="verbosity" byreference="false" type="{unknown}" default="" constant="self::NORMAL"/>
    </method>
    <method name="ask" start="112" end="112" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Asks a question to the user."/>
        <param description="The question to ask" type="string" variable="$question"/>
        <param description="The default answer if none is given by the user" type="string" variable="$default"/>
        <throws description="If there is no data to read in the input stream" type="object">
          <type full="\RuntimeException" namespace="" name="RuntimeException"/>
        </throws>
        <return description="The user answer" type="string"/>
      </docblock>
      <parameter name="question" byreference="false" type="{unknown}"/>
      <parameter name="default" byreference="false" type="{unknown}" default="NULL"/>
    </method>
    <method name="askConfirmation" start="124" end="124" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Asks a confirmation to the user.">The question will be asked until the user answers by nothing, yes, or no.</description>
        <param description="The question to ask" type="string" variable="$question"/>
        <param description="The default answer if the user enters nothing" type="object" variable="$default">
          <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
        </param>
        <return description="true if the user has confirmed, false otherwise" type="object">
          <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
        </return>
      </docblock>
      <parameter name="question" byreference="false" type="{unknown}"/>
      <parameter name="default" byreference="false" type="boolean" default="true"/>
    </method>
    <method name="askAndValidate" start="141" end="141" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Asks for a value and validates the response.">The validator receives the data to validate. It must return the
validated data when the data is valid and throw an exception
otherwise.</description>
        <param description="The question to ask" type="string" variable="$question"/>
        <param description="A PHP callback" type="object" variable="$validator">
          <type full="Composer\IO\callable" namespace="Composer\IO" name="callable"/>
        </param>
        <param description="Max number of times to ask before giving up (default of null means infinite)" type="object" variable="$attempts">
          <type full="Composer\IO\null|int" namespace="Composer\IO" name="null|int"/>
        </param>
        <param description="The default answer if none is given by the user" type="mixed" variable="$default"/>
        <throws description="When any of the validators return an error" type="object">
          <type full="\Exception" namespace="" name="Exception"/>
        </throws>
        <return type="mixed"/>
      </docblock>
      <parameter name="question" byreference="false" type="{unknown}"/>
      <parameter name="validator" byreference="false" type="{unknown}"/>
      <parameter name="attempts" byreference="false" type="{unknown}" default="NULL"/>
      <parameter name="default" byreference="false" type="{unknown}" default="NULL"/>
    </method>
    <method name="askAndHideAnswer" start="150" end="150" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Asks a question to the user and hide the answer."/>
        <param description="The question to ask" type="string" variable="$question"/>
        <return description="The answer" type="string"/>
      </docblock>
      <parameter name="question" byreference="false" type="{unknown}"/>
    </method>
    <method name="select" start="165" end="165" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Asks the user to select a value."/>
        <param description="The question to ask" type="string" variable="$question"/>
        <param description="List of choices to pick from" type="array" variable="$choices"/>
        <param description="The default answer if the user enters nothing" type="object" variable="$default">
          <type full="Composer\IO\bool|string" namespace="Composer\IO" name="bool|string"/>
        </param>
        <param description="Max number of times to ask before giving up (false by default, which means infinite)" type="object" variable="$attempts">
          <type full="Composer\IO\bool|int" namespace="Composer\IO" name="bool|int"/>
        </param>
        <param description="Message which will be shown if invalid value from choice list would be picked" type="string" variable="$errorMessage"/>
        <param description="Select more than one value separated by comma" type="object" variable="$multiselect">
          <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
        </param>
        <throws type="object">
          <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
        </throws>
        <return description="The selected value or values (the key of the choices array)" type="object">
          <type full="Composer\IO\int|string|array" namespace="Composer\IO" name="int|string|array"/>
        </return>
      </docblock>
      <parameter name="question" byreference="false" type="{unknown}"/>
      <parameter name="choices" byreference="false" type="{unknown}"/>
      <parameter name="default" byreference="false" type="{unknown}"/>
      <parameter name="attempts" byreference="false" type="boolean" default="false"/>
      <parameter name="errorMessage" byreference="false" type="string" default="'Value &quot;%s&quot; is invalid'"/>
      <parameter name="multiselect" byreference="false" type="boolean" default="false"/>
    </method>
    <method name="getAuthentications" start="172" end="172" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get all authentication information entered."/>
        <return description="The map of authentication data" type="array"/>
      </docblock>
    </method>
    <method name="hasAuthentication" start="181" end="181" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Verify if the repository has a authentication information."/>
        <param description="The unique name of repository" type="string" variable="$repositoryName"/>
        <return type="object">
          <type full="Composer\IO\bool" namespace="Composer\IO" name="bool"/>
        </return>
      </docblock>
      <parameter name="repositoryName" byreference="false" type="{unknown}"/>
    </method>
    <method name="getAuthentication" start="190" end="190" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the username and password of repository."/>
        <param description="The unique name of repository" type="string" variable="$repositoryName"/>
        <return description="The 'username' and 'password'" type="array"/>
      </docblock>
      <parameter name="repositoryName" byreference="false" type="{unknown}"/>
    </method>
    <method name="setAuthentication" start="199" end="199" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set the authentication information for the repository."/>
        <param description="The unique name of repository" type="string" variable="$repositoryName"/>
        <param description="The username" type="string" variable="$username"/>
        <param description="The password" type="string" variable="$password"/>
      </docblock>
      <parameter name="repositoryName" byreference="false" type="{unknown}"/>
      <parameter name="username" byreference="false" type="{unknown}"/>
      <parameter name="password" byreference="false" type="{unknown}" default="NULL"/>
    </method>
    <method name="loadConfiguration" start="206" end="206" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Loads authentications from a config instance"/>
        <param type="object" variable="$config">
          <type full="Composer\Config" namespace="Composer" name="Config"/>
        </param>
      </docblock>
      <parameter name="config" byreference="false" type="object">
        <type full="Composer\Config" namespace="Composer" name="Config"/>
      </parameter>
    </method>
  </interface>
  <interface full="Psr\Log\LoggerInterface" namespace="Psr\Log" name="LoggerInterface">
    <method name="emergency" start="30" end="30" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="System is unusable."/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="alert" start="43" end="43" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Action must be taken immediately.">Example: Entire website down, database unavailable, etc. This should
trigger the SMS alerts and wake you up.</description>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="critical" start="55" end="55" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Critical conditions.">Example: Application component unavailable, unexpected exception.</description>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="error" start="66" end="66" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Runtime errors that do not require immediate action but should typically be logged and monitored."/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="warning" start="79" end="79" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Exceptional occurrences that are not errors.">Example: Use of deprecated APIs, poor use of an API, undesirable things
that are not necessarily wrong.</description>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="notice" start="89" end="89" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Normal but significant events."/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="info" start="101" end="101" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Interesting events.">Example: User logs in, SQL logs.</description>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="debug" start="111" end="111" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Detailed debug information."/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
      </docblock>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
    <method name="log" start="124" end="124" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Logs with an arbitrary level."/>
        <param type="mixed" variable="$level"/>
        <param type="string" variable="$message"/>
        <param type="array" variable="$context" of="object">
          <type full="Psr\Log\mixed" namespace="Psr\Log" name="mixed"/>
        </param>
        <return type="object">
          <type full="Psr\Log\void" namespace="Psr\Log" name="void"/>
        </return>
        <throws type="object">
          <type full="\Psr\Log\InvalidArgumentException" namespace="\Psr\Log" name="InvalidArgumentException"/>
        </throws>
      </docblock>
      <parameter name="level" byreference="false" type="{unknown}"/>
      <parameter name="message" byreference="false" type="{unknown}"/>
      <parameter name="context" byreference="false" type="array" default=""/>
    </method>
  </interface>
</class>
