<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="League\Container\ReflectionContainer" namespace="League\Container" name="ReflectionContainer" abstract="false" final="false" start="13" end="131">
  <file path="../vendor/league/container/src" file="ReflectionContainer.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/league/container/src/ReflectionContainer.php" size="3474" time="2021-07-09T08:23:52+00:00" unixtime="1625819032" sha1="42ee1cf92cc0d3ec48d78305be6a25866d4b9d3d" relative="vendor/league/container/src/ReflectionContainer.php"/>
  <implements full="League\Container\Argument\ArgumentResolverInterface" namespace="League\Container\Argument" name="ArgumentResolverInterface"/>
  <implements full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
  <uses full="League\Container\Argument\ArgumentResolverTrait" namespace="League\Container\Argument" name="ArgumentResolverTrait" start="15" end="15"/>
  <uses full="League\Container\ContainerAwareTrait" namespace="League\Container" name="ContainerAwareTrait" start="16" end="16"/>
  <member name="cacheResolutions" default="false" type="boolean" visibility="protected" static="false" line="21">
    <docblock>
      <description/>
      <var type="boolean"/>
    </docblock>
  </member>
  <member name="cache" default="" type="array" visibility="protected" static="false" line="28">
    <docblock>
      <description compact="Cache of resolutions."/>
      <var type="array"/>
    </docblock>
  </member>
  <method name="get" start="35" end="66" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
      <throws type="object">
        <type full="ReflectionException" namespace="" name="ReflectionException"/>
      </throws>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
    <parameter name="args" byreference="false" type="array" default=""/>
  </method>
  <method name="has" start="71" end="74" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
  </method>
  <method name="call" start="86" end="115" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Invoke a callable via the container."/>
      <param type="object" variable="$callable">
        <type full="League\Container\callable" namespace="League\Container" name="callable"/>
      </param>
      <param type="array" variable="$args"/>
      <return type="mixed"/>
      <throws type="object">
        <type full="ReflectionException" namespace="" name="ReflectionException"/>
      </throws>
    </docblock>
    <parameter name="callable" byreference="false" type="callable"/>
    <parameter name="args" byreference="false" type="array" default=""/>
  </method>
  <method name="cacheResolutions" start="125" end="130" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Whether the container should default to caching resolutions and returning the cache on following calls."/>
      <param type="boolean" variable="$option"/>
      <return resolution="self" type="object">
        <type full="League\Container\ReflectionContainer" namespace="League\Container" name="ReflectionContainer"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
    </return>
    <parameter name="option" byreference="false" type="boolean" default="true"/>
  </method>
  <interface full="League\Container\Argument\ArgumentResolverInterface" namespace="League\Container\Argument" name="ArgumentResolverInterface">
    <extends full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
    <method name="resolveArguments" start="17" end="17" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Resolve an array of arguments to their concrete implementations."/>
        <param type="array" variable="$arguments"/>
        <return type="array"/>
      </docblock>
      <return type="array" nullable="false"/>
      <parameter name="arguments" byreference="false" type="array"/>
    </method>
    <method name="reflectArguments" start="27" end="27" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Resolves the correct arguments to be passed to a method."/>
        <param type="object" variable="$method">
          <type full="ReflectionFunctionAbstract" namespace="" name="ReflectionFunctionAbstract"/>
        </param>
        <param type="array" variable="$args"/>
        <return type="array"/>
      </docblock>
      <return type="array" nullable="false"/>
      <parameter name="method" byreference="false" type="object">
        <type full="ReflectionFunctionAbstract" namespace="" name="ReflectionFunctionAbstract"/>
      </parameter>
      <parameter name="args" byreference="false" type="array" default=""/>
    </method>
  </interface>
  <interface full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface">
    <method name="get" start="22" end="22" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Finds an entry of the container by its identifier and returns it."/>
        <param description="Identifier of the entry to look for." type="string" variable="$id"/>
        <throws description="No entry was found for **this** identifier." type="object">
          <type full="Psr\Container\NotFoundExceptionInterface" namespace="Psr\Container" name="NotFoundExceptionInterface"/>
        </throws>
        <throws description="Error while retrieving the entry." type="object">
          <type full="Psr\Container\ContainerExceptionInterface" namespace="Psr\Container" name="ContainerExceptionInterface"/>
        </throws>
        <return description="Entry." type="mixed"/>
      </docblock>
      <parameter name="id" byreference="false" type="string"/>
    </method>
    <method name="has" start="35" end="35" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Returns true if the container can return an entry for the given identifier.">Returns false otherwise.

`has($id)` returning true does not mean that `get($id)` will not throw an exception.
It does however mean that `get($id)` will not throw a `NotFoundExceptionInterface`.</description>
        <param description="Identifier of the entry to look for." type="string" variable="$id"/>
        <return type="object">
          <type full="Psr\Container\bool" namespace="Psr\Container" name="bool"/>
        </return>
      </docblock>
      <parameter name="id" byreference="false" type="string"/>
    </method>
  </interface>
  <trait full="League\Container\Argument\ArgumentResolverTrait" namespace="League\Container\Argument" name="ArgumentResolverTrait">
    <method name="resolveArguments" start="17" end="66" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
      <return type="array" nullable="false"/>
      <parameter name="arguments" byreference="false" type="array"/>
    </method>
    <method name="reflectArguments" start="71" end="109" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
      <return type="array" nullable="false"/>
      <parameter name="method" byreference="false" type="object">
        <type full="ReflectionFunctionAbstract" namespace="" name="ReflectionFunctionAbstract"/>
      </parameter>
      <parameter name="args" byreference="false" type="array" default=""/>
    </method>
    <method name="getContainer" start="114" end="114" abstract="true" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <return type="object">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
      </return>
    </method>
    <method name="getLeagueContainer" start="119" end="119" abstract="true" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <return type="object">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Container" namespace="League\Container" name="Container"/>
      </return>
    </method>
  </trait>
  <trait full="League\Container\ContainerAwareTrait" namespace="League\Container" name="ContainerAwareTrait">
    <member name="container" visibility="protected" static="false" line="13">
      <docblock>
        <description/>
        <var type="object">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </var>
      </docblock>
    </member>
    <member name="leagueContainer" visibility="protected" static="false" line="18">
      <docblock>
        <description/>
        <var type="object">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </var>
      </docblock>
    </member>
    <method name="setContainer" start="27" end="32" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set a container."/>
        <param type="object" variable="$container">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </param>
        <return type="object">
          <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
      </return>
      <parameter name="container" byreference="false" type="object">
        <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
      </parameter>
    </method>
    <method name="getContainer" start="39" end="46" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the container."/>
        <return type="object">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
      </return>
    </method>
    <method name="setLeagueContainer" start="55" end="61" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set a container."/>
        <param type="object" variable="$container">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </param>
        <return resolution="self" type="object">
          <type full="League\Container\ContainerAwareTrait" namespace="League\Container" name="ContainerAwareTrait"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
      </return>
      <parameter name="container" byreference="false" type="object">
        <type full="League\Container\Container" namespace="League\Container" name="Container"/>
      </parameter>
    </method>
    <method name="getLeagueContainer" start="68" end="75" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the container."/>
        <return type="object">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Container" namespace="League\Container" name="Container"/>
      </return>
    </method>
  </trait>
</class>
