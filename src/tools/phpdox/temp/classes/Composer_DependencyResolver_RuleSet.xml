<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Composer\DependencyResolver\RuleSet" namespace="Composer\DependencyResolver" name="RuleSet" abstract="false" final="false" start="18" end="176">
  <file path="../vendor/composer/composer/src/Composer/DependencyResolver" file="RuleSet.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/composer/composer/src/Composer/DependencyResolver/RuleSet.php" size="4156" time="2022-04-13T14:39:56+00:00" unixtime="1649860796" sha1="a2d750268686d137015faac9a9f1dfe30339c634" relative="vendor/composer/composer/src/Composer/DependencyResolver/RuleSet.php"/>
  <docblock>
    <description/>
    <author value="Nils Adermann &lt;naderman@naderman.de&gt;"/>
  </docblock>
  <implements full="IteratorAggregate" namespace="" name="IteratorAggregate"/>
  <implements full="Countable" namespace="" name="Countable"/>
  <constant type="integer" name="TYPE_PACKAGE" value="0"/>
  <constant type="integer" name="TYPE_JOB" value="1"/>
  <constant type="integer" name="TYPE_LEARNED" value="4"/>
  <member name="ruleById" visibility="public" static="false" line="30">
    <docblock>
      <description compact="READ-ONLY: Lookup table for rule id to rule object"/>
      <var type="array" of="object">
        <type full="Composer\DependencyResolver\Rule" namespace="Composer\DependencyResolver" name="Rule"/>
      </var>
    </docblock>
  </member>
  <member name="types" default="" type="array" visibility="protected" static="true" line="32"/>
  <member name="rules" visibility="protected" static="false" line="39"/>
  <member name="nextRuleId" visibility="protected" static="false" line="40"/>
  <member name="rulesByHash" visibility="protected" static="false" line="42"/>
  <constructor name="__construct" start="44" end="53" abstract="false" final="false" static="false" visibility="public"/>
  <method name="add" start="55" end="97" abstract="false" final="false" static="false" visibility="public">
    <parameter name="rule" byreference="false" type="object">
      <type full="Composer\DependencyResolver\Rule" namespace="Composer\DependencyResolver" name="Rule"/>
    </parameter>
    <parameter name="type" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="Do not add if rule already exists" line="63"/>
    </inline>
  </method>
  <method name="count" start="99" end="102" abstract="false" final="false" static="false" visibility="public"/>
  <method name="ruleById" start="104" end="107" abstract="false" final="false" static="false" visibility="public">
    <parameter name="id" byreference="false" type="{unknown}"/>
  </method>
  <method name="getRules" start="109" end="112" abstract="false" final="false" static="false" visibility="public"/>
  <method name="getIterator" start="114" end="117" abstract="false" final="false" static="false" visibility="public"/>
  <method name="getIteratorFor" start="119" end="133" abstract="false" final="false" static="false" visibility="public">
    <parameter name="types" byreference="false" type="{unknown}"/>
  </method>
  <method name="getIteratorWithout" start="135" end="148" abstract="false" final="false" static="false" visibility="public">
    <parameter name="types" byreference="false" type="{unknown}"/>
  </method>
  <method name="getTypes" start="150" end="156" abstract="false" final="false" static="false" visibility="public"/>
  <method name="getPrettyString" start="158" end="170" abstract="false" final="false" static="false" visibility="public">
    <parameter name="pool" byreference="false" type="object" default="NULL">
      <type full="Composer\DependencyResolver\Pool" namespace="Composer\DependencyResolver" name="Pool"/>
    </parameter>
  </method>
  <method name="__toString" start="172" end="175" abstract="false" final="false" static="false" visibility="public"/>
  <interface full="IteratorAggregate" namespace="" name="IteratorAggregate">
    <extends full="Traversable" namespace="" name="Traversable"/>
    <method name="getIterator" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Retrieve an external iterator"/>
      <return type="Traversable"/>
    </docblock>
  </method>
  </interface>
  <interface full="Countable" namespace="" name="Countable">
    <method name="count" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Count elements of an object"/>
      <return type="int"/>
    </docblock>
  </method>
  </interface>
</class>
