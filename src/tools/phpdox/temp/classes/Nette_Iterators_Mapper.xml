<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Nette\Iterators\Mapper" namespace="Nette\Iterators" name="Mapper" abstract="false" final="false" start="17" end="35">
  <file path="../vendor/nette/utils/src/Iterators" file="Mapper.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/nette/utils/src/Iterators/Mapper.php" size="620" time="2022-01-24T11:29:14+00:00" unixtime="1643023754" sha1="6ebd22ba7f16e7158612b084922802c85c3f152a" relative="vendor/nette/utils/src/Iterators/Mapper.php"/>
  <docblock>
    <description compact="Applies the callback to the elements of the inner iterator."/>
  </docblock>
  <extends full="IteratorIterator" namespace="" name="IteratorIterator"/>
  <member name="callback" visibility="private" static="false" line="20">
    <docblock>
      <var type="object">
        <type full="Nette\Iterators\callable" namespace="Nette\Iterators" name="callable"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="23" end="27" abstract="false" final="false" static="false" visibility="public">
    <parameter name="iterator" byreference="false" type="object">
      <type full="Traversable" namespace="" name="Traversable"/>
    </parameter>
    <parameter name="callback" byreference="false" type="callable"/>
  </constructor>
  <method name="current" start="31" end="34" abstract="false" final="false" static="false" visibility="public"/>
  <parent full="IteratorIterator" namespace="" name="IteratorIterator">
    <implements full="OuterIterator" namespace="" name="OuterIterator"/>
    <constructor name="__construct" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Create an iterator from anything that is traversable"/>
      <return type="void"/>
    </docblock>
    <parameter name="iterator" optional="false" byreference="false" type="object" class="Traversable"/>
  </constructor>
    <method name="current" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get the current value"/>
      <return type="mixed"/>
    </docblock>
  </method>
    <method name="getInnerIterator" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get the inner iterator"/>
      <return type="Traversable"/>
    </docblock>
  </method>
    <method name="key" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Get the key of the current element"/>
      <return type="scalar"/>
    </docblock>
  </method>
    <method name="next" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Forward to the next element"/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="rewind" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Rewind to the first element"/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="valid" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Checks if the iterator is valid"/>
      <return type="bool"/>
    </docblock>
  </method>
  </parent>
  <interface full="OuterIterator" namespace="" name="OuterIterator">
    <extends full="Iterator" namespace="" name="Iterator"/>
    <method name="getInnerIterator" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Returns the inner iterator for the current entry"/>
      <return type="Iterator"/>
    </docblock>
  </method>
    <method name="current" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="mixed"/>
    </docblock>
  </method>
    <method name="key" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="scalar"/>
    </docblock>
  </method>
    <method name="next" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="rewind" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="void"/>
    </docblock>
  </method>
    <method name="valid" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact=""/>
      <return type="bool"/>
    </docblock>
  </method>
  </interface>
</class>
