<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PhpCsFixer\Tokenizer\Token" namespace="PhpCsFixer\Tokenizer" name="Token" abstract="false" final="false" start="23" end="655">
  <file path="../vendor/friendsofphp/php-cs-fixer/src/Tokenizer" file="Token.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/friendsofphp/php-cs-fixer/src/Tokenizer/Token.php" size="18409" time="2021-11-15T17:17:55+00:00" unixtime="1636996675" sha1="78957d47f261a7785f8d29fe4b1d35b81d4ac7e6" relative="vendor/friendsofphp/php-cs-fixer/src/Tokenizer/Token.php"/>
  <docblock>
    <description compact="Representation of single token.">As a token prototype you should understand a single element generated by token_get_all.</description>
    <author value="Dariusz RumiÅ„ski &lt;dariusz.ruminski@gmail.com&gt;"/>
  </docblock>
  <member name="content" visibility="private" static="false" line="30">
    <docblock>
      <description compact="Content of token prototype."/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="id" visibility="private" static="false" line="37">
    <docblock>
      <description compact="ID of token prototype, if available."/>
      <var type="object">
        <type full="PhpCsFixer\Tokenizer\null|int" namespace="PhpCsFixer\Tokenizer" name="null|int"/>
      </var>
    </docblock>
  </member>
  <member name="isArray" visibility="private" static="false" line="44">
    <docblock>
      <description compact="If token prototype is an array."/>
      <var type="object">
        <type full="PhpCsFixer\Tokenizer\bool" namespace="PhpCsFixer\Tokenizer" name="bool"/>
      </var>
    </docblock>
  </member>
  <member name="changed" default="false" type="boolean" visibility="private" static="false" line="51">
    <docblock>
      <description compact="Flag is token was changed."/>
      <var type="object">
        <type full="PhpCsFixer\Tokenizer\bool" namespace="PhpCsFixer\Tokenizer" name="bool"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="56" end="90" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param description="token prototype" type="object" variable="$token">
        <type full="PhpCsFixer\Tokenizer\array|string" namespace="PhpCsFixer\Tokenizer" name="array|string"/>
      </param>
    </docblock>
    <parameter name="token" byreference="false" type="{unknown}"/>
  </constructor>
  <method name="getCastTokenKinds" start="95" end="100" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description/>
      <return type="array" of="object">
        <type full="PhpCsFixer\Tokenizer\int" namespace="PhpCsFixer\Tokenizer" name="int"/>
      </return>
    </docblock>
  </method>
  <method name="getClassyTokenKinds" start="107" end="112" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Get classy tokens kinds: T_CLASS, T_INTERFACE and T_TRAIT."/>
      <return type="array" of="object">
        <type full="PhpCsFixer\Tokenizer\int" namespace="PhpCsFixer\Tokenizer" name="int"/>
      </return>
    </docblock>
  </method>
  <method name="getObjectOperatorKinds" start="119" end="131" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Get object operator tokens kinds: T_OBJECT_OPERATOR and (if available) T_NULLSAFE_OBJECT_OPERATOR."/>
      <return type="array" of="object">
        <type full="PhpCsFixer\Tokenizer\int" namespace="PhpCsFixer\Tokenizer" name="int"/>
      </return>
    </docblock>
  </method>
  <method name="clear" start="140" end="148" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Clear token at given index.">Clearing means override token by empty string.</description>
      <deprecated value="since 2.4"/>
    </docblock>
  </method>
  <method name="clearChanged" start="155" end="161" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Clear internal flag if token was changed."/>
      <deprecated value="since 2.4"/>
    </docblock>
  </method>
  <method name="equals" start="173" end="217" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Check if token is equals to given one.">If tokens are arrays, then only keys defined in parameter token are checked.</description>
      <param description="token or it's prototype" type="object" variable="$other">
        <type full="PhpCsFixer\Tokenizer\array|string|Token" namespace="PhpCsFixer\Tokenizer" name="array|string|Token"/>
      </param>
      <param description="perform a case sensitive comparison" type="object" variable="$caseSensitive">
        <type full="PhpCsFixer\Tokenizer\bool" namespace="PhpCsFixer\Tokenizer" name="bool"/>
      </param>
      <return type="object">
        <type full="PhpCsFixer\Tokenizer\bool" namespace="PhpCsFixer\Tokenizer" name="bool"/>
      </return>
    </docblock>
    <parameter name="other" byreference="false" type="{unknown}"/>
    <parameter name="caseSensitive" byreference="false" type="boolean" default="true"/>
    <inline>
      <comment value="detect unknown keys" line="213"/>
    </inline>
  </method>
  <method name="equalsAny" start="227" end="236" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Check if token is equals to one of given."/>
      <param description="array of tokens or token prototypes" type="array" variable="$others"/>
      <param description="perform a case sensitive comparison" type="object" variable="$caseSensitive">
        <type full="PhpCsFixer\Tokenizer\bool" namespace="PhpCsFixer\Tokenizer" name="bool"/>
      </param>
      <return type="object">
        <type full="PhpCsFixer\Tokenizer\bool" namespace="PhpCsFixer\Tokenizer" name="bool"/>
      </return>
    </docblock>
    <parameter name="others" byreference="false" type="array"/>
    <parameter name="caseSensitive" byreference="false" type="boolean" default="true"/>
  </method>
  <method name="isKeyCaseSensitive" start="248" end="255" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="A helper method used to find out whether or not a certain input token has to be case-sensitively matched."/>
      <param description="bool&gt;|bool $caseSensitive global case sensitiveness or an array of booleans, whose keys should match" type="object">the ones used in $others. If any is missing, the default case-sensitive
                                            comparison is used<type full="PhpCsFixer\Tokenizer\array&lt;int" namespace="PhpCsFixer\Tokenizer" name="array&lt;int"/></param>
      <param description="the key of the token that has to be looked up" type="int" variable="$key"/>
      <return type="object">
        <type full="PhpCsFixer\Tokenizer\bool" namespace="PhpCsFixer\Tokenizer" name="bool"/>
      </return>
    </docblock>
    <parameter name="caseSensitive" byreference="false" type="{unknown}"/>
    <parameter name="key" byreference="false" type="{unknown}"/>
  </method>
  <method name="getPrototype" start="260" end="270" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return description="token prototype" type="object">
        <type full="PhpCsFixer\Tokenizer\array|string" namespace="PhpCsFixer\Tokenizer" name="array|string"/>
      </return>
    </docblock>
  </method>
  <method name="getContent" start="279" end="282" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get token's content.">It shall be used only for getting the content of token, not for checking it against excepted value.</description>
      <return type="string"/>
    </docblock>
  </method>
  <method name="getId" start="291" end="294" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get token's id.">It shall be used only for getting the internal id of token, not for checking it against excepted value.</description>
      <return type="object">
        <type full="PhpCsFixer\Tokenizer\null|int" namespace="PhpCsFixer\Tokenizer" name="null|int"/>
      </return>
    </docblock>
  </method>
  <method name="getName" start="303" end="310" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Get token's name.">It shall be used only for getting the name of token, not for checking it against excepted value.</description>
      <return description="token name" type="object">
        <type full="PhpCsFixer\Tokenizer\null|string" namespace="PhpCsFixer\Tokenizer" name="null|string"/>
      </return>
    </docblock>
  </method>
  <method name="getNameForId" start="321" end="330" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Get token's name.">It shall be used only for getting the name of token, not for checking it against excepted value.</description>
      <param type="int" variable="$id"/>
      <return description="token name" type="object">
        <type full="PhpCsFixer\Tokenizer\null|string" namespace="PhpCsFixer\Tokenizer" name="null|string"/>
      </return>
    </docblock>
    <parameter name="id" byreference="false" type="{unknown}"/>
  </method>
  <method name="getKeywords" start="337" end="367" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Generate array containing all keywords that exists in PHP version in use."/>
      <return description="int&gt;" type="object">
        <type full="PhpCsFixer\Tokenizer\array&lt;int" namespace="PhpCsFixer\Tokenizer" name="array&lt;int"/>
      </return>
    </docblock>
  </method>
  <method name="getMagicConstants" start="376" end="385" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Generate array containing all predefined constants that exists in PHP version in use."/>
      <see value="https://php.net/manual/en/language.constants.predefined.php"/>
      <return description="int&gt;" type="object">
        <type full="PhpCsFixer\Tokenizer\array&lt;int" namespace="PhpCsFixer\Tokenizer" name="array&lt;int"/>
      </return>
    </docblock>
  </method>
  <method name="isArray" start="392" end="395" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Check if token prototype is an array."/>
      <return description="is array" type="object">
        <type full="PhpCsFixer\Tokenizer\bool" namespace="PhpCsFixer\Tokenizer" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="isCast" start="402" end="405" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Check if token is one of type cast tokens."/>
      <return type="object">
        <type full="PhpCsFixer\Tokenizer\bool" namespace="PhpCsFixer\Tokenizer" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="isChanged" start="414" end="419" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Check if token was changed."/>
      <return type="object">
        <type full="PhpCsFixer\Tokenizer\bool" namespace="PhpCsFixer\Tokenizer" name="bool"/>
      </return>
      <deprecated value="since 2.4"/>
    </docblock>
  </method>
  <method name="isClassy" start="426" end="429" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Check if token is one of classy tokens: T_CLASS, T_INTERFACE or T_TRAIT."/>
      <return type="object">
        <type full="PhpCsFixer\Tokenizer\bool" namespace="PhpCsFixer\Tokenizer" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="isComment" start="436" end="441" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Check if token is one of comment tokens: T_COMMENT or T_DOC_COMMENT."/>
      <return type="object">
        <type full="PhpCsFixer\Tokenizer\bool" namespace="PhpCsFixer\Tokenizer" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="isObjectOperator" start="448" end="451" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Check if token is one of object operator tokens: T_OBJECT_OPERATOR or T_NULLSAFE_OBJECT_OPERATOR."/>
      <return type="object">
        <type full="PhpCsFixer\Tokenizer\bool" namespace="PhpCsFixer\Tokenizer" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="isEmpty" start="460" end="465" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Check if token is empty, e.g. because of clearing."/>
      <return type="object">
        <type full="PhpCsFixer\Tokenizer\bool" namespace="PhpCsFixer\Tokenizer" name="bool"/>
      </return>
      <deprecated value="since 2.4"/>
    </docblock>
  </method>
  <method name="isGivenKind" start="474" end="477" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Check if token is one of given kind."/>
      <param description="kind or array of kinds" type="array" variable="$possibleKind" of="object">
        <type full="PhpCsFixer\Tokenizer\int|int" namespace="PhpCsFixer\Tokenizer" name="int|int"/>
      </param>
      <return type="object">
        <type full="PhpCsFixer\Tokenizer\bool" namespace="PhpCsFixer\Tokenizer" name="bool"/>
      </return>
    </docblock>
    <parameter name="possibleKind" byreference="false" type="{unknown}"/>
  </method>
  <method name="isKeyword" start="484" end="489" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Check if token is a keyword."/>
      <return type="object">
        <type full="PhpCsFixer\Tokenizer\bool" namespace="PhpCsFixer\Tokenizer" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="isNativeConstant" start="496" end="501" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Check if token is a native PHP constant: true, false or null."/>
      <return type="object">
        <type full="PhpCsFixer\Tokenizer\bool" namespace="PhpCsFixer\Tokenizer" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="isMagicConstant" start="510" end="515" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns if the token is of a Magic constants type."/>
      <see value="https://php.net/manual/en/language.constants.predefined.php"/>
      <return type="object">
        <type full="PhpCsFixer\Tokenizer\bool" namespace="PhpCsFixer\Tokenizer" name="bool"/>
      </return>
    </docblock>
  </method>
  <method name="isWhitespace" start="524" end="535" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Check if token is whitespace."/>
      <param description="whitespace characters, default is &quot; \t\n\r\0\x0B&quot;" type="object" variable="$whitespaces">
        <type full="PhpCsFixer\Tokenizer\null|string" namespace="PhpCsFixer\Tokenizer" name="null|string"/>
      </param>
      <return type="object">
        <type full="PhpCsFixer\Tokenizer\bool" namespace="PhpCsFixer\Tokenizer" name="bool"/>
      </return>
    </docblock>
    <parameter name="whitespaces" byreference="false" type="string" default="&quot; \t\n\r\0\x0B&quot;"/>
  </method>
  <method name="override" start="546" end="570" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Override token.">If called on Token inside Tokens collection please use `Tokens::overrideAt` instead.</description>
      <param description="token prototype" type="object" variable="$other">
        <type full="PhpCsFixer\Tokenizer\array|string|Token" namespace="PhpCsFixer\Tokenizer" name="array|string|Token"/>
      </param>
      <deprecated value="since 2.4"/>
    </docblock>
    <parameter name="other" byreference="false" type="{unknown}"/>
  </method>
  <method name="setContent" start="577" end="595" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param type="string" variable="$content"/>
      <deprecated value="since 2.4"/>
    </docblock>
    <parameter name="content" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="setting empty content is clearing the token" line="589"/>
    </inline>
  </method>
  <method name="toArray" start="597" end="606" abstract="false" final="false" static="false" visibility="public"/>
  <method name="toJson" start="613" end="636" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <param description="JSON encode option" type="array" variable="$options" of="object">
        <type full="PhpCsFixer\Tokenizer\null|string" namespace="PhpCsFixer\Tokenizer" name="null|string"/>
      </param>
      <return type="string"/>
    </docblock>
    <parameter name="options" byreference="false" type="array" default="NULL"/>
  </method>
  <method name="getTokenKindsForNames" start="643" end="654" abstract="false" final="false" static="true" visibility="private">
    <docblock>
      <description/>
      <param type="array" variable="$tokenNames" of="object">
        <type full="PhpCsFixer\Tokenizer\string" namespace="PhpCsFixer\Tokenizer" name="string"/>
      </param>
      <return description="int&gt;" type="object">
        <type full="PhpCsFixer\Tokenizer\array&lt;int" namespace="PhpCsFixer\Tokenizer" name="array&lt;int"/>
      </return>
    </docblock>
    <parameter name="tokenNames" byreference="false" type="array"/>
  </method>
</class>
