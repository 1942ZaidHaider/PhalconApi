<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PhpCsFixer\Runner\Runner" namespace="PhpCsFixer\Runner" name="Runner" abstract="false" final="true" start="36" end="337">
  <file path="../vendor/friendsofphp/php-cs-fixer/src/Runner" file="Runner.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/friendsofphp/php-cs-fixer/src/Runner/Runner.php" size="9774" time="2021-11-15T17:17:55+00:00" unixtime="1636996675" sha1="b1558e9d927d387434175583e0de99f68e87d69b" relative="vendor/friendsofphp/php-cs-fixer/src/Runner/Runner.php"/>
  <docblock>
    <description/>
    <author value="Dariusz RumiÅ„ski &lt;dariusz.ruminski@gmail.com&gt;"/>
  </docblock>
  <member name="differ" visibility="private" static="false" line="41">
    <docblock>
      <description/>
      <var type="object">
        <type full="PhpCsFixer\Differ\DifferInterface" namespace="PhpCsFixer\Differ" name="DifferInterface"/>
      </var>
    </docblock>
  </member>
  <member name="directory" visibility="private" static="false" line="46">
    <docblock>
      <description/>
      <var type="object">
        <type full="PhpCsFixer\Cache\DirectoryInterface" namespace="PhpCsFixer\Cache" name="DirectoryInterface"/>
      </var>
    </docblock>
  </member>
  <member name="eventDispatcher" visibility="private" static="false" line="51">
    <docblock>
      <description/>
      <var type="object">
        <type full="PhpCsFixer\Runner\null|EventDispatcherInterface" namespace="PhpCsFixer\Runner" name="null|EventDispatcherInterface"/>
      </var>
    </docblock>
  </member>
  <member name="errorsManager" visibility="private" static="false" line="56">
    <docblock>
      <description/>
      <var type="object">
        <type full="PhpCsFixer\Error\ErrorsManager" namespace="PhpCsFixer\Error" name="ErrorsManager"/>
      </var>
    </docblock>
  </member>
  <member name="cacheManager" visibility="private" static="false" line="61">
    <docblock>
      <description/>
      <var type="object">
        <type full="PhpCsFixer\Cache\CacheManagerInterface" namespace="PhpCsFixer\Cache" name="CacheManagerInterface"/>
      </var>
    </docblock>
  </member>
  <member name="isDryRun" visibility="private" static="false" line="66">
    <docblock>
      <description/>
      <var type="object">
        <type full="PhpCsFixer\Runner\bool" namespace="PhpCsFixer\Runner" name="bool"/>
      </var>
    </docblock>
  </member>
  <member name="linter" visibility="private" static="false" line="71">
    <docblock>
      <description/>
      <var type="object">
        <type full="PhpCsFixer\Linter\LinterInterface" namespace="PhpCsFixer\Linter" name="LinterInterface"/>
      </var>
    </docblock>
  </member>
  <member name="finder" visibility="private" static="false" line="76">
    <docblock>
      <description/>
      <var type="object">
        <type full="\Traversable" namespace="" name="Traversable"/>
      </var>
    </docblock>
  </member>
  <member name="fixers" visibility="private" static="false" line="81">
    <docblock>
      <description/>
      <var type="array" of="object">
        <type full="PhpCsFixer\Runner\FixerInterface" namespace="PhpCsFixer\Runner" name="FixerInterface"/>
      </var>
    </docblock>
  </member>
  <member name="stopOnViolation" visibility="private" static="false" line="86">
    <docblock>
      <description/>
      <var type="object">
        <type full="PhpCsFixer\Runner\bool" namespace="PhpCsFixer\Runner" name="bool"/>
      </var>
    </docblock>
  </member>
  <constructor name="__construct" start="88" end="110" abstract="false" final="false" static="false" visibility="public">
    <parameter name="finder" byreference="false" type="{unknown}"/>
    <parameter name="fixers" byreference="false" type="array"/>
    <parameter name="differ" byreference="false" type="object">
      <type full="PhpCsFixer\Differ\DifferInterface" namespace="PhpCsFixer\Differ" name="DifferInterface"/>
    </parameter>
    <parameter name="eventDispatcher" byreference="false" type="object" default="NULL">
      <type full="Symfony\Component\EventDispatcher\EventDispatcherInterface" namespace="Symfony\Component\EventDispatcher" name="EventDispatcherInterface"/>
    </parameter>
    <parameter name="errorsManager" byreference="false" type="object">
      <type full="PhpCsFixer\Error\ErrorsManager" namespace="PhpCsFixer\Error" name="ErrorsManager"/>
    </parameter>
    <parameter name="linter" byreference="false" type="object">
      <type full="PhpCsFixer\Linter\LinterInterface" namespace="PhpCsFixer\Linter" name="LinterInterface"/>
    </parameter>
    <parameter name="isDryRun" byreference="false" type="{unknown}"/>
    <parameter name="cacheManager" byreference="false" type="object">
      <type full="PhpCsFixer\Cache\CacheManagerInterface" namespace="PhpCsFixer\Cache" name="CacheManagerInterface"/>
    </parameter>
    <parameter name="directory" byreference="false" type="object" default="NULL">
      <type full="PhpCsFixer\Cache\DirectoryInterface" namespace="PhpCsFixer\Cache" name="DirectoryInterface"/>
    </parameter>
    <parameter name="stopOnViolation" byreference="false" type="boolean" default="false"/>
  </constructor>
  <method name="fix" start="115" end="149" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description/>
      <return type="array"/>
    </docblock>
  </method>
  <method name="fixFile" start="151" end="299" abstract="false" final="false" static="false" visibility="private">
    <parameter name="file" byreference="false" type="object">
      <type full="SplFileInfo" namespace="" name="SplFileInfo"/>
    </parameter>
    <parameter name="lintingResult" byreference="false" type="object">
      <type full="PhpCsFixer\Linter\LintingResultInterface" namespace="PhpCsFixer\Linter" name="LintingResultInterface"/>
    </parameter>
    <inline>
      <comment value="We need to check if content was changed and then applied changes." line="225"/>
      <comment value="But we can't simple check $appliedFixers, because one fixer may revert" line="226"/>
      <comment value="work of other and both of them will mark collection as changed." line="227"/>
      <comment value="Therefore we need to check if code hashes changed." line="228"/>
    </inline>
  </method>
  <method name="processException" start="307" end="315" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description compact="Process an exception that occurred."/>
      <param type="string" variable="$name"/>
      <param type="object" variable="$e">
        <type full="\Throwable" namespace="" name="Throwable"/>
      </param>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="e" byreference="false" type="{unknown}"/>
  </method>
  <method name="dispatchEvent" start="320" end="336" abstract="false" final="false" static="false" visibility="private">
    <docblock>
      <description/>
      <param type="string" variable="$name"/>
    </docblock>
    <parameter name="name" byreference="false" type="{unknown}"/>
    <parameter name="event" byreference="false" type="object">
      <type full="PhpCsFixer\Event\Event" namespace="PhpCsFixer\Event" name="Event"/>
    </parameter>
    <inline>
      <comment value="BC compatibility &lt; Sf 4.3" line="326"/>
    </inline>
  </method>
</class>
