<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="Nette\Utils\ArrayList" namespace="Nette\Utils" name="ArrayList" abstract="false" final="false" start="19" end="135">
  <file path="../vendor/nette/utils/src/Utils" file="ArrayList.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/nette/utils/src/Utils/ArrayList.php" size="2631" time="2022-01-24T11:29:14+00:00" unixtime="1643023754" sha1="0deaed60f1d4886fec12e01ab367bfac1a629f61" relative="vendor/nette/utils/src/Utils/ArrayList.php"/>
  <docblock>
    <description compact="Provides the base class for a generic list (items can be accessed by index)."/>
    <template value="T"/>
  </docblock>
  <implements full="ArrayAccess" namespace="" name="ArrayAccess"/>
  <implements full="Countable" namespace="" name="Countable"/>
  <implements full="IteratorAggregate" namespace="" name="IteratorAggregate"/>
  <uses full="Nette\SmartObject" namespace="Nette" name="SmartObject" start="21" end="21"/>
  <member name="list" default="" type="array" visibility="private" static="false" line="24">
    <docblock>
      <var type="array" of="object">
        <type full="Nette\Utils\mixed" namespace="Nette\Utils" name="mixed"/>
      </var>
    </docblock>
  </member>
  <method name="from" start="32" end="41" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Transforms array to ArrayList."/>
      <param type="object" variable="$array">
        <type full="Nette\Utils\array&lt;T&gt;" namespace="Nette\Utils" name="array&lt;T&gt;"/>
      </param>
      <return resolution="static" type="object">
        <type full="Nette\Utils\ArrayList" namespace="Nette\Utils" name="ArrayList"/>
      </return>
    </docblock>
    <parameter name="array" byreference="false" type="array"/>
  </method>
  <method name="getIterator" start="48" end="51" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns an iterator over all items."/>
      <return description="T&gt;" type="object">
        <type full="\ArrayIterator&lt;int" namespace="" name="ArrayIterator&lt;int"/>
      </return>
    </docblock>
    <return type="object" nullable="false">
      <type full="ArrayIterator" namespace="" name="ArrayIterator"/>
    </return>
  </method>
  <method name="count" start="57" end="60" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Returns items count."/>
    </docblock>
    <return type="int" nullable="false"/>
  </method>
  <method name="offsetSet" start="69" end="80" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Replaces or appends a item."/>
      <param type="object" variable="$index">
        <type full="Nette\Utils\int|null" namespace="Nette\Utils" name="int|null"/>
      </param>
      <param type="object" variable="$value">
        <type full="Nette\Utils\T" namespace="Nette\Utils" name="T"/>
      </param>
      <throws type="object">
        <type full="Nette\Utils\Nette\OutOfRangeException" namespace="Nette\Utils\Nette" name="OutOfRangeException"/>
      </throws>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="index" byreference="false" type="{unknown}"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="offsetGet" start="90" end="97" abstract="false" final="false" static="false" visibility="public">
    <parameter name="index" byreference="false" type="{unknown}"/>
  </method>
  <method name="offsetExists" start="104" end="107" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Determines whether a item exists."/>
      <param type="int" variable="$index"/>
    </docblock>
    <return type="bool" nullable="false"/>
    <parameter name="index" byreference="false" type="{unknown}"/>
  </method>
  <method name="offsetUnset" start="115" end="122" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Removes the element at the specified position in this list."/>
      <param type="int" variable="$index"/>
      <throws type="object">
        <type full="Nette\Utils\Nette\OutOfRangeException" namespace="Nette\Utils\Nette" name="OutOfRangeException"/>
      </throws>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="index" byreference="false" type="{unknown}"/>
  </method>
  <method name="prepend" start="129" end="134" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Prepends a item."/>
      <param type="object" variable="$value">
        <type full="Nette\Utils\T" namespace="Nette\Utils" name="T"/>
      </param>
    </docblock>
    <return type="void" nullable="false"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <interface full="ArrayAccess" namespace="" name="ArrayAccess">
    <method name="offsetExists" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Whether an offset exists">Whether or not an offset exists.</description>
      <return type="bool"/>
    </docblock>
    <parameter name="offset" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
    <method name="offsetGet" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Offset to retrieve">Returns the value at specified offset.</description>
      <return type="mixed"/>
    </docblock>
    <parameter name="offset" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
    <method name="offsetSet" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Assign a value to the specified offset"/>
      <return type="void"/>
    </docblock>
    <parameter name="offset" optional="false" byreference="false" type="object" class="mixed"/>
    <parameter name="value" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
    <method name="offsetUnset" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Unset an offset">Unsets an offset.</description>
      <return type="void"/>
    </docblock>
    <parameter name="offset" optional="false" byreference="false" type="object" class="mixed"/>
  </method>
  </interface>
  <interface full="Countable" namespace="" name="Countable">
    <method name="count" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Count elements of an object"/>
      <return type="int"/>
    </docblock>
  </method>
  </interface>
  <interface full="IteratorAggregate" namespace="" name="IteratorAggregate">
    <extends full="Traversable" namespace="" name="Traversable"/>
    <method name="getIterator" abstract="false" static="false" visibility="public" final="false">
    <docblock>
      <description compact="Retrieve an external iterator"/>
      <return type="Traversable"/>
    </docblock>
  </method>
  </interface>
  <trait full="Nette\SmartObject" namespace="Nette" name="SmartObject">
    <method name="__call" start="27" end="43" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <throws type="object">
          <type full="Nette\MemberAccessException" namespace="Nette" name="MemberAccessException"/>
        </throws>
      </docblock>
      <parameter name="name" byreference="false" type="string"/>
      <parameter name="args" byreference="false" type="array"/>
    </method>
    <method name="__callStatic" start="49" end="52" abstract="false" final="false" static="true" visibility="public">
      <docblock>
        <description/>
        <throws type="object">
          <type full="Nette\MemberAccessException" namespace="Nette" name="MemberAccessException"/>
        </throws>
      </docblock>
      <parameter name="name" byreference="false" type="string"/>
      <parameter name="args" byreference="false" type="array"/>
    </method>
    <method name="__get" start="59" end="86" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <return type="mixed"/>
        <throws description="if the property is not defined." type="object">
          <type full="Nette\MemberAccessException" namespace="Nette" name="MemberAccessException"/>
        </throws>
      </docblock>
      <parameter name="name" byreference="false" type="string"/>
    </method>
    <method name="__set" start="94" end="120" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <param type="mixed" variable="$value"/>
        <return type="object">
          <type full="Nette\void" namespace="Nette" name="void"/>
        </return>
        <throws description="if the property is not defined or is read-only" type="object">
          <type full="Nette\MemberAccessException" namespace="Nette" name="MemberAccessException"/>
        </throws>
      </docblock>
      <parameter name="name" byreference="false" type="string"/>
      <parameter name="value" byreference="false" type="{unknown}"/>
    </method>
    <method name="__unset" start="127" end="133" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <return type="object">
          <type full="Nette\void" namespace="Nette" name="void"/>
        </return>
        <throws type="object">
          <type full="Nette\MemberAccessException" namespace="Nette" name="MemberAccessException"/>
        </throws>
      </docblock>
      <parameter name="name" byreference="false" type="string"/>
    </method>
    <method name="__isset" start="136" end="139" abstract="false" final="false" static="false" visibility="public">
      <return type="bool" nullable="false"/>
      <parameter name="name" byreference="false" type="string"/>
    </method>
  </trait>
</class>
