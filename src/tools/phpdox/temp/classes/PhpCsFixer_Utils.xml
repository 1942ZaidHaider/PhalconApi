<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="PhpCsFixer\Utils" namespace="PhpCsFixer" name="Utils" abstract="false" final="true" start="25" end="217">
  <file path="../vendor/friendsofphp/php-cs-fixer/src" file="Utils.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/friendsofphp/php-cs-fixer/src/Utils.php" size="5765" time="2021-11-15T17:17:55+00:00" unixtime="1636996675" sha1="759fce944524b7e5d32ca51251da7ccbc495428e" relative="vendor/friendsofphp/php-cs-fixer/src/Utils.php"/>
  <docblock>
    <description/>
    <author value="Dariusz Rumiński &lt;dariusz.ruminski@gmail.com&gt;"/>
    <author value="Graham Campbell &lt;graham@alt-three.com&gt;"/>
    <author value="Odín del Río &lt;odin.drp@gmail.com&gt;"/>
    <internal/>
  </docblock>
  <member name="deprecations" default="" type="array" visibility="private" static="true" line="30">
    <docblock>
      <description/>
      <var description="true&gt;" type="object">
        <type full="PhpCsFixer\array&lt;string" namespace="PhpCsFixer" name="array&lt;string"/>
      </var>
    </docblock>
  </member>
  <method name="calculateBitmask" start="39" end="50" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Calculate a bitmask for given constant names."/>
      <param description="constant names" type="array" variable="$options" of="object">
        <type full="PhpCsFixer\string" namespace="PhpCsFixer" name="string"/>
      </param>
      <return type="int"/>
    </docblock>
    <parameter name="options" byreference="false" type="array"/>
  </method>
  <method name="camelCaseToUnderscore" start="59" end="62" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Converts a camel cased string to a snake cased string."/>
      <param type="string" variable="$string"/>
      <return type="string"/>
    </docblock>
    <parameter name="string" byreference="false" type="{unknown}"/>
  </method>
  <method name="cmpInt" start="75" end="82" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Compare two integers for equality.">We'll return 0 if they're equal, 1 if the first is bigger than the
second, and -1 if the second is bigger than the first.</description>
      <param type="int" variable="$a"/>
      <param type="int" variable="$b"/>
      <return type="int"/>
    </docblock>
    <parameter name="a" byreference="false" type="{unknown}"/>
    <parameter name="b" byreference="false" type="{unknown}"/>
  </method>
  <method name="calculateTrailingWhitespaceIndent" start="91" end="107" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Calculate the trailing whitespace.">What we're doing here is grabbing everything after the final newline.</description>
      <return type="string"/>
    </docblock>
    <parameter name="token" byreference="false" type="object">
      <type full="PhpCsFixer\Tokenizer\Token" namespace="PhpCsFixer\Tokenizer" name="Token"/>
    </parameter>
  </method>
  <method name="stableSort" start="120" end="139" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Perform stable sorting using provided comparison function.">Stability is ensured by using Schwartzian transform.</description>
      <param type="array" variable="$elements" of="object">
        <type full="PhpCsFixer\mixed" namespace="PhpCsFixer" name="mixed"/>
      </param>
      <param description="a callable that takes a single element and returns the value to compare" type="object" variable="$getComparedValue">
        <type full="PhpCsFixer\callable" namespace="PhpCsFixer" name="callable"/>
      </param>
      <param description="a callable that compares two values" type="object" variable="$compareValues">
        <type full="PhpCsFixer\callable" namespace="PhpCsFixer" name="callable"/>
      </param>
      <return type="array" of="object">
        <type full="PhpCsFixer\mixed" namespace="PhpCsFixer" name="mixed"/>
      </return>
    </docblock>
    <parameter name="elements" byreference="false" type="array"/>
    <parameter name="getComparedValue" byreference="false" type="callable"/>
    <parameter name="compareValues" byreference="false" type="callable"/>
  </method>
  <method name="sortFixers" start="148" end="161" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Sort fixers by their priorities."/>
      <param type="array" variable="$fixers" of="object">
        <type full="PhpCsFixer\FixerInterface" namespace="PhpCsFixer" name="FixerInterface"/>
      </param>
      <return type="array" of="object">
        <type full="PhpCsFixer\FixerInterface" namespace="PhpCsFixer" name="FixerInterface"/>
      </return>
    </docblock>
    <parameter name="fixers" byreference="false" type="array"/>
    <inline>
      <comment value="Schwartzian transform is used to improve the efficiency and avoid" line="150"/>
      <comment value="`usort(): Array was modified by the user comparison function` warning for mocked objects." line="151"/>
    </inline>
  </method>
  <method name="naturalLanguageJoinWithBackticks" start="172" end="189" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Join names in natural language wrapped in backticks, e.g. `a`, `b` and `c`."/>
      <param type="array" variable="$names" of="object">
        <type full="PhpCsFixer\string" namespace="PhpCsFixer" name="string"/>
      </param>
      <throws type="object">
        <type full="\InvalidArgumentException" namespace="" name="InvalidArgumentException"/>
      </throws>
      <return type="string"/>
    </docblock>
    <parameter name="names" byreference="false" type="array"/>
  </method>
  <method name="triggerDeprecation" start="194" end="208" abstract="false" final="false" static="true" visibility="public">
    <docblock>
      <description compact="Handle triggering deprecation error."/>
    </docblock>
    <parameter name="futureException" byreference="false" type="object">
      <type full="Exception" namespace="" name="Exception"/>
    </parameter>
  </method>
  <method name="getTriggeredDeprecations" start="210" end="216" abstract="false" final="false" static="true" visibility="public"/>
</class>
