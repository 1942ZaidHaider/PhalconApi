<?xml version="1.0" encoding="UTF-8"?>
<class xmlns="http://xml.phpdox.net/src" full="League\Container\Inflector\Inflector" namespace="League\Container\Inflector" name="Inflector" abstract="false" final="false" start="9" end="123">
  <file path="../vendor/league/container/src/Inflector" file="Inflector.php" realpath="/home/cedcoss/gits/Phalcon/PhalconApi/src/vendor/league/container/src/Inflector/Inflector.php" size="2718" time="2021-07-09T08:23:52+00:00" unixtime="1625819032" sha1="f68e4eb9856c05c97e22a19f242156c87342d4be" relative="vendor/league/container/src/Inflector/Inflector.php"/>
  <implements full="League\Container\Argument\ArgumentResolverInterface" namespace="League\Container\Argument" name="ArgumentResolverInterface"/>
  <implements full="League\Container\Inflector\InflectorInterface" namespace="League\Container\Inflector" name="InflectorInterface"/>
  <uses full="League\Container\Argument\ArgumentResolverTrait" namespace="League\Container\Argument" name="ArgumentResolverTrait" start="11" end="11"/>
  <uses full="League\Container\ContainerAwareTrait" namespace="League\Container" name="ContainerAwareTrait" start="12" end="12"/>
  <member name="type" visibility="protected" static="false" line="17">
    <docblock>
      <description/>
      <var type="string"/>
    </docblock>
  </member>
  <member name="callback" visibility="protected" static="false" line="22">
    <docblock>
      <description/>
      <var type="object">
        <type full="League\Container\Inflector\callable|null" namespace="League\Container\Inflector" name="callable|null"/>
      </var>
    </docblock>
  </member>
  <member name="methods" default="" type="array" visibility="protected" static="false" line="27">
    <docblock>
      <description/>
      <var type="array"/>
    </docblock>
  </member>
  <member name="properties" default="" type="array" visibility="protected" static="false" line="32">
    <docblock>
      <description/>
      <var type="array"/>
    </docblock>
  </member>
  <constructor name="__construct" start="40" end="44" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="Construct."/>
      <param type="string" variable="$type"/>
      <param type="object" variable="$callback">
        <type full="League\Container\Inflector\callable|null" namespace="League\Container\Inflector" name="callable|null"/>
      </param>
    </docblock>
    <parameter name="type" byreference="false" type="string"/>
    <parameter name="callback" byreference="false" type="callable" default="NULL"/>
  </constructor>
  <method name="getType" start="49" end="52" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="string" nullable="false"/>
  </method>
  <method name="invokeMethod" start="57" end="62" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="League\Container\Inflector\InflectorInterface" namespace="League\Container\Inflector" name="InflectorInterface"/>
    </return>
    <parameter name="name" byreference="false" type="string"/>
    <parameter name="args" byreference="false" type="array"/>
  </method>
  <method name="invokeMethods" start="67" end="74" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="League\Container\Inflector\InflectorInterface" namespace="League\Container\Inflector" name="InflectorInterface"/>
    </return>
    <parameter name="methods" byreference="false" type="array"/>
  </method>
  <method name="setProperty" start="79" end="84" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="League\Container\Inflector\InflectorInterface" namespace="League\Container\Inflector" name="InflectorInterface"/>
    </return>
    <parameter name="property" byreference="false" type="string"/>
    <parameter name="value" byreference="false" type="{unknown}"/>
  </method>
  <method name="setProperties" start="89" end="96" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <return type="object" nullable="false">
      <type full="League\Container\Inflector\InflectorInterface" namespace="League\Container\Inflector" name="InflectorInterface"/>
    </return>
    <parameter name="properties" byreference="false" type="array"/>
  </method>
  <method name="inflect" start="101" end="122" abstract="false" final="false" static="false" visibility="public">
    <docblock>
      <description compact="{@inheritdoc}"/>
    </docblock>
    <parameter name="object" byreference="false" type="{unknown}"/>
    <inline>
      <comment value="array_combine() can technically return false" line="106"/>
    </inline>
  </method>
  <interface full="League\Container\Argument\ArgumentResolverInterface" namespace="League\Container\Argument" name="ArgumentResolverInterface">
    <extends full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
    <method name="resolveArguments" start="17" end="17" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Resolve an array of arguments to their concrete implementations."/>
        <param type="array" variable="$arguments"/>
        <return type="array"/>
      </docblock>
      <return type="array" nullable="false"/>
      <parameter name="arguments" byreference="false" type="array"/>
    </method>
    <method name="reflectArguments" start="27" end="27" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Resolves the correct arguments to be passed to a method."/>
        <param type="object" variable="$method">
          <type full="ReflectionFunctionAbstract" namespace="" name="ReflectionFunctionAbstract"/>
        </param>
        <param type="array" variable="$args"/>
        <return type="array"/>
      </docblock>
      <return type="array" nullable="false"/>
      <parameter name="method" byreference="false" type="object">
        <type full="ReflectionFunctionAbstract" namespace="" name="ReflectionFunctionAbstract"/>
      </parameter>
      <parameter name="args" byreference="false" type="array" default=""/>
    </method>
  </interface>
  <interface full="League\Container\Inflector\InflectorInterface" namespace="League\Container\Inflector" name="InflectorInterface">
    <method name="getType" start="12" end="12" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the type."/>
        <return type="string"/>
      </docblock>
      <return type="string" nullable="false"/>
    </method>
    <method name="invokeMethod" start="22" end="22" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Defines a method to be invoked on the subject object."/>
        <param type="string" variable="$name"/>
        <param type="array" variable="$args"/>
        <return resolution="self" type="object">
          <type full="League\Container\Inflector\InflectorInterface" namespace="League\Container\Inflector" name="InflectorInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Inflector\InflectorInterface" namespace="League\Container\Inflector" name="InflectorInterface"/>
      </return>
      <parameter name="name" byreference="false" type="string"/>
      <parameter name="args" byreference="false" type="array"/>
    </method>
    <method name="invokeMethods" start="31" end="31" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Defines multiple methods to be invoked on the subject object."/>
        <param type="array" variable="$methods"/>
        <return resolution="self" type="object">
          <type full="League\Container\Inflector\InflectorInterface" namespace="League\Container\Inflector" name="InflectorInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Inflector\InflectorInterface" namespace="League\Container\Inflector" name="InflectorInterface"/>
      </return>
      <parameter name="methods" byreference="false" type="array"/>
    </method>
    <method name="setProperty" start="41" end="41" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Defines a property to be set on the subject object."/>
        <param type="string" variable="$property"/>
        <param type="mixed" variable="$value"/>
        <return resolution="self" type="object">
          <type full="League\Container\Inflector\InflectorInterface" namespace="League\Container\Inflector" name="InflectorInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Inflector\InflectorInterface" namespace="League\Container\Inflector" name="InflectorInterface"/>
      </return>
      <parameter name="property" byreference="false" type="string"/>
      <parameter name="value" byreference="false" type="{unknown}"/>
    </method>
    <method name="setProperties" start="50" end="50" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Defines multiple properties to be set on the subject object."/>
        <param type="array" variable="$properties"/>
        <return resolution="self" type="object">
          <type full="League\Container\Inflector\InflectorInterface" namespace="League\Container\Inflector" name="InflectorInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Inflector\InflectorInterface" namespace="League\Container\Inflector" name="InflectorInterface"/>
      </return>
      <parameter name="properties" byreference="false" type="array"/>
    </method>
    <method name="inflect" start="59" end="59" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Apply inflections to an object."/>
        <param type="object" variable="$object"/>
        <return type="object">
          <type full="League\Container\Inflector\void" namespace="League\Container\Inflector" name="void"/>
        </return>
      </docblock>
      <parameter name="object" byreference="false" type="{unknown}"/>
    </method>
  </interface>
  <trait full="League\Container\Argument\ArgumentResolverTrait" namespace="League\Container\Argument" name="ArgumentResolverTrait">
    <method name="resolveArguments" start="17" end="66" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
      <return type="array" nullable="false"/>
      <parameter name="arguments" byreference="false" type="array"/>
    </method>
    <method name="reflectArguments" start="71" end="109" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="{@inheritdoc}"/>
      </docblock>
      <return type="array" nullable="false"/>
      <parameter name="method" byreference="false" type="object">
        <type full="ReflectionFunctionAbstract" namespace="" name="ReflectionFunctionAbstract"/>
      </parameter>
      <parameter name="args" byreference="false" type="array" default=""/>
    </method>
    <method name="getContainer" start="114" end="114" abstract="true" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <return type="object">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
      </return>
    </method>
    <method name="getLeagueContainer" start="119" end="119" abstract="true" final="false" static="false" visibility="public">
      <docblock>
        <description/>
        <return type="object">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Container" namespace="League\Container" name="Container"/>
      </return>
    </method>
  </trait>
  <trait full="League\Container\ContainerAwareTrait" namespace="League\Container" name="ContainerAwareTrait">
    <member name="container" visibility="protected" static="false" line="13">
      <docblock>
        <description/>
        <var type="object">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </var>
      </docblock>
    </member>
    <member name="leagueContainer" visibility="protected" static="false" line="18">
      <docblock>
        <description/>
        <var type="object">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </var>
      </docblock>
    </member>
    <method name="setContainer" start="27" end="32" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set a container."/>
        <param type="object" variable="$container">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </param>
        <return type="object">
          <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
      </return>
      <parameter name="container" byreference="false" type="object">
        <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
      </parameter>
    </method>
    <method name="getContainer" start="39" end="46" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the container."/>
        <return type="object">
          <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="Psr\Container\ContainerInterface" namespace="Psr\Container" name="ContainerInterface"/>
      </return>
    </method>
    <method name="setLeagueContainer" start="55" end="61" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Set a container."/>
        <param type="object" variable="$container">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </param>
        <return resolution="self" type="object">
          <type full="League\Container\ContainerAwareTrait" namespace="League\Container" name="ContainerAwareTrait"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\ContainerAwareInterface" namespace="League\Container" name="ContainerAwareInterface"/>
      </return>
      <parameter name="container" byreference="false" type="object">
        <type full="League\Container\Container" namespace="League\Container" name="Container"/>
      </parameter>
    </method>
    <method name="getLeagueContainer" start="68" end="75" abstract="false" final="false" static="false" visibility="public">
      <docblock>
        <description compact="Get the container."/>
        <return type="object">
          <type full="League\Container\Container" namespace="League\Container" name="Container"/>
        </return>
      </docblock>
      <return type="object" nullable="false">
        <type full="League\Container\Container" namespace="League\Container" name="Container"/>
      </return>
    </method>
  </trait>
</class>
